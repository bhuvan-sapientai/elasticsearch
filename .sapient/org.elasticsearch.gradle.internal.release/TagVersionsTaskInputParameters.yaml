---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
methods:
- method:
    name: "release"
    sourceCodeSignature: "void release(String version)"
    returnType: "void"
    parameters:
    - name: "version"
      type: "java.lang.String"
    instructionFingerprint: "86F67F9F782E37BE9AEA231BE2D235EF"
  paths:
  - testPathName: "releaseTest"
    constructorSignature: "<init>(org.gradle.initialization.layout.BuildLayout) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "version"
      valueUuid: "version"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(version):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
        parameters:
        - name: "layout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.initialization.layout.BuildLayout"
            uuid: "layout"
      valueType: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "version1"
      valueType: "java.lang.String"
      uuid: "version"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "tagVersions"
    sourceCodeSignature: "void tagVersions(List<String> version)"
    returnType: "void"
    parameters:
    - name: "version"
      type: "java.util.List"
      genericType: "java.lang.String"
    instructionFingerprint: "2439C1B43744A749C1453A75FA9F57B3"
  paths:
  - testPathName: "tagVersionsTest"
    constructorSignature: "<init>(org.gradle.initialization.layout.BuildLayout) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "version"
      valueUuid: "version"
    - type: "STATIC"
      name: "AbstractVersionsTask.class"
      valueUuid: "AbstractVersionsTask.class"
      methodExercised:
        expression: "splitVersionIds(version):map"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
        parameters:
        - name: "layout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.initialization.layout.BuildLayout"
            uuid: "layout"
      valueType: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "version"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.release.AbstractVersionsTask"
      uuid: "AbstractVersionsTask.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Integer"
      uuid: "map"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "executeTask"
    sourceCodeSignature: "void executeTask()"
    returnType: "void"
    throwsExceptions:
    - "java.io.IOException"
    instructionFingerprint: "15F2DABA465042CC2F2B8538EA3ADEBC"
  paths:
  - testPathName: "executeTaskWhenReleaseVersionIsNullThrowsIllegalArgumentException"
    constructorSignature: "<init>(org.gradle.initialization.layout.BuildLayout) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "illegalArgumentException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
        parameters:
        - name: "layout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.initialization.layout.BuildLayout"
            uuid: "layout"
      valueType: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
      uuid: "target"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Release version not specified"
            valueType: "java.lang.String"
            uuid: "s"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
    branches:
    - lineNumber: 56
      expression: "releaseVersion == null"
      range: "(56,13)-(56,34)"
      evaluatedAs: true
- method:
    name: "addVersionRecord"
    sourceCodeSignature: "Optional<List<String>> addVersionRecord(List<String> versionRecordLines,\
      \ Version release, int id)"
    returnType: "java.util.Optional"
    genericReturnType: "java.util.List<java.lang.String>"
    parameters:
    - name: "versionRecordLines"
      type: "java.util.List"
      genericType: "java.lang.String"
    - name: "release"
      type: "org.elasticsearch.gradle.Version"
    - name: "id"
      type: "int"
    instructionFingerprint: "CD6CE2636B99363C73BE2E0EC07BF7CD"
  paths:
  - testPathName: "addVersionRecordWhenMMatchesEqualsFalseThrowsIllegalArgumentException"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "versionRecordLines"
      valueUuid: "versionRecordLines"
    - type: "INPUT"
      name: "release"
      valueUuid: "release"
    - type: "INPUT"
      name: "id"
      valueUuid: "id"
    - type: "RESULT"
      name: "result"
      valueUuid: "illegalArgumentException"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "string"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "versionRecordLines"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "release"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "id"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Incorrect format for line [A]"
            valueType: "java.lang.String"
            uuid: "string2"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
    branches:
    - lineNumber: 106
      expression: "m.matches() == false"
      range: "(106,17)-(106,36)"
      evaluatedAs: true
      internalMethodName: "lambda$addVersionRecord$0"
  - testPathName: "addVersionRecordWhenExistingIsNull"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "versionRecordLines"
      valueUuid: "versionRecordLines"
    - type: "INPUT"
      name: "release"
      valueUuid: "release"
    - type: "INPUT"
      name: "id"
      valueUuid: "id"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(string2):version"
    - type: "RESULT"
      name: "result"
      valueUuid: "optional"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.sorted(java.util.Comparator)\
        \ : java.util.stream.Stream<java.util.Map$Entry<java.lang.Object,java.lang.Object>>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "versionRecordLines"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "release"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "id"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string2"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          uuid: "list2"
      valueType: "java.util.Optional"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "optional"
    branches:
    - lineNumber: 106
      expression: "m.matches() == false"
      range: "(106,17)-(106,36)"
      evaluatedAs: false
      internalMethodName: "lambda$addVersionRecord$0"
    - lineNumber: 111
      expression: "existing != null"
      range: "(111,13)-(111,28)"
      evaluatedAs: false
