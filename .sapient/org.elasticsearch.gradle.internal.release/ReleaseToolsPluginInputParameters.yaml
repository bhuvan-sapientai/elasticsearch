---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.release.ReleaseToolsPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "D13B3FB0E3011D86412726B48EA4FDA9"
  paths:
  - testPathName: "applyTest"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "projectLayout"
      valueUuid: "projectLayout"
      methodExercised:
        expression: "getProjectDirectory():directory"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getElasticsearchVersion():version"
    - type: "LOCAL_VARIABLE"
      name: "projectDirectory"
      valueUuid: "directory"
      methodExercised:
        expression: "dir(path):directory2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directory2"
      methodExercised:
        expression: "getAsFileTree():fileTree"
    - type: "LOCAL_VARIABLE"
      valueUuid: "fileTree"
      methodExercised:
        expression: "matching(patternSet2):fileTree2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object"
      methodExercised:
        expression: "mustRunAfter(objectArray):task"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-PrecommitTaskPlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer8"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer9"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer10"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "pruneChangelogsTask"
      methodExercised:
        expression: "setGroup(group2):void11"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "pruneChangelogsTask"
      methodExercised:
        expression: "setDescription(description2):void12"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "pruneChangelogsTask"
      methodExercised:
        expression: "setChangelogs(fileTree2):void13"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name,class-UpdateVersionsTask,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer10"
      methodExercised:
        expression: "named(name10):taskProvider10"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "named(name2):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "register(name3,class-ExtractCurrentVersionsTask):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "register(name4,class-TagVersionsTask):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "register(name5,class-SetCompatibleVersionsTask,configurationAction2-any):taskProvider5"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer6"
      methodExercised:
        expression: "register(name6,class-ValidateYamlAgainstSchemaTask,configurationAction3-any):taskProvider6"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer7"
      methodExercised:
        expression: "register(name7,class-GenerateReleaseNotesTask):taskProvider7"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer8"
      methodExercised:
        expression: "register(name8,class-GenerateReleaseNotesTask):taskProvider8"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer9"
      methodExercised:
        expression: "register(name9,class-PruneChangelogsTask):taskProvider9"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider10"
      methodExercised:
        expression: "configure(action4-any):void14"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "get():object"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider7"
      methodExercised:
        expression: "configure(action):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider8"
      methodExercised:
        expression: "configure(action2):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider9"
      methodExercised:
        expression: "configure(action3-any):void10"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "validateYamlAgainstSchemaTask"
      methodExercised:
        expression: "setGroup(group):void3"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "validateYamlAgainstSchemaTask"
      methodExercised:
        expression: "setDescription(description):void4"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "validateYamlAgainstSchemaTask"
      methodExercised:
        expression: "setInputFiles(fileTree2):void5"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "validateYamlAgainstSchemaTask"
      methodExercised:
        expression: "setJsonSchema(file2-any):void6"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "validateYamlAgainstSchemaTask"
      methodExercised:
        expression: "setReport(file4-any):void7"
    - type: "RESULT"
      name: "result"
      valueUuid: "void15"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "task.setJsonSchema(new File(project.getRootDir(), RESOURCES + \\\"\
        changelog-schema.json\\\"));"
      lineNumber: 67
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.ReleaseToolsPlugin"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
      valueType: "org.elasticsearch.gradle.internal.release.ReleaseToolsPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ProjectLayout"
      uuid: "projectLayout"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "directory"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "directory2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "docs/changelog"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileTree"
      uuid: "fileTree"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileTree"
      uuid: "fileTree2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.gradle.api.tasks.util.PatternSet"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.gradle.api.tasks.util.PatternSet"
            parameters: []
          valueType: "org.gradle.api.tasks.util.PatternSet"
          uuid: "patternSet"
        methodParameters:
        - name: "includes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "**/*.yml"
                  valueType: "java.lang.String"
                  uuid: "stringArrayItem1"
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "**/*.yaml"
                  valueType: "java.lang.String"
                  uuid: "stringArrayItem2"
            valueType: "java.lang.String[]"
            uuid: "stringArray"
        methodName: "include"
      valueType: "org.gradle.api.tasks.util.PatternSet"
      uuid: "patternSet2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.elasticsearch.gradle.internal.release.UpdateVersionsTask"
            uuid: "updateVersionsTask"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.conventions.precommit.PrecommitTaskPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.conventions.precommit.PrecommitTaskPlugin"
      uuid: "class-PrecommitTaskPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer10"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.release.PruneChangelogsTask"
      uuid: "pruneChangelogsTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Documentation"
      valueType: "java.lang.String"
      uuid: "group2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Removes changelog files that have been used in a previous release"
      valueType: "java.lang.String"
      uuid: "description2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "updateVersions"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.release.UpdateVersionsTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.release.UpdateVersionsTask"
      uuid: "class-UpdateVersionsTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "precommit"
      valueType: "java.lang.String"
      uuid: "name10"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spotlessApply"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extractCurrentVersions"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.release.ExtractCurrentVersionsTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.release.ExtractCurrentVersionsTask"
      uuid: "class-ExtractCurrentVersionsTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "tagVersions"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.release.TagVersionsTask"
      uuid: "class-TagVersionsTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "setCompatibleVersions"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.release.SetCompatibleVersionsTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.release.SetCompatibleVersionsTask"
      uuid: "class-SetCompatibleVersionsTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "validateChangelogs"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.precommit.ValidateYamlAgainstSchemaTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.ValidateYamlAgainstSchemaTask"
      uuid: "class-ValidateYamlAgainstSchemaTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "generateReleaseNotes"
      valueType: "java.lang.String"
      uuid: "name7"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.release.GenerateReleaseNotesTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.release.GenerateReleaseNotesTask"
      uuid: "class-GenerateReleaseNotesTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "generateStubReleaseNotes"
      valueType: "java.lang.String"
      uuid: "name8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pruneChangelogs"
      valueType: "java.lang.String"
      uuid: "name9"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.release.PruneChangelogsTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.release.PruneChangelogsTask"
      uuid: "class-PruneChangelogsTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Action"
      uuid: "action"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Action"
      uuid: "action2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.precommit.ValidateYamlAgainstSchemaTask"
      uuid: "validateYamlAgainstSchemaTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Documentation"
      valueType: "java.lang.String"
      uuid: "group"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Validate that the changelog YAML files comply with the changelog schema"
      valueType: "java.lang.String"
      uuid: "description"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file4-any"
    - sapientType: "VOID"
      uuid: "void15"
