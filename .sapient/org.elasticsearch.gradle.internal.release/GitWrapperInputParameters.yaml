---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.release.GitWrapper"
methods:
- method:
    name: "listRemotes"
    sourceCodeSignature: "Map<String, String> listRemotes()"
    returnType: "java.util.Map"
    genericReturnType: "java.lang.String,java.lang.String"
    instructionFingerprint: "E1BED89FC5E0132CA9A7C97DE18E9155"
  paths:
  - testPathName: "listRemotesTest"
    constructorSignature: "<init>(org.gradle.process.ExecOperations) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "runCommand(stringArray):string"
    - type: "RESULT"
      name: "result"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.filter(java.util.function.Predicate)\
        \ : java.util.stream.Stream<java.lang.String>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.GitWrapper"
        parameters:
        - name: "execOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.process.ExecOperations"
            uuid: "execOperations"
      valueType: "org.elasticsearch.gradle.internal.release.GitWrapper"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "git"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "remote"
            valueType: "java.lang.String"
            uuid: "stringArrayItem2"
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: "-v"
            valueType: "java.lang.String"
            uuid: "stringArrayItem3"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      uuid: "object"
- method:
    name: "runCommand"
    sourceCodeSignature: "String runCommand(String... args)"
    returnType: "java.lang.String"
    parameters:
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "F89BD2E75092D149403FF9AE0D6CC3DF"
  paths:
  - testPathName: "runCommandTest"
    constructorSignature: "<init>(org.gradle.process.ExecOperations) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      valueUuid: "args"
    - type: "FIELD"
      name: "execOperations"
      valueUuid: "execOperations"
      methodExercised:
        expression: "exec(action-any):execResult"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "execSpec"
      methodExercised:
        expression: "setCommandLine(args):void"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "execSpec"
      methodExercised:
        expression: "setStandardOutput(byteArrayOutputStream-any):baseExecSpec"
    - type: "RESULT"
      name: "result"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.GitWrapper"
        parameters:
        - name: "execOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.process.ExecOperations"
            uuid: "execOperations"
      valueType: "org.elasticsearch.gradle.internal.release.GitWrapper"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.gradle.process.ExecOperations"
      uuid: "execOperations"
    - sapientType: "MOCK"
      valueType: "org.gradle.process.ExecResult"
      uuid: "execResult"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.process.ExecSpec"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.process.ExecSpec"
      uuid: "execSpec"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "org.gradle.process.BaseExecSpec"
      uuid: "baseExecSpec"
    - sapientType: "ANY"
      valueType: "java.io.ByteArrayOutputStream"
      uuid: "byteArrayOutputStream-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
- method:
    name: "updateRemote"
    sourceCodeSignature: "void updateRemote(String remote)"
    returnType: "void"
    parameters:
    - name: "remote"
      type: "java.lang.String"
    instructionFingerprint: "65453904DB398BA26176C0B4FD0C3782"
  paths:
  - testPathName: "updateRemoteTest"
    constructorSignature: "<init>(org.gradle.process.ExecOperations) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "remote"
      valueUuid: "remote"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "runCommand(stringArray):string2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.GitWrapper"
        parameters:
        - name: "execOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.process.ExecOperations"
            uuid: "execOperations"
      valueType: "org.elasticsearch.gradle.internal.release.GitWrapper"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "remote1"
      valueType: "java.lang.String"
      uuid: "remote"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_runCommand1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "git"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "fetch"
            valueType: "java.lang.String"
            uuid: "stringArrayItem2"
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: "remote1"
            valueType: "java.lang.String"
            uuid: "remote"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "updateTags"
    sourceCodeSignature: "void updateTags(String remote)"
    returnType: "void"
    parameters:
    - name: "remote"
      type: "java.lang.String"
    instructionFingerprint: "38CA959A42A302BD5235225A9601357E"
  paths:
  - testPathName: "updateTagsTest"
    constructorSignature: "<init>(org.gradle.process.ExecOperations) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "remote"
      valueUuid: "remote"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "runCommand(stringArray):string2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.GitWrapper"
        parameters:
        - name: "execOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.process.ExecOperations"
            uuid: "execOperations"
      valueType: "org.elasticsearch.gradle.internal.release.GitWrapper"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "remote1"
      valueType: "java.lang.String"
      uuid: "remote"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_runCommand1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "git"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "fetch"
            valueType: "java.lang.String"
            uuid: "stringArrayItem2"
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: "--tags"
            valueType: "java.lang.String"
            uuid: "stringArrayItem3"
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: "remote1"
            valueType: "java.lang.String"
            uuid: "remote"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "listVersions"
    sourceCodeSignature: "Stream<QualifiedVersion> listVersions(String pattern)"
    returnType: "java.util.stream.Stream"
    genericReturnType: "org.elasticsearch.gradle.internal.release.QualifiedVersion"
    parameters:
    - name: "pattern"
      type: "java.lang.String"
    instructionFingerprint: "44E767A0CBE0ACEC880E5B6EB91C4D89"
  paths:
  - testPathName: "listVersionsTest"
    constructorSignature: "<init>(org.gradle.process.ExecOperations) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "pattern"
      valueUuid: "pattern"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "runCommand(stringArray):string"
    - type: "RESULT"
      name: "result"
      valueUuid: "stream2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream<java.lang.String>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.GitWrapper"
        parameters:
        - name: "execOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.process.ExecOperations"
            uuid: "execOperations"
      valueType: "org.elasticsearch.gradle.internal.release.GitWrapper"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "pattern"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "git"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "tag"
            valueType: "java.lang.String"
            uuid: "stringArrayItem2"
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: "-l"
            valueType: "java.lang.String"
            uuid: "stringArrayItem3"
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "pattern"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      genericValueType: "org.elasticsearch.gradle.internal.release.QualifiedVersion"
      uuid: "stream2"
- method:
    name: "listFiles"
    sourceCodeSignature: "Stream<String> listFiles(String ref, String path)"
    returnType: "java.util.stream.Stream"
    genericReturnType: "java.lang.String"
    parameters:
    - name: "ref"
      type: "java.lang.String"
    - name: "path"
      type: "java.lang.String"
    instructionFingerprint: "F032E72B71A642E65BC0A1744EF0900F"
  paths:
  - testPathName: "listFilesTest"
    constructorSignature: "<init>(org.gradle.process.ExecOperations) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "ref"
      valueUuid: "ref"
    - type: "INPUT"
      name: "path"
      valueUuid: "path"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "runCommand(stringArray):string"
    - type: "RESULT"
      name: "result"
      valueUuid: "stream"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.release.GitWrapper"
        parameters:
        - name: "execOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.process.ExecOperations"
            uuid: "execOperations"
      valueType: "org.elasticsearch.gradle.internal.release.GitWrapper"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ref1"
      valueType: "java.lang.String"
      uuid: "ref"
    - sapientType: "BASIC"
      content: !<regular>
        value: "path1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "git"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "ls-tree"
            valueType: "java.lang.String"
            uuid: "stringArrayItem2"
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: "--name-only"
            valueType: "java.lang.String"
            uuid: "stringArrayItem3"
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: "-r"
            valueType: "java.lang.String"
            uuid: "stringArrayItem4"
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: "ref1"
            valueType: "java.lang.String"
            uuid: "ref"
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: "path1"
            valueType: "java.lang.String"
            uuid: "path"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.stream.Stream"
        localVariableValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "string"
        methodParameters: []
        methodName: "lines"
      valueType: "java.util.stream.Stream"
      genericValueType: "java.lang.String"
      uuid: "stream"
