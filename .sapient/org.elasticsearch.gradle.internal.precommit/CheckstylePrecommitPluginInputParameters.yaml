---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.precommit.CheckstylePrecommitPlugin"
methods:
- method:
    name: "createTask"
    sourceCodeSignature: "TaskProvider<? extends Task> createTask(Project project)"
    returnType: "org.gradle.api.tasks.TaskProvider"
    genericReturnType: "? extends org.gradle.api.Task"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "9FCC60F3B680745D9F95727C146DDB11"
  paths:
  - testPathName: "createTaskWhenFileEqualsCheckstyleConfUrlGetProtocol"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "checkstyle"
      methodExercised:
        expression: "dependsOn(objectArray4):task7"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "checkstyle"
      methodExercised:
        expression: "getMaxHeapSize():property"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "checkstyle"
      methodExercised:
        expression: "reports(configureAction-any):checkstyleReports"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configDirectory"
      methodExercised:
        expression: "set(file2-any):void6"
    - type: "LOCAL_VARIABLE"
      name: "dependencies"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "addProvider(configurationName,provider2):void7"
    - type: "LOCAL_VARIABLE"
      name: "dependencies"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "addProvider(configurationName2,provider,configuration-any):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-CheckstyleExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-VersionCatalogsExtension):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object6"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "checkstyle"
      valueUuid: "object"
      methodExercised:
        expression: "getConfigDirectory():configDirectory"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object3"
      methodExercised:
        expression: "named(name5):versionCatalog"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "get():object5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object6"
      methodExercised:
        expression: "all(action7-any):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "fileCollection():configurableFileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "withType(class-JavaBasePlugin,configureAction2-any):domainObjectCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(pluginId):void5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getVersion():object2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "provider(value2-any):provider"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "provider(value3-any):provider2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getObjects():objectFactory"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "set(value):void10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "configureEach(action6-any):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "named(string7):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name3):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name4):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-Checkstyle):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "withType(class-Checkstyle):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "withType(class-Checkstyle):taskCollection3"
    - type: "LOCAL_VARIABLE"
      name: "copyCheckstyleConf"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action2-any):void"
    - type: "LOCAL_VARIABLE"
      name: "copyCheckstyleConf"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action3-any):void2"
    - type: "LOCAL_VARIABLE"
      name: "copyCheckstyleConf"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action4-any):void3"
    - type: "LOCAL_VARIABLE"
      name: "checkstyleTask"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action5-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action8-any):void13"
    - type: "LOCAL_VARIABLE"
      name: "versionCatalog"
      valueUuid: "versionCatalog"
      methodExercised:
        expression: "findLibrary(alias):optional"
    - type: "RESULT"
      name: "result"
      valueUuid: "taskProvider2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "File checkstyleDir = new File(project.getBuildDir(), \\\"checkstyle\\\
        \");"
      lineNumber: 41
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.precommit.CheckstylePrecommitPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.precommit.CheckstylePrecommitPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.quality.Checkstyle"
      uuid: "checkstyle"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task7"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.api.Task"
            uuid: "taskProvider"
      valueType: "java.lang.Object[]"
      uuid: "objectArray4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.quality.CheckstyleReports"
      uuid: "checkstyleReports"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.plugins.quality.CheckstyleReports"
      uuid: "configureAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "configDirectory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "configurationName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "configurationName2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.lang.String"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configuration-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.quality.CheckstyleExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.quality.CheckstyleExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.quality.CheckstyleExtension"
      uuid: "class-CheckstyleExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.VersionCatalogsExtension"
      uuid: "object3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.artifacts.VersionCatalogsExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.artifacts.VersionCatalogsExtension"
      uuid: "class-VersionCatalogsExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.VersionCatalog"
      uuid: "versionCatalog"
    - sapientType: "BASIC"
      content: !<regular>
        value: "buildLibs"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.MinimalExternalModuleDependency"
      uuid: "object5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action7-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.DomainObjectCollection"
      uuid: "domainObjectCollection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaBasePlugin"
      uuid: "class-JavaBasePlugin"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "pluginId"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object2"
      nameForMock: "object2"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value2-any"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "1g"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action6-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getTaskName1"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.Task"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "copyCheckstyleConf"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.Task"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.quality.Checkstyle"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.quality.Checkstyle"
      uuid: "class-Checkstyle"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action8-any"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "MOCK"
          valueType: "org.gradle.api.provider.Provider"
          uuid: "object4"
      valueType: "java.util.Optional"
      genericValueType: "org.gradle.api.provider.Provider<org.gradle.api.artifacts.MinimalExternalModuleDependency>"
      uuid: "optional"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "alias"
    branches:
    - lineNumber: 48
      expression: "\\\"jar\\\".equals(checkstyleConfUrl.getProtocol())"
      range: "(48,13)-(48,57)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "\\\"file\\\".equals(checkstyleConfUrl.getProtocol())"
      range: "(55,20)-(55,65)"
      evaluatedAs: true
  - testPathName: "createTaskWhenCaughtIOExceptionAndFileEqualsCheckstyleConfUrlGetProtocol"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "checkstyle"
      methodExercised:
        expression: "dependsOn(objectArray4):task7"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "checkstyle"
      methodExercised:
        expression: "getMaxHeapSize():property"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "checkstyle"
      methodExercised:
        expression: "reports(configureAction-any):checkstyleReports"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configDirectory"
      methodExercised:
        expression: "set(file2-any):void6"
    - type: "LOCAL_VARIABLE"
      name: "dependencies"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "addProvider(configurationName,provider2):void7"
    - type: "LOCAL_VARIABLE"
      name: "dependencies"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "addProvider(configurationName2,provider,configuration-any):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-CheckstyleExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-VersionCatalogsExtension):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object6"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "checkstyle"
      valueUuid: "object"
      methodExercised:
        expression: "getConfigDirectory():configDirectory"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object3"
      methodExercised:
        expression: "named(name3):versionCatalog"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "get():object5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object6"
      methodExercised:
        expression: "all(action7-any):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "fileCollection():configurableFileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "withType(class-JavaBasePlugin,configureAction2-any):domainObjectCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(pluginId):void5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getVersion():object2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "provider(value2-any):provider"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "provider(value3-any):provider2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getObjects():objectFactory"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "set(value):void10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "configureEach(action6-any):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "named(string7):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name2):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-Checkstyle):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "withType(class-Checkstyle):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "withType(class-Checkstyle):taskCollection3"
    - type: "LOCAL_VARIABLE"
      name: "copyCheckstyleConf"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action2-any):void"
    - type: "LOCAL_VARIABLE"
      name: "copyCheckstyleConf"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action3-any):void2"
    - type: "LOCAL_VARIABLE"
      name: "copyCheckstyleConf"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action4-any):void3"
    - type: "LOCAL_VARIABLE"
      name: "checkstyleTask"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action5-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action8-any):void13"
    - type: "LOCAL_VARIABLE"
      name: "versionCatalog"
      valueUuid: "versionCatalog"
      methodExercised:
        expression: "findLibrary(alias):optional"
    - type: "RESULT"
      name: "result"
      valueUuid: "taskProvider2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "File checkstyleDir = new File(project.getBuildDir(), \\\"checkstyle\\\
        \");"
      lineNumber: 41
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.precommit.CheckstylePrecommitPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.precommit.CheckstylePrecommitPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.quality.Checkstyle"
      uuid: "checkstyle"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task7"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.api.Task"
            uuid: "taskProvider"
      valueType: "java.lang.Object[]"
      uuid: "objectArray4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.quality.CheckstyleReports"
      uuid: "checkstyleReports"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.plugins.quality.CheckstyleReports"
      uuid: "configureAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "configDirectory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "configurationName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "configurationName2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.lang.String"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configuration-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.quality.CheckstyleExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.quality.CheckstyleExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.quality.CheckstyleExtension"
      uuid: "class-CheckstyleExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.VersionCatalogsExtension"
      uuid: "object3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.artifacts.VersionCatalogsExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.artifacts.VersionCatalogsExtension"
      uuid: "class-VersionCatalogsExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.VersionCatalog"
      uuid: "versionCatalog"
    - sapientType: "BASIC"
      content: !<regular>
        value: "buildLibs"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.MinimalExternalModuleDependency"
      uuid: "object5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action7-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.DomainObjectCollection"
      uuid: "domainObjectCollection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaBasePlugin"
      uuid: "class-JavaBasePlugin"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "pluginId"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object2"
      nameForMock: "object2"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value2-any"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "1g"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action6-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getTaskName1"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.Task"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "copyCheckstyleConf"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.Task"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.quality.Checkstyle"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.quality.Checkstyle"
      uuid: "class-Checkstyle"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action8-any"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "MOCK"
          valueType: "org.gradle.api.provider.Provider"
          uuid: "object4"
      valueType: "java.util.Optional"
      genericValueType: "org.gradle.api.provider.Provider<org.gradle.api.artifacts.MinimalExternalModuleDependency>"
      uuid: "optional"
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkstyle"
      valueType: "java.lang.String"
      uuid: "alias"
    branches:
    - lineNumber: 48
      expression: "\\\"jar\\\".equals(checkstyleConfUrl.getProtocol())"
      range: "(48,13)-(48,57)"
      evaluatedAs: false
    - lineNumber: 52
      expression: "catch-exception (IOException)"
      range: "(52,15)-(52,34)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "\\\"file\\\".equals(checkstyleConfUrl.getProtocol())"
      range: "(55,20)-(55,65)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
