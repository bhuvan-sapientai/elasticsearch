---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.precommit.LoggerUsagePrecommitPlugin"
methods:
- method:
    name: "createTask"
    sourceCodeSignature: "TaskProvider<? extends Task> createTask(Project project)"
    returnType: "org.gradle.api.tasks.TaskProvider"
    genericReturnType: "? extends org.gradle.api.Task"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "4D2762D508E8168EFAC25A03B9F7393B"
  paths:
  - testPathName: "createTaskWhenSourceSetGetNameEqualsSourceSetTEST_SOURCE_SET_NAME"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "create(name):object"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "add(configurationName,project3):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "namedDomainObjectSet"
      methodExercised:
        expression: "all(action2-any):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object2"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "findProject(path):project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "project(path2):project3"
        throwsExceptions:
        - "org.gradle.api.UnknownProjectException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getName():string"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getName():string2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "matching(spec-any):namedDomainObjectSet"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name2,class-LoggerUsageTask):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "loggerUsage"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void2"
    - type: "LOCAL_VARIABLE"
      name: "loggerUsage"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action3-any):void4"
    - type: "RESULT"
      name: "result"
      valueUuid: "taskProvider"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.precommit.LoggerUsagePrecommitPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.precommit.LoggerUsagePrecommitPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerUsagePlugin"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerUsagePlugin"
      valueType: "java.lang.String"
      uuid: "configurationName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectSet"
      uuid: "namedDomainObjectSet"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":test:logger-usage"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":test:logger-usage"
      valueType: "java.lang.String"
      uuid: "path2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "sourceSet"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "spec-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.LoggerUsageTask"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerUsageCheck"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.precommit.LoggerUsageTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.LoggerUsageTask"
      uuid: "class-LoggerUsageTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    branches:
    - lineNumber: 27
      expression: "project.findProject(\\\":test:logger-usage\\\") != null"
      range: "(27,13)-(27,61)"
      evaluatedAs: true
    - lineNumber: 34
      expression: "sourceSet.getName().equals(SourceSet.MAIN_SOURCE_SET_NAME)"
      range: "(34,26)-(34,83)"
      evaluatedAs: false
      internalMethodName: "lambda$createTask$0"
    - lineNumber: 35
      expression: "sourceSet.getName().equals(SourceSet.TEST_SOURCE_SET_NAME)"
      range: "(35,20)-(35,77)"
      evaluatedAs: true
      internalMethodName: "lambda$createTask$0"
  - testPathName: "createTaskWhenSourceSetGetNameNotEqualsSourceSetTEST_SOURCE_SET_NAME"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "create(name):object"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "add(configurationName,project3):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "namedDomainObjectSet"
      methodExercised:
        expression: "all(action2-any):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object2"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "findProject(path):project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "project(path2):project3"
        throwsExceptions:
        - "org.gradle.api.UnknownProjectException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getName():string"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getName():string2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "matching(spec-any):namedDomainObjectSet"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name2,class-LoggerUsageTask):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "loggerUsage"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void2"
    - type: "LOCAL_VARIABLE"
      name: "loggerUsage"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action3-any):void4"
    - type: "RESULT"
      name: "result"
      valueUuid: "taskProvider"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.precommit.LoggerUsagePrecommitPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.precommit.LoggerUsagePrecommitPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerUsagePlugin"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerUsagePlugin"
      valueType: "java.lang.String"
      uuid: "configurationName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectSet"
      uuid: "namedDomainObjectSet"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":test:logger-usage"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":test:logger-usage"
      valueType: "java.lang.String"
      uuid: "path2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "sourceSet"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "spec-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.LoggerUsageTask"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerUsageCheck"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.precommit.LoggerUsageTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.LoggerUsageTask"
      uuid: "class-LoggerUsageTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    branches:
    - lineNumber: 27
      expression: "project.findProject(\\\":test:logger-usage\\\") != null"
      range: "(27,13)-(27,61)"
      evaluatedAs: true
    - lineNumber: 34
      expression: "sourceSet.getName().equals(SourceSet.MAIN_SOURCE_SET_NAME)"
      range: "(34,26)-(34,83)"
      evaluatedAs: false
      internalMethodName: "lambda$createTask$0"
    - lineNumber: 35
      expression: "sourceSet.getName().equals(SourceSet.TEST_SOURCE_SET_NAME)"
      range: "(35,20)-(35,77)"
      evaluatedAs: false
      internalMethodName: "lambda$createTask$0"
