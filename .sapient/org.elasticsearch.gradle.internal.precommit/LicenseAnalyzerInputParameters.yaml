---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.precommit.LicenseAnalyzer"
methods:
- method:
    name: "licenseType"
    sourceCodeSignature: "LicenseInfo licenseType(File licenseFile)"
    returnType: "org.elasticsearch.gradle.internal.precommit.LicenseAnalyzer$LicenseInfo"
    parameters:
    - name: "licenseFile"
      type: "java.io.File"
    instructionFingerprint: "1EA51EF08344A81A02ACB011C506AD6E"
  paths:
  - testPathName: "licenseTypeWhenMatches"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "licenseFile"
      valueUuid: "licenseFile"
    - type: "RESULT"
      name: "result"
      valueUuid: "licenseAnalyzerLicenseInfo"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "boolean matches = matcher.matches(licenseFile);"
      lineNumber: 149
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: matcher - Method: matches"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "licenseFile-pathname"
      valueType: "java.io.File"
      uuid: "licenseFile"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.precommit.LicenseAnalyzer$LicenseInfo"
        parameters:
        - name: "identifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "identifier1"
            valueType: "java.lang.String"
            uuid: "string7"
        - name: "spdxLicense"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "boolean2"
        - name: "sourceRedistributionRequired"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "boolean3"
      valueType: "org.elasticsearch.gradle.internal.precommit.LicenseAnalyzer$LicenseInfo"
      uuid: "licenseAnalyzerLicenseInfo"
    branches:
    - lineNumber: 148
      expression: "for-each(matchers)"
      range: "(148,39)-(148,46)"
      evaluatedAs: true
    - lineNumber: 150
      expression: "matches"
      range: "(150,17)-(150,23)"
      evaluatedAs: true
  - testPathName: "licenseTypeWhenNotMatchesThrowsIllegalStateException"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "licenseFile"
      valueUuid: "licenseFile"
    - type: "RESULT"
      name: "result"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "boolean matches = matcher.matches(licenseFile);"
      lineNumber: 149
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: matcher - Method: matches"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "licenseFile-pathname"
      valueType: "java.io.File"
      uuid: "licenseFile"
      nameForMock: "licenseFile"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unknown license for license file: licenseFile"
            valueType: "java.lang.String"
            uuid: "string8"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
    branches:
    - lineNumber: 148
      expression: "for-each(matchers)"
      range: "(148,39)-(148,46)"
      evaluatedAs: true
    - lineNumber: 150
      expression: "matches"
      range: "(150,17)-(150,23)"
      evaluatedAs: false
