---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
methods:
- method:
    name: "createTask"
    sourceCodeSignature: "TaskProvider<? extends Task> createTask(Project project)"
    returnType: "org.gradle.api.tasks.TaskProvider"
    genericReturnType: "? extends org.gradle.api.Task"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "02C18D2420C9E20362D003BB078B67B0"
  paths:
  - testPathName: "createTaskWhenElasticsearchCoreProjectIsNotNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "add(configurationName,project2):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-JarHellPlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "findProject(path):project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(name):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JarHellTask):taskCollection"
    - type: "RESULT"
      name: "result"
      valueUuid: "taskProvider"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jarHell"
      valueType: "java.lang.String"
      uuid: "configurationName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.jarhell.JarHellPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.jarhell.JarHellPlugin"
      uuid: "class-JarHellPlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":libs:elasticsearch-core"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "? extends org.gradle.api.Task"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jarHell"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.jarhell.JarHellTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.jarhell.JarHellTask"
      uuid: "class-JarHellTask"
    branches:
    - lineNumber: 24
      expression: "project.getPath().equals(\\\":libs:elasticsearch-core\\\") == false"
      range: "(24,13)-(24,73)"
      evaluatedAs: true
    - lineNumber: 29
      expression: "elasticsearchCoreProject != null"
      range: "(29,17)-(29,48)"
      evaluatedAs: true
