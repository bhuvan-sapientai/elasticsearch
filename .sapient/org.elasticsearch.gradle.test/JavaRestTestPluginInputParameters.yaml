---
targetClass:
  fullClassName: "org.elasticsearch.gradle.test.JavaRestTestPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "B991128223DA358D0B70A194236A0881"
  paths:
  - testPathName: "applyTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getElasticsearch():string2"
    - type: "LOCAL_VARIABLE"
      name: "javaRestTestImplementation"
      valueUuid: "configuration"
      methodExercised:
        expression: "defaultDependencies(action-any):configuration2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "getByName(string):configuration"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "create(string3):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByName(name2):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "clusterProvider"
      valueUuid: "namedDomainObjectProvider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      name: "clusterProvider"
      valueUuid: "namedDomainObjectProvider"
      methodExercised:
        expression: "configure(action2-any):void11"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "object"
      methodExercised:
        expression: "maybeCreate(name):object2"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getImplementationConfigurationName():string"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getRuntimeClasspath():fileCollection2"
    - type: "LOCAL_VARIABLE"
      name: "testClusters"
      valueUuid: "object3"
      methodExercised:
        expression: "register(name3):namedDomainObjectProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "withType(class-PluginBuildPlugin,configureAction-any):domainObjectCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-GradleTestPolicySetupPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-TestClustersPlugin):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-JavaBasePlugin):void3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput"
      methodExercised:
        expression: "getClassesDirs():fileCollection"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "standaloneRestIntegTestTask"
      methodExercised:
        expression: "useCluster(namedDomainObjectProvider):void4"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "standaloneRestIntegTestTask"
      methodExercised:
        expression: "setTestClassesDirs(fileCollection):void5"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "standaloneRestIntegTestTask"
      methodExercised:
        expression: "setClasspath(fileCollection2):void6"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "standaloneRestIntegTestTask"
      methodExercised:
        expression: "getJvmArgumentProviders():list"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(name5):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name4,class-StandaloneRestIntegTestTask,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-Zip):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "named(name6):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      name: "javaRestTestTask"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action3-any):void13"
    - type: "LOCAL_VARIABLE"
      name: "bundle"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "flatMap(transformer-any):provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action4-any):void14"
    - type: "RESULT"
      name: "result"
      valueUuid: "void15"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "nonInputProperties.systemProperty(\\\"tests.rest.cluster\\\", () ->\
        \ String.join(\\\",\\\", cluster.getAllHttpSocketURI()));"
      lineNumber: 63
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: nonInputProperties - Method: systemProperty"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.test.JavaRestTestPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.test.JavaRestTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.artifacts.DependencySet"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getImplementationConfigurationName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.elasticsearch.test:framework:A"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testClusters"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectProvider"
      genericValueType: "org.elasticsearch.gradle.testclusters.ElasticsearchCluster"
      uuid: "namedDomainObjectProvider"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.testclusters.ElasticsearchCluster"
      uuid: "object4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "javaRestTest"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "javaRestTest"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.DomainObjectCollection"
      uuid: "domainObjectCollection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      uuid: "class-PluginBuildPlugin"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.test.GradleTestPolicySetupPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.test.GradleTestPolicySetupPlugin"
      uuid: "class-GradleTestPolicySetupPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.testclusters.TestClustersPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.testclusters.TestClustersPlugin"
      uuid: "class-TestClustersPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaBasePlugin"
      uuid: "class-JavaBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask"
      uuid: "standaloneRestIntegTestTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.gradle.process.CommandLineArgumentProvider"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.tasks.bundling.Zip"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "bundlePlugin"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "javaRestTest"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask"
      uuid: "class-StandaloneRestIntegTestTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.bundling.Zip"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.bundling.Zip"
      uuid: "class-Zip"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "check"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.api.file.RegularFile"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "VOID"
      uuid: "void15"
