---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.distribution.ElasticsearchDistributionExtension"
methods:
- method:
    name: "copyModule"
    sourceCodeSignature: "void copyModule(TaskProvider<? extends AbstractCopyTask>\
      \ copyTask, Project module)"
    returnType: "void"
    parameters:
    - name: "copyTask"
      type: "org.gradle.api.tasks.TaskProvider"
      genericType: "? extends org.gradle.api.tasks.AbstractCopyTask"
    - name: "module"
      type: "org.gradle.api.Project"
    instructionFingerprint: "6DEB937F76961B3A57E147F56E0C77E3"
  paths:
  - testPathName: "copyModuleWhenCONFIG_BIN_REGEX_PATTERNMatcherDGetRelativePathGetPathStringMatchesEqualsFalse"
    constructorSignature: "<init>(org.gradle.api.Project) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "copyTask"
      valueUuid: "copyTask"
    - type: "INPUT"
      name: "module"
      valueUuid: "module"
    - type: "FIELD"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "FIELD"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "sync"
      valueUuid: "abstractCopyTask"
      methodExercised:
        expression: "dependsOn(objectArray):task"
    - type: "LOCAL_VARIABLE"
      name: "sync"
      valueUuid: "abstractCopyTask"
      methodExercised:
        expression: "from(callable,configureAction-any):abstractCopyTask2"
    - type: "LOCAL_VARIABLE"
      name: "moduleConfig"
      valueUuid: "configuration"
      methodExercised:
        expression: "getSingleFile():file"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "detachedConfiguration(dependencyArray):configuration"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "copySpec"
      methodExercised:
        expression: "setIncludeEmptyDirs(includeEmptyDirs):void2"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "copySpec"
      methodExercised:
        expression: "exclude(stringArray):copySpec2"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "copySpec"
      methodExercised:
        expression: "exclude(stringArray2):copySpec3"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "copySpec"
      methodExercised:
        expression: "eachFile(action-any):copySpec4"
    - type: "LOCAL_VARIABLE"
      name: "copyTask"
      valueUuid: "copyTask"
      methodExercised:
        expression: "configure(action2-any):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "project(map):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "d"
      valueUuid: "fileCopyDetails"
      methodExercised:
        expression: "getRelativePath():relativePath"
    - type: "LOCAL_VARIABLE"
      name: "d"
      valueUuid: "fileCopyDetails"
      methodExercised:
        expression: "getRelativePath():relativePath2"
    - type: "LOCAL_VARIABLE"
      name: "d"
      valueUuid: "fileCopyDetails"
      methodExercised:
        expression: "setRelativePath(relativePath3):void3"
    - type: "LOCAL_VARIABLE"
      name: "module"
      valueUuid: "module"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "module"
      valueUuid: "module"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "relativePath"
      methodExercised:
        expression: "getPathString():string3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "relativePath2"
      methodExercised:
        expression: "prepend(stringArray3):relativePath3"
    - type: "RESULT"
      name: "result"
      valueUuid: "void4"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.distribution.ElasticsearchDistributionExtension"
        parameters:
        - name: "project"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Project"
            uuid: "project"
      valueType: "org.elasticsearch.gradle.internal.distribution.ElasticsearchDistributionExtension"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "? extends org.gradle.api.tasks.AbstractCopyTask"
      uuid: "copyTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "module"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.artifacts.Configuration"
            uuid: "configuration"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask2"
    - sapientType: "MOCK"
      valueType: "java.util.concurrent.Callable"
      uuid: "callable"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.CopySpec"
      uuid: "configureAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.artifacts.Dependency"
            uuid: "dependency"
      valueType: "org.gradle.api.artifacts.Dependency[]"
      uuid: "dependencyArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "includeEmptyDirs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "*/config/log4j2.properties"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "config/log4j2.properties"
            valueType: "java.lang.String"
            uuid: "stringArray2Item1"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.FileCopyDetails"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "path"
              valueType: "java.lang.String"
              uuid: "key"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_getPath1"
              valueType: "java.lang.String"
              uuid: "string"
          uuid: "pair"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "configuration"
              valueType: "java.lang.String"
              uuid: "key2"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "explodedBundleZip"
              valueType: "java.lang.String"
              uuid: "value"
          uuid: "pair2"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
        parameters:
        - name: "project"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Project"
            uuid: "object-project"
        propertiesMap:
          name:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "class-PluginPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCopyDetails"
      uuid: "fileCopyDetails"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RelativePath"
      uuid: "relativePath"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RelativePath"
      uuid: "relativePath2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RelativePath"
      uuid: "relativePath3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "modules"
            valueType: "java.lang.String"
            uuid: "stringArray3Item1"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
      valueType: "java.lang.String[]"
      uuid: "stringArray3"
    - sapientType: "VOID"
      uuid: "void4"
    branches:
    - lineNumber: 56
      expression: "CONFIG_BIN_REGEX_PATTERN.matcher(d.getRelativePath().getPathString()).matches()\
        \ == false"
      range: "(56,25)-(56,112)"
      evaluatedAs: true
      internalMethodName: "lambda$copyModule$1"
