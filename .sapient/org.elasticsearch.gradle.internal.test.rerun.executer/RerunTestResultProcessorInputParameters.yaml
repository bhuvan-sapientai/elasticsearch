---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
methods:
- method:
    name: "started"
    sourceCodeSignature: "void started(TestDescriptorInternal descriptor, TestStartEvent\
      \ testStartEvent)"
    returnType: "void"
    parameters:
    - name: "descriptor"
      type: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
    - name: "testStartEvent"
      type: "org.gradle.api.internal.tasks.testing.TestStartEvent"
    instructionFingerprint: "38D7B5EF863164D01FD6FB093B944F25"
  paths:
  - testPathName: "startedWhenRootTestDescriptorIsNull"
    constructorSignature: "<init>(org.gradle.api.internal.tasks.testing.TestResultProcessor)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "descriptor"
      valueUuid: "descriptor"
    - type: "INPUT"
      name: "testStartEvent"
      valueUuid: "testStartEvent"
    - type: "FIELD"
      name: "delegate"
      valueUuid: "delegate"
      methodExercised:
        expression: "started(descriptor,testStartEvent):void"
    - type: "LOCAL_VARIABLE"
      name: "descriptor"
      valueUuid: "descriptor"
      methodExercised:
        expression: "getId():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
        parameters:
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "descriptor"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestStartEvent"
      uuid: "testStartEvent"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
      uuid: "delegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 44
      expression: "rootTestDescriptor == null"
      range: "(44,13)-(44,38)"
      evaluatedAs: true
  - testPathName: "startedWhenActiveDescriptorsByIdEntrySetIsNotEmpty"
    constructorSignature: "<init>(org.gradle.api.internal.tasks.testing.TestResultProcessor)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "descriptor"
      valueUuid: "descriptor"
    - type: "INPUT"
      name: "testStartEvent"
      valueUuid: "testStartEvent"
    - type: "FIELD"
      name: "delegate"
      valueUuid: "delegate"
      methodExercised:
        expression: "started(descriptor,testStartEvent):void"
    - type: "LOCAL_VARIABLE"
      name: "descriptor"
      valueUuid: "descriptor"
      methodExercised:
        expression: "getId():object"
    - type: "LOCAL_VARIABLE"
      name: "descriptor"
      valueUuid: "descriptor"
      methodExercised:
        expression: "getId():object2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "descriptor"
      methodExercised:
        expression: "getDisplayName():string4"
    - type: "RESULT"
      name: "result"
      valueUuid: "void6"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
        parameters:
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "descriptor"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestStartEvent"
      uuid: "testStartEvent"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
      uuid: "delegate"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
      valueType: "java.lang.IllegalArgumentException"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object"
      nameForMock: "object"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object2"
      nameForMock: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "VOID"
      uuid: "void6"
    branches:
    - lineNumber: 44
      expression: "rootTestDescriptor == null"
      range: "(44,13)-(44,38)"
      evaluatedAs: true
    - lineNumber: 48
      expression: "catch-exception (IllegalArgumentException)"
      range: "(48,15)-(48,70)"
      evaluatedAs: true
    - lineNumber: 109
      expression: "for-each(activeDescriptorsById.entrySet())"
      range: "(109,64)-(109,95)"
      evaluatedAs: true
      internalMethodName: "logTracing"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.IllegalArgumentException"
- method:
    name: "completed"
    sourceCodeSignature: "void completed(Object testId, TestCompleteEvent testCompleteEvent)"
    returnType: "void"
    parameters:
    - name: "testId"
      type: "java.lang.Object"
    - name: "testCompleteEvent"
      type: "org.gradle.api.internal.tasks.testing.TestCompleteEvent"
    instructionFingerprint: "658D2B8940E36DD0FCCB6ABCB02D70F4"
  paths:
  - testPathName: "completedWhenActiveDescriptorsByIdSizeNotEquals1"
    constructorSignature: "<init>(org.gradle.api.internal.tasks.testing.TestResultProcessor)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "testId"
      valueUuid: "testId"
    - type: "INPUT"
      name: "testCompleteEvent"
      valueUuid: "testCompleteEvent"
    - type: "FIELD"
      name: "rootTestDescriptor"
      valueUuid: "fieldTestDescriptorInternal"
      methodExercised:
        expression: "getId():testId"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
        parameters:
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
            uuid: "delegate"
        propertiesMap:
          rootTestDescriptor:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
            uuid: "fieldTestDescriptorInternal"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "testId"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestCompleteEvent"
      uuid: "testCompleteEvent"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "fieldTestDescriptorInternal"
      nameForMock: "rootTestDescriptor"
    - sapientType: "VOID"
      uuid: "void"
    branches:
    - lineNumber: 66
      expression: "testId.equals(rootTestDescriptor.getId())"
      range: "(66,13)-(66,53)"
      evaluatedAs: true
    - lineNumber: 67
      expression: "activeDescriptorsById.size() != 1"
      range: "(67,17)-(67,49)"
      evaluatedAs: true
  - testPathName: "completedWhenNotActive"
    constructorSignature: "<init>(org.gradle.api.internal.tasks.testing.TestResultProcessor)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "testId"
      valueUuid: "testId"
    - type: "INPUT"
      name: "testCompleteEvent"
      valueUuid: "testCompleteEvent"
    - type: "FIELD"
      name: "rootTestDescriptor"
      valueUuid: "fieldTestDescriptorInternal"
      methodExercised:
        expression: "getId():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
        parameters:
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
            uuid: "delegate"
        propertiesMap:
          rootTestDescriptor:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
            uuid: "fieldTestDescriptorInternal"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "testId"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestCompleteEvent"
      uuid: "testCompleteEvent"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "fieldTestDescriptorInternal"
      nameForMock: "rootTestDescriptor"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "VOID"
      uuid: "void"
    branches:
    - lineNumber: 66
      expression: "testId.equals(rootTestDescriptor.getId())"
      range: "(66,13)-(66,53)"
      evaluatedAs: false
    - lineNumber: 73
      expression: "active"
      range: "(73,13)-(73,18)"
      evaluatedAs: false
- method:
    name: "output"
    sourceCodeSignature: "void output(Object testId, TestOutputEvent testOutputEvent)"
    returnType: "void"
    parameters:
    - name: "testId"
      type: "java.lang.Object"
    - name: "testOutputEvent"
      type: "org.gradle.api.tasks.testing.TestOutputEvent"
    instructionFingerprint: "31753E3903BE54D8B066C6804C8D7693"
  paths:
  - testPathName: "outputWhenActiveDescriptorsByIdNotContainsKeyTestId"
    constructorSignature: "<init>(org.gradle.api.internal.tasks.testing.TestResultProcessor)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "testId"
      valueUuid: "testId"
    - type: "INPUT"
      name: "testOutputEvent"
      valueUuid: "testOutputEvent"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
        parameters:
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "testId"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.TestOutputEvent"
      uuid: "testOutputEvent"
    - sapientType: "VOID"
      uuid: "void"
    branches:
    - lineNumber: 84
      expression: "activeDescriptorsById.containsKey(testId)"
      range: "(84,13)-(84,53)"
      evaluatedAs: false
- method:
    name: "failure"
    sourceCodeSignature: "void failure(Object testId, TestFailure result)"
    returnType: "void"
    parameters:
    - name: "testId"
      type: "java.lang.Object"
    - name: "result"
      type: "org.gradle.api.tasks.testing.TestFailure"
    instructionFingerprint: "1DD076C9DACF60656AA8AE4C9D2FD657"
  paths:
  - testPathName: "failureWhenActiveDescriptorsByIdNotContainsKeyTestId"
    constructorSignature: "<init>(org.gradle.api.internal.tasks.testing.TestResultProcessor)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "testId"
      valueUuid: "testId"
    - type: "INPUT"
      name: "result"
      valueUuid: "result1"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
        parameters:
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "testId"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.TestFailure"
      uuid: "result1"
    - sapientType: "VOID"
      uuid: "void"
    branches:
    - lineNumber: 95
      expression: "activeDescriptorsById.containsKey(testId)"
      range: "(95,13)-(95,53)"
      evaluatedAs: false
- method:
    name: "reset"
    sourceCodeSignature: "void reset()"
    returnType: "void"
    instructionFingerprint: "8A151A9D75452564A53BCA63E7BC241A"
  paths:
  - testPathName: "resetTest"
    constructorSignature: "<init>(org.gradle.api.internal.tasks.testing.TestResultProcessor)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "rootTestDescriptor"
      valueUuid: "fieldTestDescriptorInternal"
      methodExercised:
        expression: "getId():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
        parameters:
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
            uuid: "delegate"
        propertiesMap:
          rootTestDescriptor:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
            uuid: "fieldTestDescriptorInternal"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "fieldTestDescriptorInternal"
      nameForMock: "rootTestDescriptor"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "VOID"
      uuid: "void2"
- method:
    name: "getActiveDescriptors"
    sourceCodeSignature: "List<TestDescriptorInternal> getActiveDescriptors()"
    returnType: "java.util.List"
    genericReturnType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
    instructionFingerprint: "D78369AA6ECB9365BFF0C51D978AA603"
  paths:
  - testPathName: "getActiveDescriptorsTest"
    constructorSignature: "<init>(org.gradle.api.internal.tasks.testing.TestResultProcessor)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "arrayList"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
        parameters:
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            uuid: "collection"
        values: []
      valueType: "java.util.List"
      uuid: "arrayList"
