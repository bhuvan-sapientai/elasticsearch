---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
methods:
- method:
    name: "execute"
    sourceCodeSignature: "void execute(JvmTestExecutionSpec spec, TestResultProcessor\
      \ testResultProcessor)"
    returnType: "void"
    parameters:
    - name: "spec"
      type: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
    - name: "testResultProcessor"
      type: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
    instructionFingerprint: "AEA0F5779E2EE667888041A18A4D4079"
  paths:
  - testPathName: "executeWhenMaxRetriesLessThanOrEqualsTo0"
    constructorSignature: "<init>(org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension,org.gradle.api.internal.tasks.testing.TestExecuter<org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec>)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "spec"
      valueUuid: "spec"
    - type: "INPUT"
      name: "testResultProcessor"
      valueUuid: "testResultProcessor"
    - type: "FIELD"
      name: "extension"
      valueUuid: "extension"
      methodExercised:
        expression: "getMaxReruns():maxReruns"
    - type: "FIELD"
      name: "delegate"
      valueUuid: "delegate"
      methodExercised:
        expression: "execute(spec,testResultProcessor):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "maxReruns"
      methodExercised:
        expression: "get():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
        parameters:
        - name: "extension"
          value:
            sapientType: "MOCK"
            valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
            uuid: "extension"
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
            genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
      uuid: "spec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
      uuid: "testResultProcessor"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
      uuid: "extension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Integer"
      uuid: "maxReruns"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
      genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
      uuid: "delegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "java.lang.Integer"
      uuid: "object"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 38
      expression: "maxRetries <= 0"
      range: "(38,13)-(38,27)"
      evaluatedAs: true
  - testPathName: "executeWhenMaxRetriesGreaterThan0"
    constructorSignature: "<init>(org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension,org.gradle.api.internal.tasks.testing.TestExecuter<org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec>)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "spec"
      valueUuid: "spec"
    - type: "INPUT"
      name: "testResultProcessor"
      valueUuid: "testResultProcessor"
    - type: "FIELD"
      name: "extension"
      valueUuid: "extension"
      methodExercised:
        expression: "getMaxReruns():maxReruns"
    - type: "FIELD"
      name: "delegate"
      valueUuid: "delegate"
      methodExercised:
        expression: "execute(spec,rerunTestResultProcessor-any):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "maxReruns"
      methodExercised:
        expression: "get():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
        parameters:
        - name: "extension"
          value:
            sapientType: "MOCK"
            valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
            uuid: "extension"
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
            genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
      uuid: "spec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
      uuid: "testResultProcessor"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
      uuid: "extension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Integer"
      uuid: "maxReruns"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
      genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
      uuid: "delegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "rerunTestResultProcessor-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "object"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 38
      expression: "maxRetries <= 0"
      range: "(38,13)-(38,27)"
      evaluatedAs: false
  - testPathName: "executeWhenRetryCountNotEqualsMaxRetries"
    constructorSignature: "<init>(org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension,org.gradle.api.internal.tasks.testing.TestExecuter<org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec>)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "spec"
      valueUuid: "spec"
    - type: "INPUT"
      name: "testResultProcessor"
      valueUuid: "testResultProcessor"
    - type: "FIELD"
      name: "extension"
      valueUuid: "extension"
      methodExercised:
        expression: "getMaxReruns():maxReruns"
    - type: "FIELD"
      name: "extension"
      valueUuid: "extension"
      methodExercised:
        expression: "getDidRerun():didRerun"
    - type: "FIELD"
      name: "extension"
      valueUuid: "extension"
      methodExercised:
        expression: "getDidRerun():didRerun"
    - type: "FIELD"
      name: "delegate"
      valueUuid: "delegate"
      methodExercised:
        expression: "execute(spec,rerunTestResultProcessor-any):void"
    - type: "FIELD"
      name: "delegate"
      valueUuid: "delegate"
      methodExercised:
        expression: "execute(spec,rerunTestResultProcessor-any):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "didRerun"
      methodExercised:
        expression: "set(boolean):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "didRerun"
      methodExercised:
        expression: "set(boolean3):void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "maxReruns"
      methodExercised:
        expression: "get():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void8"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "report(retryCount + 1, retryTestResultProcessor.getActiveDescriptors());"
      lineNumber: 53
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: retryTestResultProcessor - Method: getActiveDescriptors"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
        parameters:
        - name: "extension"
          value:
            sapientType: "MOCK"
            valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
            uuid: "extension"
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
            genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
      uuid: "spec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestResultProcessor"
      uuid: "testResultProcessor"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
      uuid: "extension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Integer"
      uuid: "maxReruns"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Boolean"
      uuid: "didRerun"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
      genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
      uuid: "delegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestResultProcessor"
      uuid: "rerunTestResultProcessor-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "object"
    - sapientType: "VOID"
      uuid: "void8"
    branches:
    - lineNumber: 38
      expression: "maxRetries <= 0"
      range: "(38,13)-(38,27)"
      evaluatedAs: false
    - lineNumber: 51
      expression: "catch-exception (ExecException)"
      range: "(51,15)-(51,36)"
      evaluatedAs: true
    - lineNumber: 75
      expression: "branch expression (line 75)"
      evaluatedAs: true
    - lineNumber: 54
      expression: "retryCount++ == maxRetries"
      range: "(54,21)-(54,46)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.gradle.process.internal.ExecException"
- method:
    name: "stopNow"
    sourceCodeSignature: "void stopNow()"
    returnType: "void"
    instructionFingerprint: "F664B22F25E4616534330700597465E9"
  paths:
  - testPathName: "stopNowTest"
    constructorSignature: "<init>(org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension,org.gradle.api.internal.tasks.testing.TestExecuter<org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec>)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "delegate"
      valueUuid: "delegate"
      methodExercised:
        expression: "stopNow():void"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
        parameters:
        - name: "extension"
          value:
            sapientType: "MOCK"
            valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
            uuid: "extension"
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
            genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
      genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
      uuid: "delegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "VOID"
      uuid: "void2"
- method:
    name: "report"
    sourceCodeSignature: "void report(int runCount, List<TestDescriptorInternal> activeDescriptors)"
    returnType: "void"
    parameters:
    - name: "runCount"
      type: "int"
    - name: "activeDescriptors"
      type: "java.util.List"
      genericType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
    instructionFingerprint: "C9CFFF5BBB4C29331B83D47F7656092E"
  paths:
  - testPathName: "reportWhenDefaultBranch"
    constructorSignature: "<init>(org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension,org.gradle.api.internal.tasks.testing.TestExecuter<org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec>)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "runCount"
      valueUuid: "runCount"
    - type: "INPUT"
      name: "activeDescriptors"
      valueUuid: "activeDescriptors"
    - type: "LOCAL_VARIABLE"
      name: "d"
      valueUuid: "testDescriptorInternal"
      methodExercised:
        expression: "getId():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Comparator.comparing(java.util.function.Function)\
        \ : java.util.Comparator"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
        parameters:
        - name: "extension"
          value:
            sapientType: "MOCK"
            valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
            uuid: "extension"
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
            genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "runCount"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
          uuid: "testDescriptorInternal"
      valueType: "java.util.List"
      genericValueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "activeDescriptors"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "testDescriptorInternal"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.id.CompositeIdGenerator$CompositeId"
      uuid: "object"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 75
      expression: "branch expression (line 75)"
      evaluatedAs: true
  - testPathName: "reportWhenDefaultBranch2"
    constructorSignature: "<init>(org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension,org.gradle.api.internal.tasks.testing.TestExecuter<org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec>)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "runCount"
      valueUuid: "runCount"
    - type: "INPUT"
      name: "activeDescriptors"
      valueUuid: "activeDescriptors"
    - type: "LOCAL_VARIABLE"
      name: "d"
      valueUuid: "testDescriptorInternal"
      methodExercised:
        expression: "getId():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Comparator.comparing(java.util.function.Function)\
        \ : java.util.Comparator"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
        parameters:
        - name: "extension"
          value:
            sapientType: "MOCK"
            valueType: "org.elasticsearch.gradle.internal.test.rerun.TestRerunTaskExtension"
            uuid: "extension"
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.tasks.testing.TestExecuter"
            genericValueType: "org.gradle.api.internal.tasks.testing.JvmTestExecutionSpec"
            uuid: "delegate"
      valueType: "org.elasticsearch.gradle.internal.test.rerun.executer.RerunTestExecuter"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "runCount"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
          uuid: "testDescriptorInternal"
      valueType: "java.util.List"
      genericValueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "activeDescriptors"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.tasks.testing.TestDescriptorInternal"
      uuid: "testDescriptorInternal"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 75
      expression: "branch expression (line 75)"
      evaluatedAs: false
