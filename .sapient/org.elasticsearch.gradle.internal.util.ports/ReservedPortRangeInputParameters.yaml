---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
methods:
- method:
    name: "getOrAllocate"
    sourceCodeSignature: "Integer getOrAllocate(String id)"
    returnType: "java.lang.Integer"
    parameters:
    - name: "id"
      type: "java.lang.String"
    instructionFingerprint: "903BB8DAD754FC90088B3A0AA0D837BD"
  paths:
  - testPathName: "getOrAllocateTest"
    constructorSignature: "<init>(int,int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "id"
      valueUuid: "id"
    - type: "RESULT"
      name: "result"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "current = startPort + new Random().nextInt(endPort - startPort);"
      lineNumber: 32
      details: "Method java.util.Random::nextInt has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
        parameters:
        - name: "startPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "startPort"
        - name: "endPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "endPort"
      valueType: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "id1"
      valueType: "java.lang.String"
      uuid: "id"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "java.lang.Integer"
      uuid: "object"
- method:
    name: "getAllocated"
    sourceCodeSignature: "Integer getAllocated(String id)"
    returnType: "java.lang.Integer"
    parameters:
    - name: "id"
      type: "java.lang.String"
    instructionFingerprint: "B45BE8AD8BCA0BE3009C1235A7C14E59"
  paths:
  - testPathName: "getAllocated1Test"
    constructorSignature: "<init>(int,int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "id"
      valueUuid: "id"
    - type: "RESULT"
      name: "result"
      valueUuid: "integer"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "current = startPort + new Random().nextInt(endPort - startPort);"
      lineNumber: 32
      details: "Method java.util.Random::nextInt has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
        parameters:
        - name: "startPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "startPort"
        - name: "endPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "endPort"
      valueType: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "id1"
      valueType: "java.lang.String"
      uuid: "id"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "integer"
- method:
    name: "allocate"
    sourceCodeSignature: "int allocate()"
    returnType: "int"
    instructionFingerprint: "AED835254460079C7F41C3937279201C"
  paths:
  - testPathName: "allocateWhenPortDetectorIsAvailableCandidate"
    constructorSignature: "<init>(int,int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "startPort"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "current = startPort + new Random().nextInt(endPort - startPort);"
      lineNumber: 32
      details: "Method java.util.Random::nextInt has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
        parameters:
        - name: "startPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "startPort"
        - name: "endPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "endPort"
        propertiesMap:
          portDetector:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.elasticsearch.gradle.internal.util.ports.DefaultPortDetector"
              parameters: []
            valueType: "org.elasticsearch.gradle.internal.util.ports.DefaultPortDetector"
            uuid: "defaultPortDetector"
      valueType: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "startPort"
    branches:
    - lineNumber: 87
      expression: "current > endPort"
      range: "(87,17)-(87,33)"
      evaluatedAs: true
      internalMethodName: "getAvailablePort"
    - lineNumber: 91
      expression: "allocated.contains(candidate) == false"
      range: "(91,17)-(91,54)"
      evaluatedAs: true
      internalMethodName: "getAvailablePort"
    - lineNumber: 91
      expression: "portDetector.isAvailable(candidate)"
      range: "(91,59)-(91,93)"
      evaluatedAs: true
      internalMethodName: "getAvailablePort"
  - testPathName: "allocateWhenCurrentEqualsFirst"
    constructorSignature: "<init>(int,int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "int5"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "current = startPort + new Random().nextInt(endPort - startPort);"
      lineNumber: 32
      details: "Method java.util.Random::nextInt has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
        parameters:
        - name: "startPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "startPort"
        - name: "endPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "endPort"
        propertiesMap:
          portDetector:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.elasticsearch.gradle.internal.util.ports.DefaultPortDetector"
              parameters: []
            valueType: "org.elasticsearch.gradle.internal.util.ports.DefaultPortDetector"
            uuid: "defaultPortDetector"
      valueType: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int5"
    branches:
    - lineNumber: 87
      expression: "current > endPort"
      range: "(87,17)-(87,33)"
      evaluatedAs: true
      internalMethodName: "getAvailablePort"
    - lineNumber: 91
      expression: "allocated.contains(candidate) == false"
      range: "(91,17)-(91,54)"
      evaluatedAs: true
      internalMethodName: "getAvailablePort"
    - lineNumber: 91
      expression: "portDetector.isAvailable(candidate)"
      range: "(91,59)-(91,93)"
      evaluatedAs: false
      internalMethodName: "getAvailablePort"
    - lineNumber: 95
      expression: "current == first"
      range: "(95,21)-(95,36)"
      evaluatedAs: true
      internalMethodName: "getAvailablePort"
  - testPathName: "allocateWhenCurrentNotEqualsFirst"
    constructorSignature: "<init>(int,int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "int6"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "current = startPort + new Random().nextInt(endPort - startPort);"
      lineNumber: 32
      details: "Method java.util.Random::nextInt has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
        parameters:
        - name: "startPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "startPort"
        - name: "endPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "endPort"
        propertiesMap:
          portDetector:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.elasticsearch.gradle.internal.util.ports.DefaultPortDetector"
              parameters: []
            valueType: "org.elasticsearch.gradle.internal.util.ports.DefaultPortDetector"
            uuid: "defaultPortDetector"
      valueType: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "int"
      uuid: "int6"
    branches:
    - lineNumber: 87
      expression: "current > endPort"
      range: "(87,17)-(87,33)"
      evaluatedAs: true
      internalMethodName: "getAvailablePort"
    - lineNumber: 91
      expression: "allocated.contains(candidate) == false"
      range: "(91,17)-(91,54)"
      evaluatedAs: true
      internalMethodName: "getAvailablePort"
    - lineNumber: 91
      expression: "portDetector.isAvailable(candidate)"
      range: "(91,59)-(91,93)"
      evaluatedAs: false
      internalMethodName: "getAvailablePort"
    - lineNumber: 95
      expression: "current == first"
      range: "(95,21)-(95,36)"
      evaluatedAs: false
      internalMethodName: "getAvailablePort"
- method:
    name: "deallocate"
    sourceCodeSignature: "void deallocate(int port)"
    returnType: "void"
    parameters:
    - name: "port"
      type: "int"
    instructionFingerprint: "91F8F083FAA9BEEEAF6E3EA6AA856F62"
  paths:
  - testPathName: "deallocateTest"
    constructorSignature: "<init>(int,int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "port"
      valueUuid: "port"
    - type: "RESULT"
      name: "result"
      valueUuid: "void3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "current = startPort + new Random().nextInt(endPort - startPort);"
      lineNumber: 32
      details: "Method java.util.Random::nextInt has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
        parameters:
        - name: "startPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "startPort"
        - name: "endPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "endPort"
      valueType: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "port"
    - sapientType: "VOID"
      uuid: "void3"
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "4C90A3A0D93C38A15562BAC501549F9B"
  paths:
  - testPathName: "toStringTest"
    constructorSignature: "<init>(int,int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "current = startPort + new Random().nextInt(endPort - startPort);"
      lineNumber: 32
      details: "Method java.util.Random::nextInt has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
        parameters:
        - name: "startPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "startPort"
        - name: "endPort"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "endPort"
      valueType: "org.elasticsearch.gradle.internal.util.ports.ReservedPortRange"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ReservedPortRange[2:2]"
      valueType: "java.lang.String"
      uuid: "string"
