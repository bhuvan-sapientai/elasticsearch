---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.doc.DocsTestPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "35472F2AE3B3E5B73860BC859EDAB56F"
  paths:
  - testPathName: "applyWhenSnippetIsConsoleCandidate"
    constructorSignature: "<init>(org.gradle.api.internal.file.FileOperations,org.gradle.api.file.ProjectLayout)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "projectLayout"
      valueUuid: "projectLayout"
      methodExercised:
        expression: "getBuildDirectory():directoryProperty"
    - type: "FIELD"
      name: "fileOperations"
      valueUuid: "fileOperations"
      methodExercised:
        expression: "delete(objectArray):boolean5"
    - type: "STATIC"
      name: "OS.class"
      valueUuid: "OS.class"
      methodExercised:
        expression: "conditionalString():oSConditional"
    - type: "STATIC"
      name: "TestDistribution.class.real"
      valueUuid: "TestDistribution.class.real"
      methodExercised:
        expression: "valueOf(string3):testDistribution"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(string6):version"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getElasticsearch():string6"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getElasticsearch():string8"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getLucene():string9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "dir(path):provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty2"
      methodExercised:
        expression: "convention(provider):directoryProperty3"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask"
      methodExercised:
        expression: "setGroup(group):void7"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask"
      methodExercised:
        expression: "setDescription(description):void8"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask"
      methodExercised:
        expression: "getDefaultSubstitutions():mapProperty"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask"
      methodExercised:
        expression: "setPerSnippet(perSnippet-any):void10"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask2"
      methodExercised:
        expression: "setGroup(group2):void12"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask2"
      methodExercised:
        expression: "setDescription(description2):void13"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask2"
      methodExercised:
        expression: "getDefaultSubstitutions():mapProperty2"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask2"
      methodExercised:
        expression: "setPerSnippet(perSnippet2-any):void15"
    - type: "LOCAL_VARIABLE"
      name: "c"
      valueUuid: "elasticsearchCluster2"
      methodExercised:
        expression: "setTestDistribution(testDistribution):void3"
    - type: "LOCAL_VARIABLE"
      name: "c"
      valueUuid: "elasticsearchCluster2"
      methodExercised:
        expression: "setNameCustomization(nameCustomization-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByName(name):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "mapProperty"
      methodExercised:
        expression: "putAll(map):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "mapProperty2"
      methodExercised:
        expression: "putAll(map):void14"
    - type: "LOCAL_VARIABLE"
      valueUuid: "mapProperty3"
      methodExercised:
        expression: "putAll(map):void17"
    - type: "LOCAL_VARIABLE"
      valueUuid: "namedDomainObjectSet"
      methodExercised:
        expression: "configureEach(action-any):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "oSConditional"
      methodExercised:
        expression: "onWindows(supplier-any):oSConditional2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "oSConditional2"
      methodExercised:
        expression: "onUnix(supplier2-any):oSConditional3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "oSConditional3"
      methodExercised:
        expression: "supply():object2"
    - type: "LOCAL_VARIABLE"
      name: "testClusters"
      valueUuid: "object"
      methodExercised:
        expression: "matching(spec-any):namedDomainObjectSet"
    - type: "LOCAL_VARIABLE"
      name: "byType"
      valueUuid: "object5"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object6"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(pluginId):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "set(boolean4):void18"
    - type: "LOCAL_VARIABLE"
      name: "restRootDir"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "restTestsFromDocSnippetTask"
      methodExercised:
        expression: "getDefaultSubstitutions():mapProperty3"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "restTestsFromDocSnippetTask"
      methodExercised:
        expression: "getTestRoot():directoryProperty2"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "restTestsFromDocSnippetTask"
      methodExercised:
        expression: "getMigrationMode():property"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "restTestsFromDocSnippetTask"
      methodExercised:
        expression: "doFirst(action3-any):task2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name7):object6"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput"
      methodExercised:
        expression: "dir(map2,provider):void19"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "named(name2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name3,class-DocSnippetTask,configurationAction-any):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "register(name4,class-DocSnippetTask,configurationAction2-any):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "register(name5,class-RestTestsFromDocSnippetTask,configurationAction3-any):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action2-any):void5"
    - type: "RESULT"
      name: "result"
      valueUuid: "void20"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "String distribution = System.getProperty(\\\"tests.distribution\\\"\
        , \\\"default\\\");"
      lineNumber: 46
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.doc.DocsTestPlugin"
        parameters:
        - name: "fileOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.file.FileOperations"
            uuid: "fileOperations"
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
      valueType: "org.elasticsearch.gradle.internal.doc.DocsTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ProjectLayout"
      uuid: "projectLayout"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.file.FileOperations"
      uuid: "fileOperations"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object4"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.OS"
      uuid: "OS.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.OS$Conditional"
      genericValueType: "java.lang.String"
      uuid: "oSConditional"
    - sapientType: "REAL"
      valueType: "org.elasticsearch.gradle.testclusters.TestDistribution"
      uuid: "TestDistribution.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "DEFAULT"
      valueType: "org.elasticsearch.gradle.testclusters.TestDistribution"
      uuid: "testDistribution"
    - sapientType: "BASIC"
      content: !<regular>
        value: "DEFAULT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version"
      nameForMock: "version"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElasticsearch1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElasticsearch1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.api.file.Directory"
      uuid: "provider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "rest"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.DocSnippetTask"
      uuid: "docSnippetTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Docs"
      valueType: "java.lang.String"
      uuid: "group"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "List each snippet"
      valueType: "java.lang.String"
      uuid: "description"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.MapProperty"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "mapProperty"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.elasticsearch.gradle.internal.doc.Snippet"
      uuid: "perSnippet-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.DocSnippetTask"
      uuid: "docSnippetTask2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Docs"
      valueType: "java.lang.String"
      uuid: "group2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "List snippets that probably should be marked // CONSOLE"
      valueType: "java.lang.String"
      uuid: "description2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.MapProperty"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "mapProperty2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.elasticsearch.gradle.internal.doc.Snippet"
      uuid: "perSnippet2-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.testclusters.ElasticsearchCluster"
      uuid: "elasticsearchCluster2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "nameCustomization-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testClusters"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{version\\\\}"
              valueType: "java.lang.String"
              uuid: "key2"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "version"
              valueType: "java.lang.String"
              uuid: "string7"
          uuid: "pair"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{version_qualified\\\\}"
              valueType: "java.lang.String"
              uuid: "key3"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_getElasticsearch1"
              valueType: "java.lang.String"
              uuid: "string8"
          uuid: "pair2"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{lucene_version\\\\}"
              valueType: "java.lang.String"
              uuid: "key4"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "B"
              valueType: "java.lang.String"
              uuid: "string10"
          uuid: "pair3"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{build_flavor\\\\}"
              valueType: "java.lang.String"
              uuid: "key5"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "default"
              valueType: "java.lang.String"
              uuid: "string"
          uuid: "pair4"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{build_type\\\\}"
              valueType: "java.lang.String"
              uuid: "key6"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_supply1"
              valueType: "java.lang.String"
              uuid: "object2"
          uuid: "pair5"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.MapProperty"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "mapProperty3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectSet"
      uuid: "namedDomainObjectSet"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.OS$Conditional"
      uuid: "oSConditional2"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "supplier-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.OS$Conditional"
      uuid: "oSConditional3"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "supplier2-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_supply1"
      valueType: "java.lang.String"
      uuid: "object2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "spec-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch.legacy-yaml-rest-test"
      valueType: "java.lang.String"
      uuid: "pluginId"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Boolean"
      uuid: "property"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
      uuid: "restTestsFromDocSnippetTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "yamlRestTest"
      valueType: "java.lang.String"
      uuid: "name7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "builtBy"
              valueType: "java.lang.String"
              uuid: "key7"
            value:
              sapientType: "MOCK"
              valueType: "org.gradle.api.tasks.TaskProvider"
              genericValueType: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
              uuid: "taskProvider4"
          uuid: "pair6"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,org.gradle.api.tasks.TaskProvider"
      uuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "assemble"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "listSnippets"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.doc.DocSnippetTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.doc.DocSnippetTask"
      uuid: "class-DocSnippetTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "listConsoleCandidates"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "buildRestTests"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
      uuid: "class-RestTestsFromDocSnippetTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction3-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      uuid: "void20"
    branches:
    - lineNumber: 52
      expression: "branch expression (line 52)"
      evaluatedAs: true
    - lineNumber: 88
      expression: "snippet.isConsoleCandidate()"
      range: "(88,21)-(88,48)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$7"
  - testPathName: "applyWhenDefaultBranchAndSnippetNotIsConsoleCandidate"
    constructorSignature: "<init>(org.gradle.api.internal.file.FileOperations,org.gradle.api.file.ProjectLayout)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "projectLayout"
      valueUuid: "projectLayout"
      methodExercised:
        expression: "getBuildDirectory():directoryProperty"
    - type: "FIELD"
      name: "fileOperations"
      valueUuid: "fileOperations"
      methodExercised:
        expression: "delete(objectArray):boolean5"
    - type: "STATIC"
      name: "OS.class"
      valueUuid: "OS.class"
      methodExercised:
        expression: "conditionalString():oSConditional"
    - type: "STATIC"
      name: "TestDistribution.class.real"
      valueUuid: "TestDistribution.class.real"
      methodExercised:
        expression: "valueOf(string3):testDistribution"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(string6):version"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getElasticsearch():string6"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getElasticsearch():string8"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getLucene():string9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "dir(path):provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty2"
      methodExercised:
        expression: "convention(provider):directoryProperty3"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask"
      methodExercised:
        expression: "setGroup(group):void7"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask"
      methodExercised:
        expression: "setDescription(description):void8"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask"
      methodExercised:
        expression: "getDefaultSubstitutions():mapProperty"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask"
      methodExercised:
        expression: "setPerSnippet(perSnippet-any):void10"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask2"
      methodExercised:
        expression: "setGroup(group2):void12"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask2"
      methodExercised:
        expression: "setDescription(description2):void13"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask2"
      methodExercised:
        expression: "getDefaultSubstitutions():mapProperty2"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "docSnippetTask2"
      methodExercised:
        expression: "setPerSnippet(perSnippet2-any):void15"
    - type: "LOCAL_VARIABLE"
      name: "c"
      valueUuid: "elasticsearchCluster2"
      methodExercised:
        expression: "setTestDistribution(testDistribution):void3"
    - type: "LOCAL_VARIABLE"
      name: "c"
      valueUuid: "elasticsearchCluster2"
      methodExercised:
        expression: "setNameCustomization(nameCustomization-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByName(name):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object4"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "mapProperty"
      methodExercised:
        expression: "putAll(map):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "mapProperty2"
      methodExercised:
        expression: "putAll(map):void14"
    - type: "LOCAL_VARIABLE"
      valueUuid: "mapProperty3"
      methodExercised:
        expression: "putAll(map):void16"
    - type: "LOCAL_VARIABLE"
      valueUuid: "namedDomainObjectSet"
      methodExercised:
        expression: "configureEach(action-any):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "oSConditional"
      methodExercised:
        expression: "onWindows(supplier-any):oSConditional2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "oSConditional2"
      methodExercised:
        expression: "onUnix(supplier2-any):oSConditional3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "oSConditional3"
      methodExercised:
        expression: "supply():object2"
    - type: "LOCAL_VARIABLE"
      name: "testClusters"
      valueUuid: "object"
      methodExercised:
        expression: "matching(spec-any):namedDomainObjectSet"
    - type: "LOCAL_VARIABLE"
      name: "byType"
      valueUuid: "object4"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object5"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(pluginId):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "set(boolean4):void17"
    - type: "LOCAL_VARIABLE"
      name: "restRootDir"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object3"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "restTestsFromDocSnippetTask"
      methodExercised:
        expression: "getDefaultSubstitutions():mapProperty3"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "restTestsFromDocSnippetTask"
      methodExercised:
        expression: "getTestRoot():directoryProperty2"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "restTestsFromDocSnippetTask"
      methodExercised:
        expression: "getMigrationMode():property"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "restTestsFromDocSnippetTask"
      methodExercised:
        expression: "doFirst(action3-any):task2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name7):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput"
      methodExercised:
        expression: "dir(map2,provider):void18"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "named(name2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name3,class-DocSnippetTask,configurationAction-any):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "register(name4,class-DocSnippetTask,configurationAction2-any):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "register(name5,class-RestTestsFromDocSnippetTask,configurationAction3-any):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action2-any):void5"
    - type: "RESULT"
      name: "result"
      valueUuid: "void19"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "String distribution = System.getProperty(\\\"tests.distribution\\\"\
        , \\\"default\\\");"
      lineNumber: 46
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.doc.DocsTestPlugin"
        parameters:
        - name: "fileOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.internal.file.FileOperations"
            uuid: "fileOperations"
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
      valueType: "org.elasticsearch.gradle.internal.doc.DocsTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ProjectLayout"
      uuid: "projectLayout"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.file.FileOperations"
      uuid: "fileOperations"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.OS"
      uuid: "OS.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.OS$Conditional"
      genericValueType: "java.lang.String"
      uuid: "oSConditional"
    - sapientType: "REAL"
      valueType: "org.elasticsearch.gradle.testclusters.TestDistribution"
      uuid: "TestDistribution.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "DEFAULT"
      valueType: "org.elasticsearch.gradle.testclusters.TestDistribution"
      uuid: "testDistribution"
    - sapientType: "BASIC"
      content: !<regular>
        value: "DEFAULT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version"
      nameForMock: "version"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElasticsearch1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElasticsearch1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.api.file.Directory"
      uuid: "provider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "rest"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.DocSnippetTask"
      uuid: "docSnippetTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Docs"
      valueType: "java.lang.String"
      uuid: "group"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "List each snippet"
      valueType: "java.lang.String"
      uuid: "description"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.MapProperty"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "mapProperty"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.elasticsearch.gradle.internal.doc.Snippet"
      uuid: "perSnippet-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.DocSnippetTask"
      uuid: "docSnippetTask2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Docs"
      valueType: "java.lang.String"
      uuid: "group2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "List snippets that probably should be marked // CONSOLE"
      valueType: "java.lang.String"
      uuid: "description2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.MapProperty"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "mapProperty2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.elasticsearch.gradle.internal.doc.Snippet"
      uuid: "perSnippet2-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.testclusters.ElasticsearchCluster"
      uuid: "elasticsearchCluster2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "nameCustomization-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testClusters"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{version\\\\}"
              valueType: "java.lang.String"
              uuid: "key2"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "version"
              valueType: "java.lang.String"
              uuid: "string7"
          uuid: "pair"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{version_qualified\\\\}"
              valueType: "java.lang.String"
              uuid: "key3"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_getElasticsearch1"
              valueType: "java.lang.String"
              uuid: "string8"
          uuid: "pair2"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{lucene_version\\\\}"
              valueType: "java.lang.String"
              uuid: "key4"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "C"
              valueType: "java.lang.String"
              uuid: "string10"
          uuid: "pair3"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{build_flavor\\\\}"
              valueType: "java.lang.String"
              uuid: "key5"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "default"
              valueType: "java.lang.String"
              uuid: "string"
          uuid: "pair4"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "\\\\{build_type\\\\}"
              valueType: "java.lang.String"
              uuid: "key6"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_supply1"
              valueType: "java.lang.String"
              uuid: "object2"
          uuid: "pair5"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.MapProperty"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "mapProperty3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectSet"
      uuid: "namedDomainObjectSet"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.OS$Conditional"
      uuid: "oSConditional2"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "supplier-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.OS$Conditional"
      uuid: "oSConditional3"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "supplier2-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_supply1"
      valueType: "java.lang.String"
      uuid: "object2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "spec-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch.legacy-yaml-rest-test"
      valueType: "java.lang.String"
      uuid: "pluginId"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Boolean"
      uuid: "property"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
      uuid: "restTestsFromDocSnippetTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "yamlRestTest"
      valueType: "java.lang.String"
      uuid: "name7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "builtBy"
              valueType: "java.lang.String"
              uuid: "key7"
            value:
              sapientType: "MOCK"
              valueType: "org.gradle.api.tasks.TaskProvider"
              genericValueType: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
              uuid: "taskProvider4"
          uuid: "pair6"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,org.gradle.api.tasks.TaskProvider"
      uuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "assemble"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "listSnippets"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.doc.DocSnippetTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.doc.DocSnippetTask"
      uuid: "class-DocSnippetTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "listConsoleCandidates"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "buildRestTests"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.doc.RestTestsFromDocSnippetTask"
      uuid: "class-RestTestsFromDocSnippetTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction3-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      uuid: "void19"
    branches:
    - lineNumber: 52
      expression: "branch expression (line 52)"
      evaluatedAs: false
    - lineNumber: 88
      expression: "snippet.isConsoleCandidate()"
      range: "(88,21)-(88,48)"
      evaluatedAs: false
      internalMethodName: "lambda$apply$7"
