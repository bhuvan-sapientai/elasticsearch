---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
methods:
- method:
    name: "parseLine"
    sourceCodeSignature: "void parseLine(List<Snippet> snippets, int lineNumber, String\
      \ line)"
    returnType: "void"
    parameters:
    - name: "snippets"
      type: "java.util.List"
      genericType: "org.elasticsearch.gradle.internal.doc.Snippet"
    - name: "lineNumber"
      type: "int"
    - name: "line"
      type: "java.lang.String"
    instructionFingerprint: "25B58F0A035063E8E502C63EE3D492B5"
  paths:
  - testPathName: "parseLineWhenSnippetStartMatcherNotMatches"
    constructorSignature: "<init>(java.util.Map<java.lang.String,java.lang.String>)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "snippets"
      valueUuid: "snippets"
    - type: "INPUT"
      name: "lineNumber"
      valueUuid: "lineNumber"
    - type: "INPUT"
      name: "line"
      valueUuid: "line"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "handleCommons(snippets,line):void"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
        parameters:
        - name: "defaultSubstitutions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "defaultSubstitutions"
      valueType: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.elasticsearch.gradle.internal.doc.Snippet"
      uuid: "snippets"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "lineNumber"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "line"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 35
      expression: "snippetStartMatcher.matches()"
      range: "(35,13)-(35,41)"
      evaluatedAs: false
  - testPathName: "parseLineWhenSnippetStartMatcherGroupCountEquals1"
    constructorSignature: "<init>(java.util.Map<java.lang.String,java.lang.String>)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "snippets"
      valueUuid: "snippets"
    - type: "INPUT"
      name: "lineNumber"
      valueUuid: "lineNumber"
    - type: "INPUT"
      name: "line"
      valueUuid: "line"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "newSnippetBuilder():snippetBuilder"
    - type: "LOCAL_VARIABLE"
      valueUuid: "snippetBuilder"
      methodExercised:
        expression: "withLineNumber(int2):snippetBuilder2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "snippetBuilder2"
      methodExercised:
        expression: "withName(currentName):snippetBuilder3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "snippetBuilder3"
      methodExercised:
        expression: "withSubstitutions(defaultSubstitutions):snippetBuilder4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "snippetBuilder4"
      methodExercised:
        expression: "withLanguage(string):snippetBuilder5"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
        parameters:
        - name: "defaultSubstitutions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "defaultSubstitutions"
      valueType: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.elasticsearch.gradle.internal.doc.Snippet"
      uuid: "snippets"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "lineNumber"
    - sapientType: "BASIC"
      content: !<regular>
        value: "line1"
      valueType: "java.lang.String"
      uuid: "line"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.SnippetBuilder"
      uuid: "snippetBuilder"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.SnippetBuilder"
      uuid: "snippetBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.SnippetBuilder"
      uuid: "snippetBuilder3"
    - sapientType: "NULL"
      uuid: "currentName"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.SnippetBuilder"
      uuid: "snippetBuilder4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "defaultSubstitutions"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.doc.SnippetBuilder"
      uuid: "snippetBuilder5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "VOID"
      uuid: "void"
    branches:
    - lineNumber: 35
      expression: "snippetStartMatcher.matches()"
      range: "(35,13)-(35,41)"
      evaluatedAs: true
    - lineNumber: 36
      expression: "snippetBuilder == null"
      range: "(36,17)-(36,38)"
      evaluatedAs: true
    - lineNumber: 37
      expression: "snippetStartMatcher.groupCount() == 1"
      range: "(37,21)-(37,57)"
      evaluatedAs: true
- method:
    name: "testResponsePattern"
    sourceCodeSignature: "Pattern testResponsePattern()"
    returnType: "java.util.regex.Pattern"
    instructionFingerprint: "2958B6D822A43525C386AC66D068DF68"
  paths:
  - testPathName: "testResponsePatternTest"
    constructorSignature: "<init>(java.util.Map<java.lang.String,java.lang.String>)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "pattern2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
        parameters:
        - name: "defaultSubstitutions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "defaultSubstitutions"
      valueType: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.regex.Pattern"
        method: "compile"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\\\{\\\\/\\\\* *TESTRESPONSE(\\\\[(.*)\\\\])? \\\\*\\\\/\\\\\
                }"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.util.regex.Pattern"
      uuid: "pattern2"
- method:
    name: "testPattern"
    sourceCodeSignature: "Pattern testPattern()"
    returnType: "java.util.regex.Pattern"
    instructionFingerprint: "10863850149B55533A218FC5E35E86CC"
  paths:
  - testPathName: "testPatternTest"
    constructorSignature: "<init>(java.util.Map<java.lang.String,java.lang.String>)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "pattern3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
        parameters:
        - name: "defaultSubstitutions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "defaultSubstitutions"
      valueType: "org.elasticsearch.gradle.internal.doc.MdxSnippetParser"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.regex.Pattern"
        method: "compile"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\\\{\\\\/\\\\* *TEST(\\\\[(.*)\\\\])? \\\\*\\\\/\\\\}"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.util.regex.Pattern"
      uuid: "pattern3"
