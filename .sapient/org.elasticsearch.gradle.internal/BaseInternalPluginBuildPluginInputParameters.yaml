---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "1F0AD522B8FEBE8ED1083FF5D477D34A"
  paths:
  - testPathName: "applyWhenNotIsXPackModuleAndDefaultBranch"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string):boolean1"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string4):boolean3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDependencies():dependencySet"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configuration2"
      methodExercised:
        expression: "getDependencies():dependencySet2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "getByName(name):configuration"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "getByName(name2):configuration2"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencySet"
      methodExercised:
        expression: "clear():void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencySet2"
      methodExercised:
        expression: "clear():void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "getByName(name4):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name3,object2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-PluginBuildPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-JarHellPrecommitPlugin):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaPlugin):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager4"
      methodExercised:
        expression: "apply(class-HistoricalFeaturesMetadataPlugin):void4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "afterEvaluate(action2-any):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getAllprojects():set"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getPath():string4"
    - type: "RESULT"
      name: "result"
      valueUuid: "void11"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.DependencySet"
      uuid: "dependencySet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.DependencySet"
      uuid: "dependencySet2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compileOnly"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testImplementation"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "class-PluginPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testClusters"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "addQaCheckDependencies"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "ANY"
      valueType: "java.lang.Object"
      uuid: "object2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      uuid: "class-PluginBuildPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      uuid: "class-JarHellPrecommitPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      uuid: "class-ElasticsearchJavaPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      uuid: "class-HistoricalFeaturesMetadataPlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Project"
      uuid: "action2-any"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.Project"
          uuid: "project4"
      valueType: "java.util.Set"
      genericValueType: "org.gradle.api.Project"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project4"
    - sapientType: "VOID"
      uuid: "void11"
    branches:
    - lineNumber: 79
      expression: "isModule"
      range: "(79,33)-(79,40)"
      evaluatedAs: true
    - lineNumber: 79
      expression: "project.getPath().startsWith(\\\":x-pack\\\")"
      range: "(79,45)-(79,83)"
      evaluatedAs: false
    - lineNumber: 80
      expression: "isModule == false"
      range: "(80,13)-(80,29)"
      evaluatedAs: false
    - lineNumber: 80
      expression: "isXPackModule"
      range: "(80,34)-(80,46)"
      evaluatedAs: false
    - lineNumber: 101
      expression: "branch expression (line 101)"
      evaluatedAs: false
  - testPathName: "applyWhenDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "BaseInternalPluginBuildPlugin.class"
      valueUuid: "BaseInternalPluginBuildPlugin.class"
      methodExercised:
        expression: "addNoticeGeneration(project,object):void8"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string):boolean1"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string4):boolean3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDependencies():dependencySet"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configuration2"
      methodExercised:
        expression: "getDependencies():dependencySet2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "getByName(name):configuration"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "getByName(name2):configuration2"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencySet"
      methodExercised:
        expression: "clear():void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencySet2"
      methodExercised:
        expression: "clear():void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "getByName(name4):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name3,object2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "hasPlugin(class-PluginBuildPlugin):boolean4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-PluginBuildPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-JarHellPrecommitPlugin):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaPlugin):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager4"
      methodExercised:
        expression: "apply(class-HistoricalFeaturesMetadataPlugin):void4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "afterEvaluate(action2-any):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getAllprojects():set"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getPath():string4"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "RESULT"
      name: "result"
      valueUuid: "void12"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "BaseInternalPluginBuildPlugin.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "DE"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.DependencySet"
      uuid: "dependencySet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.DependencySet"
      uuid: "dependencySet2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compileOnly"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testImplementation"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "class-PluginPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testClusters"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "addQaCheckDependencies"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "ANY"
      valueType: "java.lang.Object"
      uuid: "object2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.gradle.api.Plugin"
      uuid: "class-PluginBuildPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      uuid: "class-JarHellPrecommitPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      uuid: "class-ElasticsearchJavaPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      uuid: "class-HistoricalFeaturesMetadataPlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":x-pack"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Project"
      uuid: "action2-any"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.Project"
          uuid: "project4"
      valueType: "java.util.Set"
      genericValueType: "org.gradle.api.Project"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project4"
    - sapientType: "VOID"
      uuid: "void12"
    branches:
    - lineNumber: 79
      expression: "isModule"
      range: "(79,33)-(79,40)"
      evaluatedAs: true
    - lineNumber: 79
      expression: "project.getPath().startsWith(\\\":x-pack\\\")"
      range: "(79,45)-(79,83)"
      evaluatedAs: true
    - lineNumber: 80
      expression: "isModule == false"
      range: "(80,13)-(80,29)"
      evaluatedAs: false
    - lineNumber: 80
      expression: "isXPackModule"
      range: "(80,34)-(80,46)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "branch expression (line 101)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "branch expression (line 102)"
      evaluatedAs: false
  - testPathName: "applyWhenDefaultBranchAndDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "BaseInternalPluginBuildPlugin.class"
      valueUuid: "BaseInternalPluginBuildPlugin.class"
      methodExercised:
        expression: "addNoticeGeneration(project,object):void8"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string):boolean1"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string4):boolean3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDependencies():dependencySet"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configuration2"
      methodExercised:
        expression: "getDependencies():dependencySet2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "getByName(name):configuration"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "getByName(name2):configuration2"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencySet"
      methodExercised:
        expression: "clear():void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencySet2"
      methodExercised:
        expression: "clear():void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "getByName(name4):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer5"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name3,object2-any):void7"
    - type: "LOCAL_VARIABLE"
      name: "testClusters"
      valueUuid: "object3"
      methodExercised:
        expression: "configureEach(action-any):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "hasPlugin(class-PluginBuildPlugin):boolean4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-PluginBuildPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-JarHellPrecommitPlugin):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaPlugin):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager4"
      methodExercised:
        expression: "apply(class-HistoricalFeaturesMetadataPlugin):void4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "afterEvaluate(action2-any):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getAllprojects():set"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getPath():string4"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getExtensions():extensionContainer5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project4"
      methodExercised:
        expression: "getPath():string6"
    - type: "RESULT"
      name: "result"
      valueUuid: "void14"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "BaseInternalPluginBuildPlugin.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "CF"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.DependencySet"
      uuid: "dependencySet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.DependencySet"
      uuid: "dependencySet2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compileOnly"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testImplementation"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "class-PluginPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testClusters"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
        parameters:
        - name: "project"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Project"
            uuid: "object5-project"
        propertiesMap:
          name:
            sapientType: "BASIC"
            content: !<regular>
              value: "EG"
            valueType: "java.lang.String"
            uuid: "name5"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "addQaCheckDependencies"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "ANY"
      valueType: "java.lang.Object"
      uuid: "object2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.gradle.api.Plugin"
      uuid: "class-PluginBuildPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      uuid: "class-JarHellPrecommitPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      uuid: "class-ElasticsearchJavaPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      uuid: "class-HistoricalFeaturesMetadataPlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":x-pack"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Project"
      uuid: "action2-any"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.Project"
          uuid: "project4"
      valueType: "java.util.Set"
      genericValueType: "org.gradle.api.Project"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "VOID"
      uuid: "void14"
    branches:
    - lineNumber: 79
      expression: "isModule"
      range: "(79,33)-(79,40)"
      evaluatedAs: true
    - lineNumber: 79
      expression: "project.getPath().startsWith(\\\":x-pack\\\")"
      range: "(79,45)-(79,83)"
      evaluatedAs: true
    - lineNumber: 80
      expression: "isModule == false"
      range: "(80,13)-(80,29)"
      evaluatedAs: false
    - lineNumber: 80
      expression: "isXPackModule"
      range: "(80,34)-(80,46)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "branch expression (line 101)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "branch expression (line 102)"
      evaluatedAs: true
    - lineNumber: 103
      expression: "branch expression (line 103)"
      evaluatedAs: true
  - testPathName: "applyWhenIsXPackModuleAndDefaultBranchAndDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "BaseInternalPluginBuildPlugin.class"
      valueUuid: "BaseInternalPluginBuildPlugin.class"
      methodExercised:
        expression: "addNoticeGeneration(project,object):void8"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string):boolean1"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string4):boolean3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDependencies():dependencySet"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configuration2"
      methodExercised:
        expression: "getDependencies():dependencySet2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "getByName(name):configuration"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "getByName(name2):configuration2"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencySet"
      methodExercised:
        expression: "clear():void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencySet2"
      methodExercised:
        expression: "clear():void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "getByName(name4):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer5"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object4"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name3,object2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "hasPlugin(class-PluginBuildPlugin):boolean4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-PluginBuildPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-JarHellPrecommitPlugin):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaPlugin):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager4"
      methodExercised:
        expression: "apply(class-HistoricalFeaturesMetadataPlugin):void4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "afterEvaluate(action2-any):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getAllprojects():set"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getPath():string4"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project4"
      methodExercised:
        expression: "getExtensions():extensionContainer5"
    - type: "RESULT"
      name: "result"
      valueUuid: "void12"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "BaseInternalPluginBuildPlugin.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "FG"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.DependencySet"
      uuid: "dependencySet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.DependencySet"
      uuid: "dependencySet2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compileOnly"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testImplementation"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "class-PluginPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testClusters"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
        parameters:
        - name: "project"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Project"
            uuid: "object4-project"
        propertiesMap:
          name:
            sapientType: "BASIC"
            content: !<regular>
              value: "CH"
            valueType: "java.lang.String"
            uuid: "name5"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "addQaCheckDependencies"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "ANY"
      valueType: "java.lang.Object"
      uuid: "object2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.gradle.api.Plugin"
      uuid: "class-PluginBuildPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.JarHellPrecommitPlugin"
      uuid: "class-JarHellPrecommitPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      uuid: "class-ElasticsearchJavaPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      uuid: "class-HistoricalFeaturesMetadataPlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":x-pack"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Project"
      uuid: "action2-any"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.Project"
          uuid: "project4"
      valueType: "java.util.Set"
      genericValueType: "org.gradle.api.Project"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project4"
    - sapientType: "VOID"
      uuid: "void12"
    branches:
    - lineNumber: 79
      expression: "isModule"
      range: "(79,33)-(79,40)"
      evaluatedAs: true
    - lineNumber: 79
      expression: "project.getPath().startsWith(\\\":x-pack\\\")"
      range: "(79,45)-(79,83)"
      evaluatedAs: true
    - lineNumber: 80
      expression: "isModule == false"
      range: "(80,13)-(80,29)"
      evaluatedAs: false
    - lineNumber: 80
      expression: "isXPackModule"
      range: "(80,34)-(80,46)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "branch expression (line 101)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "branch expression (line 102)"
      evaluatedAs: true
    - lineNumber: 103
      expression: "branch expression (line 103)"
      evaluatedAs: false
- method:
    name: "findModulePath"
    sourceCodeSignature: "Optional<String> findModulePath(Project project, String\
      \ pluginName)"
    returnType: "java.util.Optional"
    genericReturnType: "java.lang.String"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    - name: "pluginName"
      type: "java.lang.String"
    instructionFingerprint: "CC94E847B35E1E0C9E2ADBE5D5E9B492"
  paths:
  - testPathName: "findModulePathWhenDefaultBranch"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "INPUT"
      name: "pluginName"
      valueUuid: "pluginName"
    - type: "STATIC"
      name: "GradleUtils.class.real"
      valueUuid: "GradleUtils.class.real"
      methodExercised:
        expression: "isModuleProject(string):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getAllprojects():set"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getPath():string"
    - type: "RESULT"
      name: "result"
      valueUuid: "optional2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pluginName1"
      valueType: "java.lang.String"
      uuid: "pluginName"
    - sapientType: "REAL"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.Project"
          uuid: "project3"
      valueType: "java.util.Set"
      genericValueType: "org.gradle.api.Project"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "optional2Item"
      valueType: "java.util.Optional"
      genericValueType: "java.lang.String"
      uuid: "optional2"
    branches:
    - lineNumber: 101
      expression: "branch expression (line 101)"
      evaluatedAs: false
  - testPathName: "findModulePathWhenDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "INPUT"
      name: "pluginName"
      valueUuid: "pluginName"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string):boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "hasPlugin(class-PluginBuildPlugin):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getAllprojects():set"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "RESULT"
      name: "result"
      valueUuid: "optional2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pluginName1"
      valueType: "java.lang.String"
      uuid: "pluginName"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.gradle.api.Plugin"
      uuid: "class-PluginBuildPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.Project"
          uuid: "project3"
      valueType: "java.util.Set"
      genericValueType: "org.gradle.api.Project"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "optional2Item"
      valueType: "java.util.Optional"
      genericValueType: "java.lang.String"
      uuid: "optional2"
    branches:
    - lineNumber: 101
      expression: "branch expression (line 101)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "branch expression (line 102)"
      evaluatedAs: false
  - testPathName: "findModulePathWhenDefaultBranchAndDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "INPUT"
      name: "pluginName"
      valueUuid: "pluginName"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string):boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "hasPlugin(class-PluginBuildPlugin):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getAllprojects():set"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getPath():string3"
    - type: "RESULT"
      name: "result"
      valueUuid: "optional2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "pluginName"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
        parameters:
        - name: "project"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Project"
            uuid: "object-project"
        propertiesMap:
          name:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "name"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "class-PluginPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.gradle.api.Plugin"
      uuid: "class-PluginBuildPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.Project"
          uuid: "project3"
      valueType: "java.util.Set"
      genericValueType: "org.gradle.api.Project"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getPath1"
          valueType: "java.lang.String"
          uuid: "string3"
      valueType: "java.util.Optional"
      genericValueType: "java.lang.String"
      uuid: "optional2"
    branches:
    - lineNumber: 101
      expression: "branch expression (line 101)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "branch expression (line 102)"
      evaluatedAs: true
    - lineNumber: 103
      expression: "branch expression (line 103)"
      evaluatedAs: true
  - testPathName: "findModulePathWhenDefaultBranchAndDefaultBranchAndDefaultBranch2"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "INPUT"
      name: "pluginName"
      valueUuid: "pluginName"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isModuleProject(string):boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-PluginPropertiesExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "hasPlugin(class-PluginBuildPlugin):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getAllprojects():set"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "p"
      valueUuid: "project3"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "RESULT"
      name: "result"
      valueUuid: "optional2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.BaseInternalPluginBuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "pluginName"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
        parameters:
        - name: "project"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Project"
            uuid: "object-project"
        propertiesMap:
          name:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "name"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "class-PluginPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.plugin.PluginBuildPlugin"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.gradle.api.Plugin"
      uuid: "class-PluginBuildPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.Project"
          uuid: "project3"
      valueType: "java.util.Set"
      genericValueType: "org.gradle.api.Project"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "optional2Item"
      valueType: "java.util.Optional"
      genericValueType: "java.lang.String"
      uuid: "optional2"
    branches:
    - lineNumber: 101
      expression: "branch expression (line 101)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "branch expression (line 102)"
      evaluatedAs: true
    - lineNumber: 103
      expression: "branch expression (line 103)"
      evaluatedAs: false
- method:
    name: "addNoticeGeneration"
    sourceCodeSignature: "void addNoticeGeneration(final Project project, PluginPropertiesExtension\
      \ extension)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    - name: "extension"
      type: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
    instructionFingerprint: "8EB4723E18BAEAE83BA1DD124D8871DD"
  paths:
  - testPathName: "addNoticeGenerationWhenNoticeFileIsNotNull"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "INPUT"
      name: "extension"
      valueUuid: "extension"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "getJavaMainSourceSet(project):optional"
    - type: "LOCAL_VARIABLE"
      name: "bundleSpec"
      valueUuid: "bundleSpec"
      methodExercised:
        expression: "from(file2,configureAction-any):copySpec2"
    - type: "LOCAL_VARIABLE"
      name: "bundleSpec"
      valueUuid: "bundleSpec"
      methodExercised:
        expression: "from(objectArray):copySpec6"
    - type: "LOCAL_VARIABLE"
      name: "s"
      valueUuid: "copySpec3"
      methodExercised:
        expression: "include(stringArray):copySpec4"
    - type: "LOCAL_VARIABLE"
      name: "s"
      valueUuid: "copySpec3"
      methodExercised:
        expression: "rename(renamer-any):copySpec5"
    - type: "LOCAL_VARIABLE"
      name: "noticeTask"
      valueUuid: "noticeTask"
      methodExercised:
        expression: "setInputFile(noticeFile):void"
    - type: "LOCAL_VARIABLE"
      name: "noticeTask"
      valueUuid: "noticeTask"
      methodExercised:
        expression: "source(sourceDirectorySet):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object"
      methodExercised:
        expression: "getAllJava():sourceDirectorySet"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "tasks"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name,class-NoticeTask,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "RESULT"
      name: "result"
      valueUuid: "void3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
        parameters:
        - name: "project"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Project"
            uuid: "extension-project"
        propertiesMap:
          noticeFile:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "noticeFile-pathname"
            valueType: "java.io.File"
            uuid: "noticeFile"
          bundleSpec:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.CopySpec"
            uuid: "bundleSpec"
          licenseFile:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "licenseFile-pathname"
            valueType: "java.io.File"
            uuid: "licenseFile"
      valueType: "org.elasticsearch.gradle.plugin.PluginPropertiesExtension"
      uuid: "extension"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.util.Util"
      uuid: "Util.class"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "MOCK"
          valueType: "org.gradle.api.tasks.SourceSet"
          uuid: "object"
      valueType: "java.util.Optional"
      genericValueType: "org.gradle.api.tasks.SourceSet"
      uuid: "optional"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "bundleSpec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec2"
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.CopySpec"
      uuid: "configureAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec6"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.elasticsearch.gradle.internal.NoticeTask"
            uuid: "taskProvider"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec4"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "renamer-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.NoticeTask"
      uuid: "noticeTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "noticeFile-pathname"
      valueType: "java.io.File"
      uuid: "noticeFile"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.SourceDirectorySet"
      uuid: "sourceDirectorySet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.NoticeTask"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "generateNotice"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.NoticeTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.NoticeTask"
      uuid: "class-NoticeTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "VOID"
      uuid: "void3"
    branches:
    - lineNumber: 115
      expression: "licenseFile != null"
      range: "(115,13)-(115,31)"
      evaluatedAs: true
    - lineNumber: 123
      expression: "noticeFile != null"
      range: "(123,13)-(123,30)"
      evaluatedAs: true
