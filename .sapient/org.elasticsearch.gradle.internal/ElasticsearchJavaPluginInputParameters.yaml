---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "F60B6825FF4A452B1D1C34CC576465DA"
  paths:
  - testPathName: "applyTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "toStringable(getter-any):object"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "toStringable(getter2-any):object2"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "toStringable(getter3-any):object3"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "toStringable(getter4-any):object4"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "toStringable(getter5-any):object5"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "getJavaMainSourceSet(project):optional"
    - type: "LOCAL_VARIABLE"
      valueUuid: "archiveClassifier"
      methodExercised:
        expression: "set(string):void8"
    - type: "LOCAL_VARIABLE"
      name: "testImplementationConfig"
      valueUuid: "configuration2"
      methodExercised:
        expression: "extendsFrom(configurationArray):configuration3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "getByName(name5):configuration"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "getByName(name6):configuration2"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "set(file2-any):void5"
    - type: "LOCAL_VARIABLE"
      name: "manifestPlugin"
      valueUuid: "infoBrokerPlugin"
      methodExercised:
        expression: "add(key,object):infoBrokerPluginManifestEntry"
    - type: "LOCAL_VARIABLE"
      name: "manifestPlugin"
      valueUuid: "infoBrokerPlugin"
      methodExercised:
        expression: "add(key2,object2):infoBrokerPluginManifestEntry2"
    - type: "LOCAL_VARIABLE"
      name: "manifestPlugin"
      valueUuid: "infoBrokerPlugin"
      methodExercised:
        expression: "add(key3,object3):infoBrokerPluginManifestEntry3"
    - type: "LOCAL_VARIABLE"
      name: "manifestPlugin"
      valueUuid: "infoBrokerPlugin"
      methodExercised:
        expression: "add(key4,object4):infoBrokerPluginManifestEntry4"
    - type: "LOCAL_VARIABLE"
      name: "manifestPlugin"
      valueUuid: "infoBrokerPlugin"
      methodExercised:
        expression: "add(key5,object5):infoBrokerPluginManifestEntry5"
    - type: "LOCAL_VARIABLE"
      name: "jarTask"
      valueUuid: "jar"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "jarTask"
      valueUuid: "jar"
      methodExercised:
        expression: "doFirst(action-any):task"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object6"
      methodExercised:
        expression: "getCompileClasspath():fileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginCollection"
      methodExercised:
        expression: "whenPluginAdded(action8-any):action2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "withType(class-InfoBrokerPlugin):pluginCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-JavaLibraryPlugin):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaModulePathPlugin):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager4"
      methodExercised:
        expression: "withPlugin(id,action4-any):void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager5"
      methodExercised:
        expression: "apply(pluginId):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager6"
      methodExercised:
        expression: "apply(pluginId2):void13"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager7"
      methodExercised:
        expression: "apply(pluginId3):void14"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager8"
      methodExercised:
        expression: "apply(pluginId4):void15"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager8"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "shadowJar"
      valueUuid: "shadowJar"
      methodExercised:
        expression: "getArchiveClassifier():archiveClassifier"
    - type: "LOCAL_VARIABLE"
      name: "shadowJar"
      valueUuid: "shadowJar"
      methodExercised:
        expression: "mergeServiceFiles():shadowJar2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action3-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "configureEach(action5-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action9-any):void16"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-Jar):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-ShadowJar):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "named(name,class-Jar):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "named(name2):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer6"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer7"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action6-any):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action7-any):void11"
    - type: "LOCAL_VARIABLE"
      name: "javadoc"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action10-any):void17"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "configure(action11-any):void19"
    - type: "RESULT"
      name: "result"
      valueUuid: "void20"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "jarTask.getDestinationDirectory().set(new File(project.getBuildDir(),\
        \ \\\"distributions\\\"));"
      lineNumber: 69
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.util.Util"
      uuid: "Util.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "getter-any"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "getter2-any"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "getter3-any"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "getter4-any"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "getter5-any"
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "MOCK"
          valueType: "org.gradle.api.tasks.SourceSet"
          uuid: "object6"
      valueType: "java.util.Optional"
      genericValueType: "org.gradle.api.tasks.SourceSet"
      uuid: "optional"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "archiveClassifier"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.artifacts.Configuration"
            uuid: "configuration"
      valueType: "org.gradle.api.artifacts.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compileOnly"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testImplementation"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "MOCK"
      valueType: "nebula.plugin.info.InfoBrokerPlugin"
      uuid: "infoBrokerPlugin"
    - sapientType: "MOCK"
      valueType: "nebula.plugin.info.InfoBrokerPlugin$ManifestEntry"
      uuid: "infoBrokerPluginManifestEntry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Module-Origin"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "nebula.plugin.info.InfoBrokerPlugin$ManifestEntry"
      uuid: "infoBrokerPluginManifestEntry2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Change"
      valueType: "java.lang.String"
      uuid: "key2"
    - sapientType: "MOCK"
      valueType: "nebula.plugin.info.InfoBrokerPlugin$ManifestEntry"
      uuid: "infoBrokerPluginManifestEntry3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "X-Compile-Elasticsearch-Version"
      valueType: "java.lang.String"
      uuid: "key3"
    - sapientType: "MOCK"
      valueType: "nebula.plugin.info.InfoBrokerPlugin$ManifestEntry"
      uuid: "infoBrokerPluginManifestEntry4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "X-Compile-Lucene-Version"
      valueType: "java.lang.String"
      uuid: "key4"
    - sapientType: "MOCK"
      valueType: "nebula.plugin.info.InfoBrokerPlugin$ManifestEntry"
      uuid: "infoBrokerPluginManifestEntry5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "X-Compile-Elasticsearch-Snapshot"
      valueType: "java.lang.String"
      uuid: "key5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.bundling.Jar"
      uuid: "jar"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginCollection"
      uuid: "pluginCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Plugin"
      uuid: "action2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action8-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "nebula.plugin.info.InfoBrokerPlugin"
      valueType: "java.lang.Class"
      genericValueType: "nebula.plugin.info.InfoBrokerPlugin"
      uuid: "class-InfoBrokerPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaLibraryPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaLibraryPlugin"
      uuid: "class-JavaLibraryPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaModulePathPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaModulePathPlugin"
      uuid: "class-ElasticsearchJavaModulePathPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "com.github.johnrengelman.shadow"
      valueType: "java.lang.String"
      uuid: "id"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.plugins.AppliedPlugin"
      uuid: "action4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "nebula.info-broker"
      valueType: "java.lang.String"
      uuid: "pluginId"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "nebula.info-basic"
      valueType: "java.lang.String"
      uuid: "pluginId2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "BASIC"
      content: !<regular>
        value: "nebula.info-java"
      valueType: "java.lang.String"
      uuid: "pluginId3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager8"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "nebula.info-jar"
      valueType: "java.lang.String"
      uuid: "pluginId4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer7"
    - sapientType: "MOCK"
      valueType: "com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"
      uuid: "shadowJar"
    - sapientType: "MOCK"
      valueType: "com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"
      uuid: "shadowJar2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action9-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.tasks.javadoc.Javadoc"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "javadoc"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.bundling.Jar"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.bundling.Jar"
      uuid: "class-Jar"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"
      valueType: "java.lang.Class"
      genericValueType: "com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"
      uuid: "class-ShadowJar"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "assemble"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.javadoc.Javadoc"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.javadoc.Javadoc"
      uuid: "class-Javadoc"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "check"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action6-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action7-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action10-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action11-any"
    - sapientType: "VOID"
      uuid: "void20"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.ElasticsearchJavaPlugin"
- method:
    name: "configureJars"
    sourceCodeSignature: "void configureJars(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "E087C3031139B231E863043EF26FCD6E"
  paths:
  - testPathName: "configureJarsTest"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "archiveClassifier"
      methodExercised:
        expression: "set(string):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "set(file2-any):void2"
    - type: "LOCAL_VARIABLE"
      name: "jarTask"
      valueUuid: "jar"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "jarTask"
      valueUuid: "jar"
      methodExercised:
        expression: "doFirst(action-any):task"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "withPlugin(id,action6-any):void3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "shadowJar"
      valueUuid: "shadowJar"
      methodExercised:
        expression: "getArchiveClassifier():archiveClassifier"
    - type: "LOCAL_VARIABLE"
      name: "shadowJar"
      valueUuid: "shadowJar"
      methodExercised:
        expression: "mergeServiceFiles():shadowJar2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action2-any):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "configureEach(action3-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-Jar):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-ShadowJar):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "named(name,class-Jar):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "named(name2):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action4-any):void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action5-any):void8"
    - type: "RESULT"
      name: "result"
      valueUuid: "void9"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "jarTask.getDestinationDirectory().set(new File(project.getBuildDir(),\
        \ \\\"distributions\\\"));"
      lineNumber: 69
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "archiveClassifier"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.bundling.Jar"
      uuid: "jar"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "com.github.johnrengelman.shadow"
      valueType: "java.lang.String"
      uuid: "id"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.plugins.AppliedPlugin"
      uuid: "action6-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"
      uuid: "shadowJar"
    - sapientType: "MOCK"
      valueType: "com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"
      uuid: "shadowJar2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.bundling.Jar"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.bundling.Jar"
      uuid: "class-Jar"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"
      valueType: "java.lang.Class"
      genericValueType: "com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar"
      uuid: "class-ShadowJar"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "assemble"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "VOID"
      uuid: "void9"
