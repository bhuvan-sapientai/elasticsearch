---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.BuildPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(final Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "F887316E5B5203BD812294DBB8CFB024"
  paths:
  - testPathName: "applyWhenProjectGetPluginManagerHasPluginElasticsearch_standalone_rest_testThrowsInvalidUserDataException"
    constructorSignature: "<init>(org.gradle.initialization.layout.BuildLayout,org.gradle.api.model.ObjectFactory,org.gradle.api.provider.ProviderFactory,org.gradle.api.file.ProjectLayout)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-GlobalBuildInfoPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "hasPlugin(id):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "RESULT"
      name: "result"
      valueUuid: "invalidUserDataException"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BuildPlugin"
        parameters:
        - name: "buildLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.initialization.layout.BuildLayout"
            uuid: "buildLayout"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "providerFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providerFactory"
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
      valueType: "org.elasticsearch.gradle.internal.BuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "class-GlobalBuildInfoPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch.standalone-rest-test"
      valueType: "java.lang.String"
      uuid: "id"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.InvalidUserDataException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "elasticsearch.standalone-test, elasticsearch.standalone-rest-test,\
                \ and elasticsearch.build are mutually exclusive"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "org.gradle.api.InvalidUserDataException"
      uuid: "invalidUserDataException"
    branches:
    - lineNumber: 55
      expression: "project.getPluginManager().hasPlugin(\\\"elasticsearch.standalone-rest-test\\\
        \")"
      range: "(55,13)-(55,86)"
      evaluatedAs: true
  - testPathName: "applyWhenProjectGetPluginManagerNotHasPluginElasticsearch_standalone_rest_test"
    constructorSignature: "<init>(org.gradle.initialization.layout.BuildLayout,org.gradle.api.model.ObjectFactory,org.gradle.api.provider.ProviderFactory,org.gradle.api.file.ProjectLayout)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "configureLicenseAndNotice(project):void9"
    - type: "STATIC"
      name: "InternalPrecommitTasks.class"
      valueUuid: "InternalPrecommitTasks.class"
      methodExercised:
        expression: "create(project,withProductiveCode):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-GlobalBuildInfoPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "hasPlugin(id):boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(pluginId):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager4"
      methodExercised:
        expression: "apply(pluginId2):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager5"
      methodExercised:
        expression: "apply(class-ElasticsearchJavadocPlugin):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager6"
      methodExercised:
        expression: "apply(class-DependenciesInfoPlugin):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager7"
      methodExercised:
        expression: "apply(class-SnykDependencyMonitoringGradlePlugin):void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager8"
      methodExercised:
        expression: "apply(class-HistoricalFeaturesMetadataPlugin):void7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "RESULT"
      name: "result"
      valueUuid: "void10"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BuildPlugin"
        parameters:
        - name: "buildLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.initialization.layout.BuildLayout"
            uuid: "buildLayout"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "providerFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providerFactory"
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
      valueType: "org.elasticsearch.gradle.internal.BuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.precommit.InternalPrecommitTasks"
      uuid: "InternalPrecommitTasks.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "withProductiveCode"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "class-GlobalBuildInfoPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch.standalone-rest-test"
      valueType: "java.lang.String"
      uuid: "id"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch.java"
      valueType: "java.lang.String"
      uuid: "pluginId"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch.publish"
      valueType: "java.lang.String"
      uuid: "pluginId2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavadocPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavadocPlugin"
      uuid: "class-ElasticsearchJavadocPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.DependenciesInfoPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.DependenciesInfoPlugin"
      uuid: "class-DependenciesInfoPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.snyk.SnykDependencyMonitoringGradlePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.snyk.SnykDependencyMonitoringGradlePlugin"
      uuid: "class-SnykDependencyMonitoringGradlePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager8"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.HistoricalFeaturesMetadataPlugin"
      uuid: "class-HistoricalFeaturesMetadataPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "VOID"
      uuid: "void10"
    branches:
    - lineNumber: 55
      expression: "project.getPluginManager().hasPlugin(\\\"elasticsearch.standalone-rest-test\\\
        \")"
      range: "(55,13)-(55,86)"
      evaluatedAs: false
- method:
    name: "configureLicenseAndNotice"
    sourceCodeSignature: "void configureLicenseAndNotice(final Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "D7974EFE9524BB89EE9919993B32372F"
  paths:
  - testPathName: "configureLicenseAndNoticeTest"
    constructorSignature: "<init>(org.gradle.initialization.layout.BuildLayout,org.gradle.api.model.ObjectFactory,org.gradle.api.provider.ProviderFactory,org.gradle.api.file.ProjectLayout)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "fileProperty():regularFileProperty"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "fileProperty():regularFileProperty2"
    - type: "FIELD"
      name: "providerFactory"
      valueUuid: "providerFactory"
      methodExercised:
        expression: "provider(value-any):provider"
    - type: "FIELD"
      name: "providerFactory"
      valueUuid: "providerFactory"
      methodExercised:
        expression: "provider(value2-any):provider3"
    - type: "FIELD"
      name: "projectLayout"
      valueUuid: "projectLayout"
      methodExercised:
        expression: "file(provider):provider2"
    - type: "FIELD"
      name: "projectLayout"
      valueUuid: "projectLayout"
      methodExercised:
        expression: "file(provider3):provider4"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "copySpec2"
      methodExercised:
        expression: "from(string,configureAction2-any):copySpec3"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "copySpec2"
      methodExercised:
        expression: "from(string4,configureAction3-any):copySpec7"
    - type: "LOCAL_VARIABLE"
      name: "from"
      valueUuid: "copySpec4"
      methodExercised:
        expression: "include(stringArray):copySpec5"
    - type: "LOCAL_VARIABLE"
      name: "from"
      valueUuid: "copySpec4"
      methodExercised:
        expression: "rename(renamer-any):copySpec6"
    - type: "LOCAL_VARIABLE"
      name: "from"
      valueUuid: "copySpec8"
      methodExercised:
        expression: "include(stringArray2):copySpec9"
    - type: "LOCAL_VARIABLE"
      name: "from"
      valueUuid: "copySpec8"
      methodExercised:
        expression: "rename(renamer2-any):copySpec10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-ExtraPropertiesExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-ExtraPropertiesExtension):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "ext"
      valueUuid: "object"
      methodExercised:
        expression: "set(name,regularFileProperty):void"
    - type: "LOCAL_VARIABLE"
      name: "ext"
      valueUuid: "object"
      methodExercised:
        expression: "set(name2,regularFileProperty2):void2"
    - type: "LOCAL_VARIABLE"
      name: "ext"
      valueUuid: "object2"
      methodExercised:
        expression: "get(name3):object3"
        throwsExceptions:
        - "org.gradle.api.plugins.ExtraPropertiesExtension$UnknownPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "ext"
      valueUuid: "object2"
      methodExercised:
        expression: "get(name4):object4"
        throwsExceptions:
        - "org.gradle.api.plugins.ExtraPropertiesExtension$UnknownPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "licenseFileExtProperty"
      valueUuid: "object3"
      methodExercised:
        expression: "getAsFile():provider5"
    - type: "LOCAL_VARIABLE"
      name: "noticeFileExtProperty"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():provider6"
    - type: "LOCAL_VARIABLE"
      name: "licenseFile"
      valueUuid: "object5"
      methodExercised:
        expression: "getParent():string"
    - type: "LOCAL_VARIABLE"
      name: "licenseFile"
      valueUuid: "object5"
      methodExercised:
        expression: "getName():string2"
    - type: "LOCAL_VARIABLE"
      name: "noticeFile"
      valueUuid: "object6"
      methodExercised:
        expression: "getParent():string4"
    - type: "LOCAL_VARIABLE"
      name: "noticeFile"
      valueUuid: "object6"
      methodExercised:
        expression: "getName():string5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider5"
      methodExercised:
        expression: "get():object5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider6"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      name: "licenseFileProperty"
      valueUuid: "regularFileProperty"
      methodExercised:
        expression: "convention(provider2):regularFileProperty3"
    - type: "LOCAL_VARIABLE"
      name: "noticeFileProperty"
      valueUuid: "regularFileProperty2"
      methodExercised:
        expression: "convention(provider4):regularFileProperty4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action-any):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-Jar):taskCollection"
    - type: "RESULT"
      name: "result"
      valueUuid: "void4"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.BuildPlugin"
        parameters:
        - name: "buildLayout"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.gradle.initialization.layout.BuildLayout"
              parameters:
              - name: "rootDirectory"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.io.File"
                    parameters:
                    - name: "pathname"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pathname1"
                        valueType: "java.lang.String"
                        uuid: "rootDirectory-pathname"
                  valueType: "java.io.File"
                  uuid: "buildLayout-rootDirectory"
              - name: "settingsDir"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.io.File"
                    parameters:
                    - name: "pathname"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pathname1"
                        valueType: "java.lang.String"
                        uuid: "buildLayout-settingsDir-pathname"
                  valueType: "java.io.File"
                  uuid: "buildLayout-settingsDir"
              - name: "settingsFile"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.io.File"
                    parameters:
                    - name: "pathname"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pathname1"
                        valueType: "java.lang.String"
                        uuid: "buildLayout-settingsFile-pathname"
                  valueType: "java.io.File"
                  uuid: "buildLayout-settingsFile"
              - name: "scriptFileResolver"
                value:
                  sapientType: "MOCK"
                  valueType: "org.gradle.internal.scripts.ScriptFileResolver"
                  uuid: "buildLayout-scriptFileResolver"
            valueType: "org.gradle.initialization.layout.BuildLayout"
            uuid: "buildLayout"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "providerFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providerFactory"
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
      valueType: "org.elasticsearch.gradle.internal.BuildPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "regularFileProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "regularFileProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ProviderFactory"
      uuid: "providerFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider3"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ProjectLayout"
      uuid: "projectLayout"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.api.file.RegularFile"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.api.file.RegularFile"
      uuid: "provider4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getParent1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.CopySpec"
      uuid: "configureAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getParent1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.CopySpec"
      uuid: "configureAction3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getName1"
            valueType: "java.lang.String"
            uuid: "string2"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec6"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "renamer-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec9"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getName1"
            valueType: "java.lang.String"
            uuid: "string5"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec10"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "renamer2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.ExtraPropertiesExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "class-ExtraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "object2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "licenseFile"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "noticeFile"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "licenseFile"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "noticeFile"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider6"
    - sapientType: "MOCK"
      valueType: "java.io.File"
      uuid: "object5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "java.io.File"
      uuid: "object6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getName1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "regularFileProperty3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "regularFileProperty4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.bundling.Jar"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.bundling.Jar"
      uuid: "class-Jar"
    - sapientType: "VOID"
      uuid: "void4"
