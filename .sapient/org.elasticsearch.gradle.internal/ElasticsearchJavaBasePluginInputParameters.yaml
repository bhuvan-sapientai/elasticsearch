---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "07BBACDC611C842E802FF4642328B541"
  paths:
  - testPathName: "applyTest"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "configureCompile(project):void8"
    - type: "STATIC"
      name: "ElasticsearchJavaBasePlugin.class"
      valueUuid: "ElasticsearchJavaBasePlugin.class"
      methodExercised:
        expression: "configureConfigurations(project):void7"
    - type: "STATIC"
      name: "TestUtil.class.real"
      valueUuid: "TestUtil.class.real"
      methodExercised:
        expression: "getTestLibraryPath(string2):string3"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getVersions():map2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "create(name):object"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "project(map):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-SystemPropertyCommandLineArgumentProvider):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name2,map2):void13"
    - type: "LOCAL_VARIABLE"
      valueUuid: "inputNormalizationHandler"
      methodExercised:
        expression: "getRuntimeClasspath():runtimeClasspathNormalization"
    - type: "LOCAL_VARIABLE"
      valueUuid: "inputNormalizationHandler2"
      methodExercised:
        expression: "getRuntimeClasspath():runtimeClasspathNormalization2"
    - type: "LOCAL_VARIABLE"
      name: "nativeConfig"
      valueUuid: "object"
      methodExercised:
        expression: "defaultDependencies(action-any):configuration"
    - type: "LOCAL_VARIABLE"
      name: "nativeConfigFiles"
      valueUuid: "object"
      methodExercised:
        expression: "getAsPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "systemProperties"
      valueUuid: "object2"
      methodExercised:
        expression: "systemProperty(key,supplier):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-GlobalBuildInfoPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-JavaBasePlugin):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-RepositoriesSetupPlugin):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager4"
      methodExercised:
        expression: "apply(class-ElasticsearchTestBasePlugin):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager5"
      methodExercised:
        expression: "apply(class-PrecommitTaskPlugin):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager6"
      methodExercised:
        expression: "apply(class-MutedTestPlugin):void6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getNormalization():inputNormalizationHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getNormalization():inputNormalizationHandler2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      valueUuid: "runtimeClasspathNormalization"
      methodExercised:
        expression: "ignore(pattern):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "runtimeClasspathNormalization2"
      methodExercised:
        expression: "ignore(pattern2):void10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action2-any):void11"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-Test):taskCollection"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test"
      methodExercised:
        expression: "dependsOn(objectArray):task"
    - type: "RESULT"
      name: "result"
      valueUuid: "void14"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "ElasticsearchJavaBasePlugin.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "REAL"
      valueType: "org.elasticsearch.gradle.internal.test.TestUtil"
      uuid: "TestUtil.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A/darwin-aarch64"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "nativeLibs"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "path"
              valueType: "java.lang.String"
              uuid: "key2"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ":libs:elasticsearch-native:elasticsearch-native-libraries"
              valueType: "java.lang.String"
              uuid: "string"
          uuid: "pair"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "configuration"
              valueType: "java.lang.String"
              uuid: "key3"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "default"
              valueType: "java.lang.String"
              uuid: "value"
          uuid: "pair2"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.test.SystemPropertyCommandLineArgumentProvider"
      uuid: "object2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.test.SystemPropertyCommandLineArgumentProvider"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.test.SystemPropertyCommandLineArgumentProvider"
      uuid: "class-SystemPropertyCommandLineArgumentProvider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "versions"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.normalization.InputNormalizationHandler"
      uuid: "inputNormalizationHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.normalization.RuntimeClasspathNormalization"
      uuid: "runtimeClasspathNormalization"
    - sapientType: "MOCK"
      valueType: "org.gradle.normalization.InputNormalizationHandler"
      uuid: "inputNormalizationHandler2"
    - sapientType: "MOCK"
      valueType: "org.gradle.normalization.RuntimeClasspathNormalization"
      uuid: "runtimeClasspathNormalization2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.artifacts.DependencySet"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "es.nativelibs.path"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "class-GlobalBuildInfoPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaBasePlugin"
      uuid: "class-JavaBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.RepositoriesSetupPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.RepositoriesSetupPlugin"
      uuid: "class-RepositoriesSetupPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchTestBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchTestBasePlugin"
      uuid: "class-ElasticsearchTestBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.conventions.precommit.PrecommitTaskPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.conventions.precommit.PrecommitTaskPlugin"
      uuid: "class-PrecommitTaskPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.MutedTestPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.MutedTestPlugin"
      uuid: "class-MutedTestPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "META-INF/MANIFEST.MF"
      valueType: "java.lang.String"
      uuid: "pattern"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "IMPL-JARS/**/META-INF/MANIFEST.MF"
      valueType: "java.lang.String"
      uuid: "pattern2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.Test"
      uuid: "test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.artifacts.Configuration"
            uuid: "object"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "VOID"
      uuid: "void14"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
- method:
    name: "configureConfigurations"
    sourceCodeSignature: "void configureConfigurations(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "37A69F486FA8789871628501081E1FFF"
  paths:
  - testPathName: "configureConfigurationsWhenProjectGetPathEquals_build_tools"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":build-tools"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "VOID"
      uuid: "void"
    branches:
    - lineNumber: 96
      expression: "project.getPath().startsWith(\\\":test:fixtures\\\")"
      range: "(96,13)-(96,58)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "project.getPath().equals(\\\":build-tools\\\")"
      range: "(96,63)-(96,102)"
      evaluatedAs: true
  - testPathName: "configureConfigurationsWhenDefaultBranch"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "disableTransitiveDependencies(configuration3):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "all(action-any):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "matching(spec-any):namedDomainObjectSet"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "namedDomainObjectSet"
      methodExercised:
        expression: "configureEach(action2-any):void3"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "object"
      methodExercised:
        expression: "all(action3-any):void2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getApiConfigurationName():string4"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getImplementationConfigurationName():string5"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getCompileOnlyConfigurationName():string6"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getRuntimeOnlyConfigurationName():string7"
    - type: "RESULT"
      name: "result"
      valueUuid: "void5"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectSet"
      uuid: "namedDomainObjectSet"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "spec-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "sourceSet"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "G"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "VOID"
      uuid: "void5"
    branches:
    - lineNumber: 96
      expression: "project.getPath().startsWith(\\\":test:fixtures\\\")"
      range: "(96,13)-(96,58)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "project.getPath().equals(\\\":build-tools\\\")"
      range: "(96,63)-(96,102)"
      evaluatedAs: false
    - lineNumber: 101
      expression: "configuration.getName().endsWith(\\\"Fixture\\\")"
      range: "(101,17)-(101,59)"
      evaluatedAs: true
      internalMethodName: "lambda$configureConfigurations$0"
    - lineNumber: 122
      expression: "branch expression (line 122)"
      evaluatedAs: true
  - testPathName: "configureConfigurationsWhenConfigurationGetNameNotEndsWithFixtureAndDefaultBranch"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "disableTransitiveDependencies(configuration3):void4"
    - type: "LOCAL_VARIABLE"
      name: "configuration"
      valueUuid: "configuration"
      methodExercised:
        expression: "getName():string3"
    - type: "LOCAL_VARIABLE"
      name: "configuration"
      valueUuid: "configuration"
      methodExercised:
        expression: "resolutionStrategy(action4-any):configuration2"
    - type: "LOCAL_VARIABLE"
      name: "c"
      valueUuid: "configuration3"
      methodExercised:
        expression: "getName():string8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "all(action-any):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "matching(spec-any):namedDomainObjectSet"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "namedDomainObjectSet"
      methodExercised:
        expression: "configureEach(action2-any):void3"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "object"
      methodExercised:
        expression: "all(action3-any):void2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getApiConfigurationName():string4"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getImplementationConfigurationName():string5"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getCompileOnlyConfigurationName():string6"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "sourceSet"
      methodExercised:
        expression: "getRuntimeOnlyConfigurationName():string7"
    - type: "RESULT"
      name: "result"
      valueUuid: "void5"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "GHIJKLM"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.artifacts.ResolutionStrategy"
      uuid: "action4-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "DQ"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectSet"
      uuid: "namedDomainObjectSet"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "spec-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "NS"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "CR"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "sourceSet"
    - sapientType: "BASIC"
      content: !<regular>
        value: "AP"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BO"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "VOID"
      uuid: "void5"
    branches:
    - lineNumber: 96
      expression: "project.getPath().startsWith(\\\":test:fixtures\\\")"
      range: "(96,13)-(96,58)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "project.getPath().equals(\\\":build-tools\\\")"
      range: "(96,63)-(96,102)"
      evaluatedAs: false
    - lineNumber: 101
      expression: "configuration.getName().endsWith(\\\"Fixture\\\")"
      range: "(101,17)-(101,59)"
      evaluatedAs: false
      internalMethodName: "lambda$configureConfigurations$0"
    - lineNumber: 122
      expression: "branch expression (line 122)"
      evaluatedAs: false
- method:
    name: "configureCompile"
    sourceCodeSignature: "void configureCompile(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "684A345A18F3F41F6909EDA44BDB461B"
  paths:
  - testPathName: "configureCompileWhenBuildParamsIsCiEqualsFalse"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "javaToolchains"
      valueUuid: "javaToolchains"
      methodExercised:
        expression: "compilerFor(config-any):provider3"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getJavaToolChainSpec():provider"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getJavaToolChainSpec():provider2"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getMinimumRuntimeVersion():javaVersion"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getMinimumRuntimeVersion():javaVersion2"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getMinimumRuntimeVersion():javaVersion3"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "isCi():boolean6"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string4):javaVersion6"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string6):javaVersion7"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "setEncoding(encoding):void7"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "setIncremental(incremental):compileOptions2"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getRelease():property3"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "setIncremental(incremental2):compileOptions3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "compileOptions4"
      methodExercised:
        expression: "getRelease():release"
    - type: "LOCAL_VARIABLE"
      valueUuid: "conventionMapping"
      methodExercised:
        expression: "map(propertyName,value2-any):conventionMappingMappedProperty"
    - type: "LOCAL_VARIABLE"
      valueUuid: "conventionMapping2"
      methodExercised:
        expression: "map(propertyName2,value3-any):conventionMappingMappedProperty2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name,value):void"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "groovyCompile"
      methodExercised:
        expression: "getOptions():compileOptions4"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "groovyCompile"
      methodExercised:
        expression: "getTargetCompatibility():string6"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getJavaCompiler():javaCompiler"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getConventionMapping():conventionMapping"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getConventionMapping():conventionMapping2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getTargetCompatibility():string4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "javaCompiler"
      methodExercised:
        expression: "set(provider3):void6"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "toolchain(object2):javaToolchainSpec"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "setSourceCompatibility(javaVersion):void2"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "setTargetCompatibility(javaVersion2):void3"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceCompatibility():javaVersion4"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "getTargetCompatibility():javaVersion5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "provider(value4-any):provider4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "provider(value5-any):provider5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property3"
      methodExercised:
        expression: "set(provider4):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "release"
      methodExercised:
        expression: "set(provider5):void10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "configureEach(action2-any):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-GroovyCompile):taskCollection2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void11"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "javaToolchains"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaCompiler"
      uuid: "provider3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "? extends org.gradle.api.Action<org.gradle.jvm.toolchain.JavaToolchainSpec>"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "? extends org.gradle.api.Action<org.gradle.jvm.toolchain.JavaToolchainSpec>"
      uuid: "provider2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_7"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "7"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_8"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_2"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "UTF-8"
      valueType: "java.lang.String"
      uuid: "encoding"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "incremental"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Integer"
      uuid: "property3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "incremental2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Integer"
      uuid: "release"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping"
      uuid: "conventionMapping"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping$MappedProperty"
      uuid: "conventionMappingMappedProperty"
    - sapientType: "BASIC"
      content: !<regular>
        value: "sourceCompatibility"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      genericValueType: "?"
      uuid: "value2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping"
      uuid: "conventionMapping2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping$MappedProperty"
      uuid: "conventionMappingMappedProperty2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "targetCompatibility"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      genericValueType: "?"
      uuid: "value3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compactProfile"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "full"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.GroovyCompile"
      uuid: "groovyCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaCompiler"
      uuid: "javaCompiler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "javaToolchainSpec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Action"
      uuid: "object2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_9"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_9"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.lang.Integer"
      uuid: "provider4"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.lang.Integer"
      uuid: "provider5"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value5-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.GroovyCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.GroovyCompile"
      uuid: "class-GroovyCompile"
    - sapientType: "VOID"
      uuid: "void11"
    branches:
    - lineNumber: 132
      expression: "BuildParams.getJavaToolChainSpec().isPresent()"
      range: "(132,13)-(132,58)"
      evaluatedAs: true
    - lineNumber: 162
      expression: "BuildParams.isCi() == false"
      range: "(162,43)-(162,69)"
      evaluatedAs: true
      internalMethodName: "lambda$configureCompile$6"
  - testPathName: "configureCompileWhenBuildParamsIsCiNotEqualsFalse"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "javaToolchains"
      valueUuid: "javaToolchains"
      methodExercised:
        expression: "compilerFor(config-any):provider3"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getJavaToolChainSpec():provider"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getJavaToolChainSpec():provider2"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getMinimumRuntimeVersion():javaVersion"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getMinimumRuntimeVersion():javaVersion2"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getMinimumRuntimeVersion():javaVersion3"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "isCi():boolean6"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string4):javaVersion6"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string6):javaVersion7"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "setEncoding(encoding):void7"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "setIncremental(incremental):compileOptions2"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getRelease():property3"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "setIncremental(incremental2):compileOptions3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "compileOptions4"
      methodExercised:
        expression: "getRelease():release"
    - type: "LOCAL_VARIABLE"
      valueUuid: "conventionMapping"
      methodExercised:
        expression: "map(propertyName,value2-any):conventionMappingMappedProperty"
    - type: "LOCAL_VARIABLE"
      valueUuid: "conventionMapping2"
      methodExercised:
        expression: "map(propertyName2,value3-any):conventionMappingMappedProperty2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name,value):void"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "groovyCompile"
      methodExercised:
        expression: "getOptions():compileOptions4"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "groovyCompile"
      methodExercised:
        expression: "getTargetCompatibility():string6"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getJavaCompiler():javaCompiler"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getConventionMapping():conventionMapping"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getConventionMapping():conventionMapping2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getTargetCompatibility():string4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "javaCompiler"
      methodExercised:
        expression: "set(provider3):void6"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "toolchain(object2):javaToolchainSpec"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "setSourceCompatibility(javaVersion):void2"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "setTargetCompatibility(javaVersion2):void3"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceCompatibility():javaVersion4"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object"
      methodExercised:
        expression: "getTargetCompatibility():javaVersion5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "provider(value4-any):provider4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "provider(value4-any):provider5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property3"
      methodExercised:
        expression: "set(provider4):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "release"
      methodExercised:
        expression: "set(provider5):void10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "configureEach(action2-any):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-GroovyCompile):taskCollection2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void11"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "javaToolchains"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaCompiler"
      uuid: "provider3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "? extends org.gradle.api.Action<org.gradle.jvm.toolchain.JavaToolchainSpec>"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "? extends org.gradle.api.Action<org.gradle.jvm.toolchain.JavaToolchainSpec>"
      uuid: "provider2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_7"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "7"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_8"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_2"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "UTF-8"
      valueType: "java.lang.String"
      uuid: "encoding"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "incremental"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Integer"
      uuid: "property3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "incremental2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Integer"
      uuid: "release"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping"
      uuid: "conventionMapping"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping$MappedProperty"
      uuid: "conventionMappingMappedProperty"
    - sapientType: "BASIC"
      content: !<regular>
        value: "sourceCompatibility"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      genericValueType: "?"
      uuid: "value2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping"
      uuid: "conventionMapping2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping$MappedProperty"
      uuid: "conventionMappingMappedProperty2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "targetCompatibility"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      genericValueType: "?"
      uuid: "value3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compactProfile"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "full"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.GroovyCompile"
      uuid: "groovyCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaCompiler"
      uuid: "javaCompiler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "javaToolchainSpec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Action"
      uuid: "object2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_9"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_9"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.lang.Integer"
      uuid: "provider4"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.lang.Integer"
      uuid: "provider5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.GroovyCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.GroovyCompile"
      uuid: "class-GroovyCompile"
    - sapientType: "VOID"
      uuid: "void11"
    branches:
    - lineNumber: 132
      expression: "BuildParams.getJavaToolChainSpec().isPresent()"
      range: "(132,13)-(132,58)"
      evaluatedAs: true
    - lineNumber: 162
      expression: "BuildParams.isCi() == false"
      range: "(162,43)-(162,69)"
      evaluatedAs: false
      internalMethodName: "lambda$configureCompile$6"
- method:
    name: "configureInputNormalization"
    sourceCodeSignature: "void configureInputNormalization(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "3BC0B13EF3773F5125F3B5326F278CDF"
  paths:
  - testPathName: "configureInputNormalizationTest"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "inputNormalizationHandler"
      methodExercised:
        expression: "getRuntimeClasspath():runtimeClasspathNormalization"
    - type: "LOCAL_VARIABLE"
      valueUuid: "inputNormalizationHandler2"
      methodExercised:
        expression: "getRuntimeClasspath():runtimeClasspathNormalization2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getNormalization():inputNormalizationHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getNormalization():inputNormalizationHandler2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "runtimeClasspathNormalization"
      methodExercised:
        expression: "ignore(pattern):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "runtimeClasspathNormalization2"
      methodExercised:
        expression: "ignore(pattern2):void2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void3"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.normalization.InputNormalizationHandler"
      uuid: "inputNormalizationHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.normalization.RuntimeClasspathNormalization"
      uuid: "runtimeClasspathNormalization"
    - sapientType: "MOCK"
      valueType: "org.gradle.normalization.InputNormalizationHandler"
      uuid: "inputNormalizationHandler2"
    - sapientType: "MOCK"
      valueType: "org.gradle.normalization.RuntimeClasspathNormalization"
      uuid: "runtimeClasspathNormalization2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "META-INF/MANIFEST.MF"
      valueType: "java.lang.String"
      uuid: "pattern"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "IMPL-JARS/**/META-INF/MANIFEST.MF"
      valueType: "java.lang.String"
      uuid: "pattern2"
    - sapientType: "VOID"
      uuid: "void3"
