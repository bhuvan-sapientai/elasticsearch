---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.InternalDistributionArchiveSetupPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "08485A2B3A7743578A71B9A5B8E24EFC"
  paths:
  - testPathName: "applyWhenSubdirContainsOss"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "container"
      valueUuid: "namedDomainObjectContainer"
      methodExercised:
        expression: "whenObjectAdded(action2-any):action"
    - type: "STATIC"
      name: "Attribute.class.real"
      valueUuid: "Attribute.class.real"
      methodExercised:
        expression: "of(name4,class-Boolean):attribute2"
    - type: "STATIC"
      name: "GUtils.class"
      valueUuid: "GUtils.class"
      methodExercised:
        expression: "capitalize(string4):string5"
    - type: "STATIC"
      name: "GUtils.class"
      valueUuid: "GUtils.class"
      methodExercised:
        expression: "capitalize(string):string8"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractArchiveTask"
      methodExercised:
        expression: "getName():string13"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractArchiveTask"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractArchiveTask"
      methodExercised:
        expression: "getArchiveBaseName():property"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractCopyTask2"
      methodExercised:
        expression: "dependsOn(objectArray2):task3"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractCopyTask2"
      methodExercised:
        expression: "setIncludeEmptyDirs(includeEmptyDirs):void14"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractCopyTask2"
      methodExercised:
        expression: "dirPermissions(configureAction2-any):copyProcessingSpec"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractCopyTask2"
      methodExercised:
        expression: "filePermissions(configureAction3-any):copyProcessingSpec2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "archiveExtension"
      methodExercised:
        expression: "set(value4):void21"
    - type: "LOCAL_VARIABLE"
      valueUuid: "artifactHandler"
      methodExercised:
        expression: "add(configurationName,distributionArchive2-archiveTask):publishArtifact"
    - type: "LOCAL_VARIABLE"
      valueUuid: "artifactHandler2"
      methodExercised:
        expression: "add(configurationName2,distributionArchive2-expandedDistTask):publishArtifact2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "artifactHandler3"
      methodExercised:
        expression: "add(configurationName3,distributionArchive2-archiveTask):publishArtifact3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "attributeContainer"
      methodExercised:
        expression: "attribute(attribute,value):attributeContainer2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "attributeContainer3"
      methodExercised:
        expression: "attribute(attribute,value2):attributeContainer4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "attributeContainer5"
      methodExercised:
        expression: "attribute(attribute2,boolean2):attributeContainer6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "create(name2):object"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "create(name3):object2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "set(file9):void18"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask"
      methodExercised:
        expression: "setDir(file2-any):void5"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask"
      methodExercised:
        expression: "setDirMode(dirMode):void6"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask2"
      methodExercised:
        expression: "setDir(file6-any):void8"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask2"
      methodExercised:
        expression: "setDirMode(dirMode2):void9"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask3"
      methodExercised:
        expression: "setDir(file8-any):void11"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask3"
      methodExercised:
        expression: "setDirMode(dirMode3):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "add(name6,namedDomainObjectContainer):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "add(name9,file6-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer4"
      methodExercised:
        expression: "add(name11,file8-any):void10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name7,file4-any):void4"
    - type: "LOCAL_VARIABLE"
      name: "extractedConfiguration"
      valueUuid: "object"
      methodExercised:
        expression: "setCanBeResolved(allowed):void"
    - type: "LOCAL_VARIABLE"
      name: "extractedConfiguration"
      valueUuid: "object"
      methodExercised:
        expression: "getAttributes():attributeContainer"
    - type: "LOCAL_VARIABLE"
      name: "extractedConfiguration"
      valueUuid: "object"
      methodExercised:
        expression: "getAllArtifacts():publishArtifactSet"
    - type: "LOCAL_VARIABLE"
      name: "compositeConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "setCanBeResolved(allowed2):void2"
    - type: "LOCAL_VARIABLE"
      name: "compositeConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "getAttributes():attributeContainer3"
    - type: "LOCAL_VARIABLE"
      name: "compositeConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "getAttributes():attributeContainer5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-BasePlugin):plugin"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer2"
      methodExercised:
        expression: "apply(class-BasePlugin):plugin2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "container(class-DistributionArchive,factory-any):namedDomainObjectContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "project(string12,configureAction-any):project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer8"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "file(string17):file9"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer9"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getPlugins():pluginContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getArtifacts():artifactHandler"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getArtifacts():artifactHandler2"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getArtifacts():artifactHandler3"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "set(value3):void19"
    - type: "LOCAL_VARIABLE"
      valueUuid: "publishArtifactSet"
      methodExercised:
        expression: "getBuildDependencies():taskDependency"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "symbolicLinkPreservingTar"
      methodExercised:
        expression: "getArchiveExtension():archiveExtension"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "symbolicLinkPreservingTar"
      methodExercised:
        expression: "setCompression(Enum-org.gradle.api.tasks.bundling.Compression-GZIP):void22"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action3-any):void13"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action4-any):void17"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "configureEach(action5-any):void20"
    - type: "LOCAL_VARIABLE"
      name: "tasks"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(string6,class-Sync,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "tasks"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(string9,class-SymbolicLinkPreservingTar):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name5,configurationAction2-any):taskProvider6"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "register(name8,class-EmptyDirTask,configurationAction3-any):taskProvider7"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "register(name10,class-EmptyDirTask,configurationAction4-any):taskProvider8"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "register(name12,class-EmptyDirTask,configurationAction5-any):taskProvider9"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer6"
      methodExercised:
        expression: "withType(class-AbstractCopyTask):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer7"
      methodExercised:
        expression: "withType(class-EmptyDirTask):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer8"
      methodExercised:
        expression: "withType(class-AbstractArchiveTask):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer9"
      methodExercised:
        expression: "withType(class-SymbolicLinkPreservingTar):taskCollection4"
    - type: "RESULT"
      name: "result"
      valueUuid: "void23"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "File logsDir = new File(project.getBuildDir(), \\\"logs-hack/logs\\\
        \");"
      lineNumber: 127
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.InternalDistributionArchiveSetupPlugin"
        parameters: []
        propertiesMap:
          container:
            sapientType: "MOCK"
            valueType: "org.gradle.api.NamedDomainObjectContainer"
            genericValueType: "org.elasticsearch.gradle.internal.DistributionArchive"
            uuid: "namedDomainObjectContainer"
      valueType: "org.elasticsearch.gradle.internal.InternalDistributionArchiveSetupPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      genericValueType: "org.elasticsearch.gradle.internal.DistributionArchive"
      uuid: "namedDomainObjectContainer"
      nameForMock: "container"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super java.lang.Object"
      uuid: "action"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "REAL"
      valueType: "org.gradle.api.attributes.Attribute"
      uuid: "Attribute.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.api.attributes.Attribute"
        method: "of"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "composite"
            valueType: "java.lang.String"
            uuid: "string18"
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Boolean"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Boolean"
            uuid: "class-Boolean"
      valueType: "org.gradle.api.attributes.Attribute"
      uuid: "attribute2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "composite"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Boolean"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Boolean"
      uuid: "class-Boolean"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.GUtils"
      uuid: "GUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_capitalize1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string4"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_capitalize1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.bundling.AbstractArchiveTask"
      uuid: "abstractArchiveTask"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getName1"
      valueType: "java.lang.String"
      uuid: "string13"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskCollection"
            uuid: "taskCollection2"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "includeEmptyDirs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopyProcessingSpec"
      uuid: "copyProcessingSpec"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.ConfigurableFilePermissions"
      uuid: "configureAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopyProcessingSpec"
      uuid: "copyProcessingSpec2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.ConfigurableFilePermissions"
      uuid: "configureAction3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "archiveExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
    - sapientType: "BASIC"
      content: !<regular>
        value: "tar.gz"
      valueType: "java.lang.String"
      uuid: "value4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.ArtifactHandler"
      uuid: "artifactHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifact"
      uuid: "publishArtifact"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "configurationName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "? extends org.gradle.api.tasks.bundling.AbstractArchiveTask"
      uuid: "distributionArchive2-archiveTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.ArtifactHandler"
      uuid: "artifactHandler2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifact"
      uuid: "publishArtifact2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extracted"
      valueType: "java.lang.String"
      uuid: "configurationName2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.tasks.Sync"
      uuid: "distributionArchive2-expandedDistTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.ArtifactHandler"
      uuid: "artifactHandler3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifact"
      uuid: "publishArtifact3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "composite"
      valueType: "java.lang.String"
      uuid: "configurationName3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.gradle.api.artifacts.type.ArtifactTypeDefinition"
        fieldName: "ARTIFACT_TYPE_ATTRIBUTE"
      valueType: "org.gradle.api.attributes.Attribute"
      uuid: "attribute"
    - sapientType: "BASIC"
      content: !<regular>
        value: "directory"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "directory"
      valueType: "java.lang.String"
      uuid: "value2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extracted"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "composite"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file9-pathname"
      valueType: "java.io.File"
      uuid: "file9"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.EmptyDirTask"
      uuid: "emptyDirTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "BASIC"
      content: !<regular>
        value: 493
      valueType: "int"
      uuid: "dirMode"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.EmptyDirTask"
      uuid: "emptyDirTask2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file6-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: 493
      valueType: "int"
      uuid: "dirMode2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.EmptyDirTask"
      uuid: "emptyDirTask3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file8-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "BASIC"
      content: !<regular>
        value: 488
      valueType: "int"
      uuid: "dirMode3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "distribution_archives"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pluginsDir"
      valueType: "java.lang.String"
      uuid: "name9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jvmOptionsDir"
      valueType: "java.lang.String"
      uuid: "name11"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "logsDir"
      valueType: "java.lang.String"
      uuid: "name7"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file4-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "allowed"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifactSet"
      uuid: "publishArtifactSet"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "allowed2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.BasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.BasePlugin"
      uuid: "class-BasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.DistributionArchive"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.DistributionArchive"
      uuid: "class-DistributionArchive"
    - sapientType: "ANY"
      valueType: "org.gradle.api.NamedDomainObjectFactory"
      uuid: "factory-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string12"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Project"
      uuid: "configureAction-any"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file5-pathname"
      valueType: "java.io.File"
      uuid: "file5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file7-pathname"
      valueType: "java.io.File"
      uuid: "file7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string17"
      valueType: "java.lang.String"
      uuid: "string17"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch-oss"
      valueType: "java.lang.String"
      uuid: "value3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskDependency"
      uuid: "taskDependency"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.SymbolicLinkPreservingTar"
      uuid: "symbolicLinkPreservingTar"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
    - sapientType: "ENUM"
      content: !<regular>
        value: "GZIP"
      valueType: "org.gradle.api.tasks.bundling.Compression"
      uuid: "Enum-org.gradle.api.tasks.bundling.Compression-GZIP"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.tasks.Sync"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string6"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.Sync"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.Sync"
      uuid: "class-Sync"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "? extends org.gradle.api.tasks.bundling.AbstractArchiveTask"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string9"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.SymbolicLinkPreservingTar"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.SymbolicLinkPreservingTar"
      uuid: "class-SymbolicLinkPreservingTar"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.Task"
      uuid: "taskProvider6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extractedAssemble"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "configurationAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "createLogsDir"
      valueType: "java.lang.String"
      uuid: "name8"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.EmptyDirTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.EmptyDirTask"
      uuid: "class-EmptyDirTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "createPluginsDir"
      valueType: "java.lang.String"
      uuid: "name10"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "createJvmOptionsDir"
      valueType: "java.lang.String"
      uuid: "name12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction5-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.AbstractCopyTask"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "class-AbstractCopyTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.bundling.AbstractArchiveTask"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.bundling.AbstractArchiveTask"
      uuid: "class-AbstractArchiveTask"
    - sapientType: "VOID"
      uuid: "void23"
    branches:
    - lineNumber: 66
      expression: "name.endsWith(\\\"Tar\\\")"
      range: "(66,20)-(66,39)"
      evaluatedAs: true
      internalMethodName: "lambda$registerAndConfigureDistributionArchivesExtension$1"
    - lineNumber: 111
      expression: "subdir.contains(\\\"oss\\\")"
      range: "(111,40)-(111,61)"
      evaluatedAs: true
      internalMethodName: "lambda$configureGeneralTaskDefaults$8"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.InternalDistributionArchiveSetupPlugin"
  - testPathName: "applyWhenNameNotEndsWithTarAndSubdirNotContainsOss"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "container"
      valueUuid: "namedDomainObjectContainer"
      methodExercised:
        expression: "whenObjectAdded(action2-any):action"
    - type: "STATIC"
      name: "Attribute.class.real"
      valueUuid: "Attribute.class.real"
      methodExercised:
        expression: "of(string18,class-Boolean):attribute2"
    - type: "STATIC"
      name: "GUtils.class"
      valueUuid: "GUtils.class"
      methodExercised:
        expression: "capitalize(string4):string5"
    - type: "STATIC"
      name: "GUtils.class"
      valueUuid: "GUtils.class"
      methodExercised:
        expression: "capitalize(string):string8"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractArchiveTask"
      methodExercised:
        expression: "getName():string13"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractArchiveTask"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractArchiveTask"
      methodExercised:
        expression: "getArchiveBaseName():property"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractCopyTask2"
      methodExercised:
        expression: "dependsOn(objectArray2):task3"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractCopyTask2"
      methodExercised:
        expression: "setIncludeEmptyDirs(includeEmptyDirs):void14"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractCopyTask2"
      methodExercised:
        expression: "dirPermissions(configureAction2-any):copyProcessingSpec"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "abstractCopyTask2"
      methodExercised:
        expression: "filePermissions(configureAction3-any):copyProcessingSpec2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "archiveExtension"
      methodExercised:
        expression: "set(value4):void21"
    - type: "LOCAL_VARIABLE"
      valueUuid: "artifactHandler"
      methodExercised:
        expression: "add(configurationName,distributionArchive2-archiveTask):publishArtifact"
    - type: "LOCAL_VARIABLE"
      valueUuid: "artifactHandler2"
      methodExercised:
        expression: "add(configurationName2,distributionArchive2-expandedDistTask):publishArtifact2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "artifactHandler3"
      methodExercised:
        expression: "add(configurationName3,distributionArchive2-archiveTask):publishArtifact3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "attributeContainer"
      methodExercised:
        expression: "attribute(attribute,value):attributeContainer2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "attributeContainer3"
      methodExercised:
        expression: "attribute(attribute,value2):attributeContainer4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "attributeContainer5"
      methodExercised:
        expression: "attribute(attribute2,boolean2):attributeContainer6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "create(name2):object"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "create(name3):object2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "set(file9):void18"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask"
      methodExercised:
        expression: "setDir(file2-any):void5"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask"
      methodExercised:
        expression: "setDirMode(dirMode):void6"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask2"
      methodExercised:
        expression: "setDir(file6-any):void8"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask2"
      methodExercised:
        expression: "setDirMode(dirMode2):void9"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask3"
      methodExercised:
        expression: "setDir(file8-any):void11"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "emptyDirTask3"
      methodExercised:
        expression: "setDirMode(dirMode3):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "add(name5,namedDomainObjectContainer):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getExtraProperties():extraPropertiesExtension"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "add(name8,file6-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer4"
      methodExercised:
        expression: "add(name10,file8-any):void10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extraPropertiesExtension"
      methodExercised:
        expression: "set(name6,file4-any):void4"
    - type: "LOCAL_VARIABLE"
      name: "extractedConfiguration"
      valueUuid: "object"
      methodExercised:
        expression: "setCanBeResolved(allowed):void"
    - type: "LOCAL_VARIABLE"
      name: "extractedConfiguration"
      valueUuid: "object"
      methodExercised:
        expression: "getAttributes():attributeContainer"
    - type: "LOCAL_VARIABLE"
      name: "extractedConfiguration"
      valueUuid: "object"
      methodExercised:
        expression: "getAllArtifacts():publishArtifactSet"
    - type: "LOCAL_VARIABLE"
      name: "compositeConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "setCanBeResolved(allowed2):void2"
    - type: "LOCAL_VARIABLE"
      name: "compositeConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "getAttributes():attributeContainer3"
    - type: "LOCAL_VARIABLE"
      name: "compositeConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "getAttributes():attributeContainer5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-BasePlugin):plugin"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer2"
      methodExercised:
        expression: "apply(class-BasePlugin):plugin2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "container(class-DistributionArchive,factory-any):namedDomainObjectContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "project(string12,configureAction-any):project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getBuildDir():file7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer7"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer8"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "file(string17):file9"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer9"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getPlugins():pluginContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getArtifacts():artifactHandler"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getArtifacts():artifactHandler2"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getArtifacts():artifactHandler3"
    - type: "LOCAL_VARIABLE"
      name: "sub"
      valueUuid: "project3"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "set(value3):void19"
    - type: "LOCAL_VARIABLE"
      valueUuid: "publishArtifactSet"
      methodExercised:
        expression: "getBuildDependencies():taskDependency"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "symbolicLinkPreservingTar"
      methodExercised:
        expression: "getArchiveExtension():archiveExtension"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "symbolicLinkPreservingTar"
      methodExercised:
        expression: "setCompression(Enum-org.gradle.api.tasks.bundling.Compression-GZIP):void22"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action3-any):void13"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action4-any):void17"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "configureEach(action5-any):void20"
    - type: "LOCAL_VARIABLE"
      name: "tasks"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(string6,class-Sync,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "tasks"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(string9,class-Zip):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name4,configurationAction2-any):taskProvider6"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "register(name7,class-EmptyDirTask,configurationAction3-any):taskProvider7"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "register(name9,class-EmptyDirTask,configurationAction4-any):taskProvider8"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "register(name11,class-EmptyDirTask,configurationAction5-any):taskProvider9"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer6"
      methodExercised:
        expression: "withType(class-AbstractCopyTask):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer7"
      methodExercised:
        expression: "withType(class-EmptyDirTask):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer8"
      methodExercised:
        expression: "withType(class-AbstractArchiveTask):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer9"
      methodExercised:
        expression: "withType(class-SymbolicLinkPreservingTar):taskCollection4"
    - type: "RESULT"
      name: "result"
      valueUuid: "void23"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "File logsDir = new File(project.getBuildDir(), \\\"logs-hack/logs\\\
        \");"
      lineNumber: 127
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.InternalDistributionArchiveSetupPlugin"
        parameters: []
        propertiesMap:
          container:
            sapientType: "MOCK"
            valueType: "org.gradle.api.NamedDomainObjectContainer"
            genericValueType: "org.elasticsearch.gradle.internal.DistributionArchive"
            uuid: "namedDomainObjectContainer"
      valueType: "org.elasticsearch.gradle.internal.InternalDistributionArchiveSetupPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      genericValueType: "org.elasticsearch.gradle.internal.DistributionArchive"
      uuid: "namedDomainObjectContainer"
      nameForMock: "container"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super java.lang.Object"
      uuid: "action"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "REAL"
      valueType: "org.gradle.api.attributes.Attribute"
      uuid: "Attribute.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.api.attributes.Attribute"
        method: "of"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "composite"
            valueType: "java.lang.String"
            uuid: "string18"
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Boolean"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Boolean"
            uuid: "class-Boolean"
      valueType: "org.gradle.api.attributes.Attribute"
      uuid: "attribute2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "composite"
      valueType: "java.lang.String"
      uuid: "string18"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Boolean"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Boolean"
      uuid: "class-Boolean"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.GUtils"
      uuid: "GUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_capitalize1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string4"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_capitalize1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.bundling.AbstractArchiveTask"
      uuid: "abstractArchiveTask"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getName1"
      valueType: "java.lang.String"
      uuid: "string13"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskCollection"
            uuid: "taskCollection2"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "includeEmptyDirs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopyProcessingSpec"
      uuid: "copyProcessingSpec"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.ConfigurableFilePermissions"
      uuid: "configureAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopyProcessingSpec"
      uuid: "copyProcessingSpec2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.ConfigurableFilePermissions"
      uuid: "configureAction3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "archiveExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
    - sapientType: "BASIC"
      content: !<regular>
        value: "tar.gz"
      valueType: "java.lang.String"
      uuid: "value4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.ArtifactHandler"
      uuid: "artifactHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifact"
      uuid: "publishArtifact"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "configurationName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "? extends org.gradle.api.tasks.bundling.AbstractArchiveTask"
      uuid: "distributionArchive2-archiveTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.ArtifactHandler"
      uuid: "artifactHandler2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifact"
      uuid: "publishArtifact2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extracted"
      valueType: "java.lang.String"
      uuid: "configurationName2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.tasks.Sync"
      uuid: "distributionArchive2-expandedDistTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.ArtifactHandler"
      uuid: "artifactHandler3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifact"
      uuid: "publishArtifact3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "composite"
      valueType: "java.lang.String"
      uuid: "configurationName3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.gradle.api.artifacts.type.ArtifactTypeDefinition"
        fieldName: "ARTIFACT_TYPE_ATTRIBUTE"
      valueType: "org.gradle.api.attributes.Attribute"
      uuid: "attribute"
    - sapientType: "BASIC"
      content: !<regular>
        value: "directory"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "directory"
      valueType: "java.lang.String"
      uuid: "value2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extracted"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "composite"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file9-pathname"
      valueType: "java.io.File"
      uuid: "file9"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.EmptyDirTask"
      uuid: "emptyDirTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "BASIC"
      content: !<regular>
        value: 493
      valueType: "int"
      uuid: "dirMode"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.EmptyDirTask"
      uuid: "emptyDirTask2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file6-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: 493
      valueType: "int"
      uuid: "dirMode2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.EmptyDirTask"
      uuid: "emptyDirTask3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file8-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "BASIC"
      content: !<regular>
        value: 488
      valueType: "int"
      uuid: "dirMode3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "distribution_archives"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtraPropertiesExtension"
      uuid: "extraPropertiesExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pluginsDir"
      valueType: "java.lang.String"
      uuid: "name8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jvmOptionsDir"
      valueType: "java.lang.String"
      uuid: "name10"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "logsDir"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file4-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "allowed"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifactSet"
      uuid: "publishArtifactSet"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "allowed2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.BasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.BasePlugin"
      uuid: "class-BasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.DistributionArchive"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.DistributionArchive"
      uuid: "class-DistributionArchive"
    - sapientType: "ANY"
      valueType: "org.gradle.api.NamedDomainObjectFactory"
      uuid: "factory-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string12"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Project"
      uuid: "configureAction-any"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file5-pathname"
      valueType: "java.io.File"
      uuid: "file5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file7-pathname"
      valueType: "java.io.File"
      uuid: "file7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string17"
      valueType: "java.lang.String"
      uuid: "string17"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch"
      valueType: "java.lang.String"
      uuid: "value3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskDependency"
      uuid: "taskDependency"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.SymbolicLinkPreservingTar"
      uuid: "symbolicLinkPreservingTar"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
    - sapientType: "ENUM"
      content: !<regular>
        value: "GZIP"
      valueType: "org.gradle.api.tasks.bundling.Compression"
      uuid: "Enum-org.gradle.api.tasks.bundling.Compression-GZIP"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.tasks.Sync"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string6"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.Sync"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.Sync"
      uuid: "class-Sync"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "? extends org.gradle.api.tasks.bundling.AbstractArchiveTask"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string9"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.bundling.Zip"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.bundling.Zip"
      uuid: "class-Zip"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.Task"
      uuid: "taskProvider6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extractedAssemble"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "configurationAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "createLogsDir"
      valueType: "java.lang.String"
      uuid: "name7"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.EmptyDirTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.EmptyDirTask"
      uuid: "class-EmptyDirTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "createPluginsDir"
      valueType: "java.lang.String"
      uuid: "name9"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "createJvmOptionsDir"
      valueType: "java.lang.String"
      uuid: "name11"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction5-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.AbstractCopyTask"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "class-AbstractCopyTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.bundling.AbstractArchiveTask"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.bundling.AbstractArchiveTask"
      uuid: "class-AbstractArchiveTask"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.SymbolicLinkPreservingTar"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.SymbolicLinkPreservingTar"
      uuid: "class-SymbolicLinkPreservingTar"
    - sapientType: "VOID"
      uuid: "void23"
    branches:
    - lineNumber: 66
      expression: "name.endsWith(\\\"Tar\\\")"
      range: "(66,20)-(66,39)"
      evaluatedAs: false
      internalMethodName: "lambda$registerAndConfigureDistributionArchivesExtension$1"
    - lineNumber: 111
      expression: "subdir.contains(\\\"oss\\\")"
      range: "(111,40)-(111,61)"
      evaluatedAs: false
      internalMethodName: "lambda$configureGeneralTaskDefaults$8"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.InternalDistributionArchiveSetupPlugin"
