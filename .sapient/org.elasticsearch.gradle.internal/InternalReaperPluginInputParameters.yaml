---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.InternalReaperPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "4B1B8C47EF76C54113EFDD15C5E215D9"
  paths:
  - testPathName: "applyTest"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "ReaperPlugin.class"
      valueUuid: "ReaperPlugin.class"
      methodExercised:
        expression: "registerReaperService(project,projectLayout,internal):void"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.InternalReaperPlugin"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
      valueType: "org.elasticsearch.gradle.internal.InternalReaperPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.ReaperPlugin"
      uuid: "ReaperPlugin.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ProjectLayout"
      uuid: "projectLayout"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "internal"
    - sapientType: "VOID"
      uuid: "void2"
