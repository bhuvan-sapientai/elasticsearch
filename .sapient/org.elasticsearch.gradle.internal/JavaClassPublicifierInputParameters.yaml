---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.JavaClassPublicifier"
methods:
- method:
    name: "adapt"
    sourceCodeSignature: "void adapt()"
    returnType: "void"
    throwsExceptions:
    - "java.io.IOException"
    instructionFingerprint: "8B5A05E3FD0082B3DBE3E55EAE6664B6"
  paths:
  - testPathName: "adaptWhenDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "inputDir"
      valueUuid: "fieldDirectoryProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "outputDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object6"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "newInputStream(path,openOptionArray):inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object5"
      methodExercised:
        expression: "file(object4):regularFile"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object6"
      methodExercised:
        expression: "file(object4):regularFile2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile"
      methodExercised:
        expression: "getAsFile():file"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile2"
      methodExercised:
        expression: "getAsFile():file2"
    - type: "RESULT"
      name: "result"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.JavaClassPublicifier"
        parameters:
        - name: "objects"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objects"
        propertiesMap:
          outputDir:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.DirectoryProperty"
            uuid: "fieldDirectoryProperty2"
          classFiles:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "classFilesItem1"
                valueType: "java.lang.String"
                uuid: "object4"
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "fieldList"
          inputDir:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.DirectoryProperty"
            uuid: "fieldDirectoryProperty"
      valueType: "org.elasticsearch.gradle.internal.JavaClassPublicifier"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty"
      nameForMock: "inputDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "outputDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        inputStreamClass: "java.io.InputStream"
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.OpenOption[]"
      uuid: "openOptionArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile"
    - sapientType: "BASIC"
      content: !<regular>
        value: "classFilesItem1"
      valueType: "java.lang.String"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 73
      expression: "for-each(classFiles)"
      range: "(73,33)-(73,42)"
      evaluatedAs: true
    - lineNumber: 110
      expression: "branch expression (line 110)"
      range: "(110,1)-(110,200)"
      evaluatedAs: true
      internalMethodName: "adjustClass"
    catchBlockExercised:
      idExternalInstruction: 21
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "adaptWhenClassFileContains_"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "inputDir"
      valueUuid: "fieldDirectoryProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "inputDir"
      valueUuid: "fieldDirectoryProperty"
      methodExercised:
        expression: "get():object7"
    - type: "FIELD"
      name: "outputDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object6"
    - type: "FIELD"
      name: "outputDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object5"
      methodExercised:
        expression: "file(object4):regularFile"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object6"
      methodExercised:
        expression: "file(object4):regularFile2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object7"
      methodExercised:
        expression: "file(string6):regularFile3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object8"
      methodExercised:
        expression: "file(string6):regularFile4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile"
      methodExercised:
        expression: "getAsFile():file"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile2"
      methodExercised:
        expression: "getAsFile():file2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile3"
      methodExercised:
        expression: "getAsFile():file4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile4"
      methodExercised:
        expression: "getAsFile():file5"
    - type: "RESULT"
      name: "result"
      valueUuid: "void9"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.JavaClassPublicifier"
        parameters:
        - name: "objects"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objects"
        propertiesMap:
          outputDir:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.DirectoryProperty"
            uuid: "fieldDirectoryProperty2"
          classFiles:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "fieldList"
          inputDir:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.DirectoryProperty"
            uuid: "fieldDirectoryProperty"
      valueType: "org.elasticsearch.gradle.internal.JavaClassPublicifier"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty"
      nameForMock: "inputDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "outputDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile"
    - sapientType: "BASIC"
      content: !<regular>
        value: "object4"
      valueType: "java.lang.String"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string6"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file4-pathname"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file5-pathname"
      valueType: "java.io.File"
      uuid: "file5"
    - sapientType: "VOID"
      uuid: "void9"
    branches:
    - lineNumber: 73
      expression: "for-each(classFiles)"
      range: "(73,33)-(73,42)"
      evaluatedAs: true
    - lineNumber: 116
      expression: "branch expression (line 116)"
      range: "(116,1)-(116,200)"
      evaluatedAs: false
      internalMethodName: "adjustClass"
    - lineNumber: 84
      expression: "classFile.contains(\\\"$\\\")"
      range: "(84,17)-(84,39)"
      evaluatedAs: true
  - testPathName: "adaptWhenClassFileContains_AndDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "inputDir"
      valueUuid: "fieldDirectoryProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "inputDir"
      valueUuid: "fieldDirectoryProperty"
      methodExercised:
        expression: "get():object7"
    - type: "FIELD"
      name: "outputDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object6"
    - type: "FIELD"
      name: "outputDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object8"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "newInputStream(path4,openOptionArray3):inputStream2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object5"
      methodExercised:
        expression: "file(object4):regularFile"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object6"
      methodExercised:
        expression: "file(object4):regularFile2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object7"
      methodExercised:
        expression: "file(string6):regularFile3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object8"
      methodExercised:
        expression: "file(string6):regularFile4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile"
      methodExercised:
        expression: "getAsFile():file"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile2"
      methodExercised:
        expression: "getAsFile():file2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile3"
      methodExercised:
        expression: "getAsFile():file4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFile4"
      methodExercised:
        expression: "getAsFile():file5"
    - type: "RESULT"
      name: "result"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.JavaClassPublicifier"
        parameters:
        - name: "objects"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objects"
        propertiesMap:
          outputDir:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.DirectoryProperty"
            uuid: "fieldDirectoryProperty2"
          classFiles:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "fieldList"
          inputDir:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.DirectoryProperty"
            uuid: "fieldDirectoryProperty"
      valueType: "org.elasticsearch.gradle.internal.JavaClassPublicifier"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty"
      nameForMock: "inputDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "outputDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        inputStreamClass: "java.io.InputStream"
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream2"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path4"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.OpenOption[]"
      uuid: "openOptionArray3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile"
    - sapientType: "BASIC"
      content: !<regular>
        value: "object4"
      valueType: "java.lang.String"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string6"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFile"
      uuid: "regularFile4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file4-pathname"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file5-pathname"
      valueType: "java.io.File"
      uuid: "file5"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 73
      expression: "for-each(classFiles)"
      range: "(73,33)-(73,42)"
      evaluatedAs: true
    - lineNumber: 116
      expression: "branch expression (line 116)"
      range: "(116,1)-(116,200)"
      evaluatedAs: false
      internalMethodName: "adjustClass"
    - lineNumber: 84
      expression: "classFile.contains(\\\"$\\\")"
      range: "(84,17)-(84,39)"
      evaluatedAs: true
    - lineNumber: 110
      expression: "branch expression (line 110)"
      range: "(110,1)-(110,200)"
      evaluatedAs: true
      internalMethodName: "adjustClass"
    catchBlockExercised:
      idExternalInstruction: 57
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
