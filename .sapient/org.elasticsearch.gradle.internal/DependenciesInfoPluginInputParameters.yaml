---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.DependenciesInfoPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(final Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "0451B49F964DB725002A12476E2A7320"
  paths:
  - testPathName: "applyTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "artifactHandler"
      methodExercised:
        expression: "add(configurationName,taskProvider):publishArtifact"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "getByName(name2):configuration"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "getByName(name3):configuration2"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer3"
      methodExercised:
        expression: "create(name5):object2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "conventionMapping"
      methodExercised:
        expression: "map(propertyName,value-any):conventionMappingMappedProperty"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "dependenciesInfoTask"
      methodExercised:
        expression: "setRuntimeConfiguration(configuration):void2"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "dependenciesInfoTask"
      methodExercised:
        expression: "setCompileOnlyConfiguration(configuration2):void3"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "dependenciesInfoTask"
      methodExercised:
        expression: "getConventionMapping():conventionMapping"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object"
      methodExercised:
        expression: "getMappings():linkedHashMap"
    - type: "LOCAL_VARIABLE"
      name: "dependenciesInfoFilesConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "setCanBeResolved(allowed):void4"
    - type: "LOCAL_VARIABLE"
      name: "dependenciesInfoFilesConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "setCanBeConsumed(allowed2):void5"
    - type: "LOCAL_VARIABLE"
      name: "dependenciesInfoFilesConfiguration"
      valueUuid: "object2"
      methodExercised:
        expression: "attributes(action2-any):object3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "named(class-Category,name6):named"
        throwsExceptions:
        - "org.gradle.api.reflect.ObjectInstantiationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-CompileOnlyResolvePlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getObjects():objectFactory"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getArtifacts():artifactHandler"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name,class-DependenciesInfoTask):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "named(name4,class-DependencyLicensesTask):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      name: "depsInfo"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void"
    - type: "LOCAL_VARIABLE"
      name: "depLic"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "get():object"
    - type: "RESULT"
      name: "result"
      valueUuid: "void6"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.DependenciesInfoPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.DependenciesInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.ArtifactHandler"
      uuid: "artifactHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.PublishArtifact"
      uuid: "publishArtifact"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dependenciesInfoFiles"
      valueType: "java.lang.String"
      uuid: "configurationName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.DependenciesInfoTask"
      uuid: "taskProvider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "runtimeClasspath"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "resolveableCompileOnly"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dependenciesInfoFiles"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping"
      uuid: "conventionMapping"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.internal.ConventionMapping$MappedProperty"
      uuid: "conventionMappingMappedProperty"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mappings"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      genericValueType: "?"
      uuid: "value-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.DependenciesInfoTask"
      uuid: "dependenciesInfoTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.precommit.DependencyLicensesTask"
      uuid: "object"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.LinkedHashMap"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "linkedHashMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "allowed"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "allowed2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.Category"
      uuid: "named"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.attributes.Category"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.attributes.Category"
      uuid: "class-Category"
    - sapientType: "BASIC"
      content: !<regular>
        value: "documentation"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.dependencies.CompileOnlyResolvePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.dependencies.CompileOnlyResolvePlugin"
      uuid: "class-CompileOnlyResolvePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dependenciesInfo"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.DependenciesInfoTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.DependenciesInfoTask"
      uuid: "class-DependenciesInfoTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.DependencyLicensesTask"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dependencyLicenses"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.precommit.DependencyLicensesTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.precommit.DependencyLicensesTask"
      uuid: "class-DependencyLicensesTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      uuid: "void6"
