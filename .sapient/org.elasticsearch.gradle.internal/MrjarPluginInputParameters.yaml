---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.MrjarPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "4556FB11016EEE938658D559795B83CF"
  paths:
  - testPathName: "applyWhenCaughtIOExceptionThrowsUncheckedIOException"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "list(path2):stream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):object2"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "uncheckedIOException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "NULL"
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.UncheckedIOException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.io.UncheckedIOException"
      uuid: "uncheckedIOException"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: false
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
    catchBlockExercised:
      idExternalInstruction: 52
      id: 3
      catchExceptions:
      - "java.io.IOException"
  - testPathName: "applyWhenDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "list(path2):stream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):string2"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "true"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: true
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: false
    - lineNumber: 74
      expression: "ideaSourceSetsEnabled"
      range: "(74,36)-(74,56)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 200
      expression: "branch expression (line 200)"
      range: "(200,1)-(200,200)"
      evaluatedAs: true
      internalMethodName: "findSourceVersions"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
    catchBlockExercised:
      idExternalInstruction: 52
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "applyWhenCaughtIOExceptionAndCaughtIOExceptionThrowsUncheckedIOException"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "walk(path3,fileVisitOptionArray):stream2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "doLast(action3-any):task"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getCompileJavaTaskName():string2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):object2"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(string2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void4"
    - type: "RESULT"
      name: "result"
      valueUuid: "uncheckedIOException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "NULL"
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream2"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.FileVisitOption[]"
      uuid: "fileVisitOptionArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.UncheckedIOException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.io.UncheckedIOException"
      uuid: "uncheckedIOException"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: false
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 220
      expression: "catch-exception (IOException)"
      range: "(220,11)-(220,30)"
      evaluatedAs: false
      internalMethodName: "stripPreviewFromFiles"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
    catchBlockExercised:
      idExternalInstruction: 8
      id: 6
      catchExceptions:
      - "java.io.IOException"
  - testPathName: "applyWhenCaughtIOExceptionAndDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "walk(path3,fileVisitOptionArray):stream2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "doLast(action3-any):task"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getCompileJavaTaskName():string2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):string3"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(string2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void4"
    - type: "RESULT"
      name: "result"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream2"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.FileVisitOption[]"
      uuid: "fileVisitOptionArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "true"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: true
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: false
    - lineNumber: 74
      expression: "ideaSourceSetsEnabled"
      range: "(74,36)-(74,56)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 218
      expression: "branch expression (line 218)"
      range: "(218,1)-(218,200)"
      evaluatedAs: true
      internalMethodName: "stripPreviewFromFiles"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
    catchBlockExercised:
      idExternalInstruction: 8
      id: 4
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "applyWhenDefaultBranchThrowsUncheckedIOException"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "walk(path4,fileVisitOptionArray2):stream4"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty2"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "doLast(action3-any):task"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getOptions():compileOptions2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "doLast(action3-any):task3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addBooleanOption(option,value):javadocOptionFileOption"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addStringOption(option2,string5):javadocOptionFileOption2"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getCompileJavaTaskName():string2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getJavadocTaskName():string4"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getCompileJavaTaskName():string6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):object2"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer2"
      methodExercised:
        expression: "getByName(name2):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(string2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "named(string6):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action-any):void8"
    - type: "RESULT"
      name: "result"
      valueUuid: "uncheckedIOException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "NULL"
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream4"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path4"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.FileVisitOption[]"
      uuid: "fileVisitOptionArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task3"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object6-pathname"
      valueType: "java.io.File"
      uuid: "object6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "nameFilter-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.javadoc.Javadoc"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.javadoc.Javadoc"
      uuid: "class-Javadoc"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.UncheckedIOException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.io.UncheckedIOException"
      uuid: "uncheckedIOException"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: false
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 220
      expression: "catch-exception (IOException)"
      range: "(220,11)-(220,30)"
      evaluatedAs: false
      internalMethodName: "stripPreviewFromFiles"
    - lineNumber: 154
      expression: "branch expression (line 154)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
    catchBlockExercised:
      idExternalInstruction: 8
      id: 6
      catchExceptions:
      - "java.io.IOException"
  - testPathName: "applyWhenCaughtIOExceptionAndDefaultBranchAndMainVersionsIsEmpty"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "getJavaSourceSets(project):sourceSetContainer3"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty2"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "testRuntime"
      valueUuid: "fileCollection"
      methodExercised:
        expression: "minus(sourceSetOutput):fileCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "fileCollection2"
      methodExercised:
        expression: "plus(configurableFileCollection):fileCollection3"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "doLast(action3-any):task"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getOptions():compileOptions2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "doLast(action3-any):task3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addBooleanOption(option,value):javadocOptionFileOption"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addStringOption(option2,string5):javadocOptionFileOption2"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions2"
      methodExercised:
        expression: "addBooleanOption(option3,value2):javadocOptionFileOption3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions2"
      methodExercised:
        expression: "addStringOption(option4,string9):javadocOptionFileOption4"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getCompileJavaTaskName():string2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getJavadocTaskName():string4"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getCompileJavaTaskName():string6"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getJavadocTaskName():string8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object7"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object8"
      methodExercised:
        expression: "getRuntimeClasspath():fileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):object2"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "files(objectArray2):configurableFileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer2"
      methodExercised:
        expression: "getByName(name2):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer3"
      methodExercised:
        expression: "getByName(name5):object7"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer3"
      methodExercised:
        expression: "getByName(name6):object8"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(string2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "named(string6):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection5"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection6"
      methodExercised:
        expression: "configureEach(action2-any):void11"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection7"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection8"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "withType(class-Jar):taskCollection7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer6"
      methodExercised:
        expression: "withType(class-Test):taskCollection8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action-any):void8"
    - type: "LOCAL_VARIABLE"
      name: "jarTask"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action7-any):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "configure(action8-any):void13"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "test"
      methodExercised:
        expression: "dependsOn(objectArray):task5"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "test"
      methodExercised:
        expression: "setClasspath(fileCollection3):void14"
    - type: "RESULT"
      name: "result"
      valueUuid: "void15"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task3"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions2"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value2"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer6"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.jvm.tasks.Jar"
            uuid: "taskProvider3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object6-pathname"
      valueType: "java.io.File"
      uuid: "object6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "nameFilter-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.jvm.tasks.Jar"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.javadoc.Javadoc"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.javadoc.Javadoc"
      uuid: "class-Javadoc"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.tasks.Jar"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.tasks.Jar"
      uuid: "class-Jar"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action7-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action8-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.Test"
      uuid: "test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.jvm.tasks.Jar"
            uuid: "taskProvider3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "VOID"
      uuid: "void15"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: false
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 220
      expression: "catch-exception (IOException)"
      range: "(220,11)-(220,30)"
      evaluatedAs: false
      internalMethodName: "stripPreviewFromFiles"
    - lineNumber: 154
      expression: "branch expression (line 154)"
      evaluatedAs: false
    - lineNumber: 82
      expression: "for-each(mainVersions)"
      range: "(82,36)-(82,47)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
  - testPathName: "applyWhenDefaultBranchAndCaughtIOExceptionAndDefaultBranchAndMainVersionsIsEmpty"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "list(path2):stream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "getJavaSourceSets(project):sourceSetContainer3"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty2"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "testRuntime"
      valueUuid: "fileCollection"
      methodExercised:
        expression: "minus(sourceSetOutput):fileCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "fileCollection2"
      methodExercised:
        expression: "plus(configurableFileCollection):fileCollection3"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "doLast(action3-any):task"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getOptions():compileOptions2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "doLast(action3-any):task3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addBooleanOption(option,value):javadocOptionFileOption"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addStringOption(option2,string5):javadocOptionFileOption2"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions2"
      methodExercised:
        expression: "addBooleanOption(option3,value2):javadocOptionFileOption3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions2"
      methodExercised:
        expression: "addStringOption(option4,string9):javadocOptionFileOption4"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getCompileJavaTaskName():string2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getJavadocTaskName():string4"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getCompileJavaTaskName():string6"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getJavadocTaskName():string8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object7"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object8"
      methodExercised:
        expression: "getRuntimeClasspath():fileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):string10"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "files(objectArray2):configurableFileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer2"
      methodExercised:
        expression: "getByName(name2):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer3"
      methodExercised:
        expression: "getByName(name5):object7"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer3"
      methodExercised:
        expression: "getByName(name6):object8"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(string2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "named(string6):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection5"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection6"
      methodExercised:
        expression: "configureEach(action2-any):void11"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection7"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection8"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "withType(class-Jar):taskCollection7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer6"
      methodExercised:
        expression: "withType(class-Test):taskCollection8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action-any):void8"
    - type: "LOCAL_VARIABLE"
      name: "jarTask"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action7-any):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "configure(action8-any):void13"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "test"
      methodExercised:
        expression: "dependsOn(objectArray):task5"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "test"
      methodExercised:
        expression: "setClasspath(fileCollection3):void14"
    - type: "RESULT"
      name: "result"
      valueUuid: "void15"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task3"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions2"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value2"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "true"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer6"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.jvm.tasks.Jar"
            uuid: "taskProvider3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object6-pathname"
      valueType: "java.io.File"
      uuid: "object6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "nameFilter-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.jvm.tasks.Jar"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.javadoc.Javadoc"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.javadoc.Javadoc"
      uuid: "class-Javadoc"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.tasks.Jar"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.tasks.Jar"
      uuid: "class-Jar"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action7-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action8-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.Test"
      uuid: "test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.jvm.tasks.Jar"
            uuid: "taskProvider3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "VOID"
      uuid: "void15"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: true
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 200
      expression: "branch expression (line 200)"
      range: "(200,1)-(200,200)"
      evaluatedAs: true
      internalMethodName: "findSourceVersions"
    - lineNumber: 220
      expression: "catch-exception (IOException)"
      range: "(220,11)-(220,30)"
      evaluatedAs: false
      internalMethodName: "stripPreviewFromFiles"
    - lineNumber: 154
      expression: "branch expression (line 154)"
      evaluatedAs: false
    - lineNumber: 82
      expression: "for-each(mainVersions)"
      range: "(82,36)-(82,47)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
    catchBlockExercised:
      idExternalInstruction: 52
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "applyWhenCaughtIOExceptionAndDefaultBranchAndDefaultBranchAndMainVersionsIsEmpty"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "walk(path4,fileVisitOptionArray2):stream4"
        throwsExceptions:
        - "java.io.IOException"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "getJavaSourceSets(project):sourceSetContainer3"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty2"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "testRuntime"
      valueUuid: "fileCollection"
      methodExercised:
        expression: "minus(sourceSetOutput):fileCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "fileCollection2"
      methodExercised:
        expression: "plus(configurableFileCollection):fileCollection3"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "doLast(action3-any):task"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getOptions():compileOptions2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "doLast(action3-any):task3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addBooleanOption(option,value):javadocOptionFileOption"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addStringOption(option2,string5):javadocOptionFileOption2"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions2"
      methodExercised:
        expression: "addBooleanOption(option3,value2):javadocOptionFileOption3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions2"
      methodExercised:
        expression: "addStringOption(option4,string9):javadocOptionFileOption4"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getCompileJavaTaskName():string2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getJavadocTaskName():string4"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getCompileJavaTaskName():string6"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getJavadocTaskName():string8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object7"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object8"
      methodExercised:
        expression: "getRuntimeClasspath():fileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):string10"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "files(objectArray2):configurableFileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer2"
      methodExercised:
        expression: "getByName(name2):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer3"
      methodExercised:
        expression: "getByName(name5):object7"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer3"
      methodExercised:
        expression: "getByName(name6):object8"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(string2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "named(string6):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection5"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection6"
      methodExercised:
        expression: "configureEach(action2-any):void11"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection7"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection8"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "withType(class-Jar):taskCollection7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer6"
      methodExercised:
        expression: "withType(class-Test):taskCollection8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action-any):void8"
    - type: "LOCAL_VARIABLE"
      name: "jarTask"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action7-any):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "configure(action8-any):void13"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "test"
      methodExercised:
        expression: "dependsOn(objectArray):task5"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "test"
      methodExercised:
        expression: "setClasspath(fileCollection3):void14"
    - type: "RESULT"
      name: "result"
      valueUuid: "void15"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream4"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path4"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.FileVisitOption[]"
      uuid: "fileVisitOptionArray2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task3"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions2"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value2"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "true"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer6"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.jvm.tasks.Jar"
            uuid: "taskProvider3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object6-pathname"
      valueType: "java.io.File"
      uuid: "object6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "nameFilter-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.jvm.tasks.Jar"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.javadoc.Javadoc"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.javadoc.Javadoc"
      uuid: "class-Javadoc"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.tasks.Jar"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.tasks.Jar"
      uuid: "class-Jar"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action7-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action8-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.Test"
      uuid: "test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.jvm.tasks.Jar"
            uuid: "taskProvider3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "VOID"
      uuid: "void15"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: true
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 220
      expression: "catch-exception (IOException)"
      range: "(220,11)-(220,30)"
      evaluatedAs: false
      internalMethodName: "stripPreviewFromFiles"
    - lineNumber: 154
      expression: "branch expression (line 154)"
      evaluatedAs: false
    - lineNumber: 218
      expression: "branch expression (line 218)"
      range: "(218,1)-(218,200)"
      evaluatedAs: true
      internalMethodName: "stripPreviewFromFiles"
    - lineNumber: 82
      expression: "for-each(mainVersions)"
      range: "(82,36)-(82,47)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
    catchBlockExercised:
      idExternalInstruction: 8
      id: 5
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "applyWhenCaughtIOExceptionAndCaughtIOExceptionAndDefaultBranchAndMainVersionsIsEmpty"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "getJavaSourceSets(project):sourceSetContainer3"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty2"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "testRuntime"
      valueUuid: "fileCollection"
      methodExercised:
        expression: "minus(sourceSetOutput):fileCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "fileCollection2"
      methodExercised:
        expression: "plus(configurableFileCollection):fileCollection3"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "doLast(action3-any):task"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getOptions():compileOptions2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "doLast(action3-any):task3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addBooleanOption(option,value):javadocOptionFileOption"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addStringOption(option2,string5):javadocOptionFileOption2"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions2"
      methodExercised:
        expression: "addBooleanOption(option3,value2):javadocOptionFileOption3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions2"
      methodExercised:
        expression: "addStringOption(option4,string9):javadocOptionFileOption4"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getCompileJavaTaskName():string2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getJavadocTaskName():string4"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getCompileJavaTaskName():string6"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getJavadocTaskName():string8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object7"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object8"
      methodExercised:
        expression: "getRuntimeClasspath():fileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):string10"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer6"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "files(objectArray2):configurableFileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer2"
      methodExercised:
        expression: "getByName(name2):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer3"
      methodExercised:
        expression: "getByName(name5):object7"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "sourceSetContainer3"
      methodExercised:
        expression: "getByName(name6):object8"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(string2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "named(string6):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection5"
      methodExercised:
        expression: "named(nameFilter2-any):taskCollection6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection6"
      methodExercised:
        expression: "configureEach(action5-any):void11"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection7"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection8"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "withType(class-Jar):taskCollection7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer6"
      methodExercised:
        expression: "withType(class-Test):taskCollection8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action4-any):void8"
    - type: "LOCAL_VARIABLE"
      name: "jarTask"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action7-any):void12"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "configure(action8-any):void13"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "test"
      methodExercised:
        expression: "dependsOn(objectArray):task5"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "test"
      methodExercised:
        expression: "setClasspath(fileCollection3):void14"
    - type: "RESULT"
      name: "result"
      valueUuid: "void15"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task3"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions2"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value2"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "true"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer6"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.jvm.tasks.Jar"
            uuid: "taskProvider3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object6-pathname"
      valueType: "java.io.File"
      uuid: "object6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "nameFilter-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection6"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "nameFilter2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.jvm.tasks.Jar"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.javadoc.Javadoc"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.javadoc.Javadoc"
      uuid: "class-Javadoc"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.tasks.Jar"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.tasks.Jar"
      uuid: "class-Jar"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action7-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action8-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.Test"
      uuid: "test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.jvm.tasks.Jar"
            uuid: "taskProvider3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
    - sapientType: "VOID"
      uuid: "void15"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: true
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: false
    - lineNumber: 74
      expression: "ideaSourceSetsEnabled"
      range: "(74,36)-(74,56)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 220
      expression: "catch-exception (IOException)"
      range: "(220,11)-(220,30)"
      evaluatedAs: false
      internalMethodName: "stripPreviewFromFiles"
    - lineNumber: 154
      expression: "branch expression (line 154)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "for-each(mainVersions)"
      range: "(82,36)-(82,47)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
  - testPathName: "applyWhenDefaultBranchAndDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.gradle.jvm.toolchain.JavaToolchainService) :\
      \ void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "walk(path4,fileVisitOptionArray2):stream4"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      name: "compileOptions"
      valueUuid: "compileOptions2"
      methodExercised:
        expression: "getCompilerArgs():compilerArgs2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty2"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getOptions():compileOptions"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile"
      methodExercised:
        expression: "doLast(action3-any):task"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getOptions():compileOptions2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "getDestinationDirectory():directoryProperty2"
    - type: "LOCAL_VARIABLE"
      name: "compileTask"
      valueUuid: "javaCompile2"
      methodExercised:
        expression: "doLast(action3-any):task3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addBooleanOption(option,value):javadocOptionFileOption"
    - type: "LOCAL_VARIABLE"
      name: "options"
      valueUuid: "minimalJavadocOptions"
      methodExercised:
        expression: "addStringOption(option2,string5):javadocOptionFileOption2"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "javaExtension"
      valueUuid: "object"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getCompileJavaTaskName():string2"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getJavadocTaskName():string4"
    - type: "LOCAL_VARIABLE"
      name: "sourceSet"
      valueUuid: "object5"
      methodExercised:
        expression: "getCompileJavaTaskName():string6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):string7"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer2"
      methodExercised:
        expression: "getByName(name2):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "named(string2):taskProvider"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "named(nameFilter-any):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "configureEach(action2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection4"
      methodExercised:
        expression: "named(string6):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-Javadoc):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-JavaCompile):taskCollection4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action-any):void8"
    - type: "RESULT"
      name: "result"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "var isIdeaSync = System.getProperty(\\\"idea.sync.active\\\", \\\"\
        false\\\").equals(\\\"true\\\");"
      lineNumber: 68
      details: "Method java.lang.System::getProperty has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.MrjarPlugin"
        parameters:
        - name: "javaToolchains"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "javaToolchains"
      valueType: "org.elasticsearch.gradle.internal.MrjarPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream4"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path4"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.FileVisitOption[]"
      uuid: "fileVisitOptionArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.CompileOptions"
      uuid: "compileOptions2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "compilerArgs2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "javaCompile2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task3"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.CoreJavadocOptions"
      uuid: "minimalJavadocOptions"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.Boolean"
      uuid: "javadocOptionFileOption"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-enable-preview"
      valueType: "java.lang.String"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.external.javadoc.JavadocOptionFileOption"
      genericValueType: "java.lang.String"
      uuid: "javadocOptionFileOption2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-release"
      valueType: "java.lang.String"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "21"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getCompileJavaTaskName1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "true"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.gradle.mrjar.idea.enabled"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object6-pathname"
      valueType: "java.io.File"
      uuid: "object6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.specs.Spec"
      uuid: "nameFilter-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.compile.JavaCompile"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.compile.JavaCompile"
      uuid: "class-JavaCompile"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.javadoc.Javadoc"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.javadoc.Javadoc"
      uuid: "class-Javadoc"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 69
      expression: "project.hasProperty(MRJAR_IDEA_ENABLED)"
      range: "(69,37)-(69,75)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "project.property(MRJAR_IDEA_ENABLED).equals(\\\"true\\\")"
      range: "(69,80)-(69,130)"
      evaluatedAs: true
    - lineNumber: 74
      expression: "isIdeaSync == false"
      range: "(74,13)-(74,31)"
      evaluatedAs: false
    - lineNumber: 74
      expression: "ideaSourceSetsEnabled"
      range: "(74,36)-(74,56)"
      evaluatedAs: true
    - lineNumber: 201
      expression: "for-each(subdirStream.toList())"
      range: "(201,39)-(201,59)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 209
      expression: "catch-exception (IOException)"
      range: "(209,11)-(209,30)"
      evaluatedAs: false
      internalMethodName: "findSourceVersions"
    - lineNumber: 220
      expression: "catch-exception (IOException)"
      range: "(220,11)-(220,30)"
      evaluatedAs: false
      internalMethodName: "stripPreviewFromFiles"
    - lineNumber: 154
      expression: "branch expression (line 154)"
      evaluatedAs: false
    - lineNumber: 218
      expression: "branch expression (line 218)"
      range: "(218,1)-(218,200)"
      evaluatedAs: true
      internalMethodName: "stripPreviewFromFiles"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.MrjarPlugin"
    catchBlockExercised:
      idExternalInstruction: 8
      id: 4
      catchExceptions:
      - "java.lang.Throwable"
