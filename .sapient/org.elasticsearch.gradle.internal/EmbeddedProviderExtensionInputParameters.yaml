---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.EmbeddedProviderExtension"
methods:
- method:
    name: "impl"
    sourceCodeSignature: "void impl(String implName, Project implProject)"
    returnType: "void"
    parameters:
    - name: "implName"
      type: "java.lang.String"
    - name: "implProject"
      type: "org.gradle.api.Project"
    instructionFingerprint: "A03D446B33DF68EBD06113C5EE5D676F"
  paths:
  - testPathName: "implTest"
    constructorSignature: "<init>(org.gradle.api.Project,org.gradle.api.tasks.TaskProvider<org.gradle.api.Task>)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "implName"
      valueUuid: "implName"
    - type: "INPUT"
      name: "implProject"
      valueUuid: "implProject"
    - type: "FIELD"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "FIELD"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "FIELD"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getLayout():projectLayout"
    - type: "FIELD"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "FIELD"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "FIELD"
      name: "metaTask"
      valueUuid: "metaTask"
      methodExercised:
        expression: "configure(action4-any):void4"
    - type: "STATIC"
      name: "GUtils.class.real"
      valueUuid: "GUtils.class.real"
      methodExercised:
        expression: "capitalize(string):string2"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "getJavaSourceSets(project):sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "attrs"
      valueUuid: "attributeContainer"
      methodExercised:
        expression: "attribute(attribute,value):attributeContainer2"
    - type: "LOCAL_VARIABLE"
      name: "attrs"
      valueUuid: "attributeContainer"
      methodExercised:
        expression: "attribute(attribute2,boolean):attributeContainer3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurableFileCollection"
      methodExercised:
        expression: "from(objectArray):configurableFileCollection2"
    - type: "LOCAL_VARIABLE"
      name: "implConfig"
      valueUuid: "configuration"
      methodExercised:
        expression: "attributes(action-any):object"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "detachedConfiguration(dependencyArray):configuration"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "copySpec2"
      methodExercised:
        expression: "from(objectArray2):copySpec3"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "copySpec2"
      methodExercised:
        expression: "from(objectArray3):copySpec4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "create(implProject):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "directoryProperty"
      methodExercised:
        expression: "dir(path):provider"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "generateProviderManifest"
      methodExercised:
        expression: "getManifestFile():regularFileProperty"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "generateProviderManifest"
      methodExercised:
        expression: "getProviderImplClasspath():configurableFileCollection"
    - type: "LOCAL_VARIABLE"
      name: "implProject"
      valueUuid: "implProject"
      methodExercised:
        expression: "getName():string"
    - type: "LOCAL_VARIABLE"
      name: "mainSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      valueUuid: "projectLayout"
      methodExercised:
        expression: "getBuildDirectory():directoryProperty"
    - type: "LOCAL_VARIABLE"
      name: "generatedResourcesRoot"
      valueUuid: "provider"
      methodExercised:
        expression: "map(transformer-any):provider2"
    - type: "LOCAL_VARIABLE"
      name: "generatedResourcesRoot"
      valueUuid: "provider"
      methodExercised:
        expression: "map(transformer2-any):provider3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFileProperty"
      methodExercised:
        expression: "set(provider2):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "findByName(name):object2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput"
      methodExercised:
        expression: "dir(taskProvider2):void5"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "sync"
      methodExercised:
        expression: "into(provider3):abstractCopyTask"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "sync"
      methodExercised:
        expression: "into(string5,copySpec5-any):copySpec"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(string3,class-GenerateProviderManifest):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(string4,class-Sync):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "generateProviderManifest"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action2-any):void"
    - type: "LOCAL_VARIABLE"
      name: "generateProviderImpl"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action3-any):void3"
    - type: "RESULT"
      name: "result"
      valueUuid: "void6"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.EmbeddedProviderExtension"
        parameters:
        - name: "project"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Project"
            uuid: "project"
        - name: "metaTask"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.gradle.api.Task"
            uuid: "metaTask"
      valueType: "org.elasticsearch.gradle.internal.EmbeddedProviderExtension"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "implName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "implProject"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ProjectLayout"
      uuid: "projectLayout"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.Task"
      uuid: "metaTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action4-any"
    - sapientType: "REAL"
      valueType: "org.elasticsearch.gradle.internal.conventions.GUtils"
      uuid: "GUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.gradle.api.artifacts.type.ArtifactTypeDefinition"
        fieldName: "ARTIFACT_TYPE_ATTRIBUTE"
      valueType: "org.gradle.api.attributes.Attribute"
      uuid: "attribute"
    - sapientType: "BASIC"
      content: !<regular>
        value: "directory"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.attributes.AttributeContainer"
      uuid: "attributeContainer3"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.elasticsearch.gradle.internal.EmbeddedProviderPlugin"
        fieldName: "IMPL_ATTR"
      valueType: "org.gradle.api.attributes.Attribute"
      uuid: "attribute2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.artifacts.Configuration"
            uuid: "configuration"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.artifacts.Dependency"
            uuid: "dependency"
      valueType: "org.gradle.api.artifacts.Dependency[]"
      uuid: "dependencyArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.artifacts.Configuration"
            uuid: "configuration"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec4"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.tasks.TaskProvider"
            genericValueType: "org.elasticsearch.gradle.internal.GenerateProviderManifest"
            uuid: "taskProvider"
      valueType: "java.lang.Object[]"
      uuid: "objectArray3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.api.file.Directory"
      uuid: "provider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "generated-resources"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.GenerateProviderManifest"
      uuid: "generateProviderManifest"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "regularFileProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "main"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.tasks.Sync"
      uuid: "taskProvider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.Sync"
      uuid: "sync"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec"
    - sapientType: "BASIC"
      content: !<regular>
        value: "IMPL-JARS/B"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.CopySpec"
      uuid: "copySpec5-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.GenerateProviderManifest"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "generateAProviderManifest"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.GenerateProviderManifest"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.GenerateProviderManifest"
      uuid: "class-GenerateProviderManifest"
    - sapientType: "BASIC"
      content: !<regular>
        value: "generateAProviderImpl"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.Sync"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.Sync"
      uuid: "class-Sync"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "VOID"
      uuid: "void6"
