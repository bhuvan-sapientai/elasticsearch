---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.test.StandaloneTestPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(final Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "DDA8121EA680C4C953F47B8BD6428408"
  paths:
  - testPathName: "applyTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "InternalPrecommitTasks.class"
      valueUuid: "InternalPrecommitTasks.class"
      methodExercised:
        expression: "create(project,withProductiveCode):void11"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "add(string,project3):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "object"
      methodExercised:
        expression: "create(name):object2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getImplementationConfigurationName():string"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getRuntimeClasspath():fileCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-GlobalBuildInfoPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-ElasticsearchJavaBasePlugin):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-ElasticsearchTestBasePlugin):void3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "project(path):project3"
        throwsExceptions:
        - "org.gradle.api.UnknownProjectException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput"
      methodExercised:
        expression: "getClassesDirs():fileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action-any):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-Test):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name2,class-Test):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "getByName(name3):task"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "named(name4):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      name: "testTask"
      valueUuid: "taskProvider"
      methodExercised:
        expression: "configure(action2-any):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action3-any):void10"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test"
      methodExercised:
        expression: "setTestClassesDirs(fileCollection):void5"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test"
      methodExercised:
        expression: "setClasspath(fileCollection2):void6"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test2"
      methodExercised:
        expression: "setGroup(group):void8"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test2"
      methodExercised:
        expression: "setDescription(description):void9"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test2"
      methodExercised:
        expression: "mustRunAfter(objectArray):task2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void12"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.StandaloneTestPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.test.StandaloneTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.precommit.InternalPrecommitTasks"
      uuid: "InternalPrecommitTasks.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "withProductiveCode"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getImplementationConfigurationName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "class-GlobalBuildInfoPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchJavaBasePlugin"
      uuid: "class-ElasticsearchJavaBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ElasticsearchTestBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ElasticsearchTestBasePlugin"
      uuid: "class-ElasticsearchTestBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":test:framework"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "BASIC"
      content: !<regular>
        value: "precommit"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "check"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.Test"
      uuid: "test"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.Test"
      uuid: "test2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "verification"
      valueType: "java.lang.String"
      uuid: "group"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Runs unit tests that are separate"
      valueType: "java.lang.String"
      uuid: "description"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.Task"
            uuid: "task"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "VOID"
      uuid: "void12"
