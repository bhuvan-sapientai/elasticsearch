---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.test.MutedTestPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "1103211E0D74F9A19659FCED49ABFFF2"
  paths:
  - testPathName: "applyWhenBuildParamsIsCiEqualsFalse"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "isCi():boolean4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "buildServiceParameters"
      methodExercised:
        expression: "getInfoPath():regularFileProperty"
    - type: "LOCAL_VARIABLE"
      valueUuid: "buildServiceParameters2"
      methodExercised:
        expression: "getAdditionalFiles():listProperty"
    - type: "LOCAL_VARIABLE"
      valueUuid: "buildServiceRegistry"
      methodExercised:
        expression: "registerIfAbsent(name,class-MutedTestsBuildService,configureAction-any):provider"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "buildServiceSpec"
      methodExercised:
        expression: "getParameters():buildServiceParameters"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "buildServiceSpec"
      methodExercised:
        expression: "getParameters():buildServiceParameters2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle"
      methodExercised:
        expression: "getSharedServices():buildServiceRegistry"
    - type: "LOCAL_VARIABLE"
      valueUuid: "listProperty"
      methodExercised:
        expression: "set(list):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object2"
      methodExercised:
        expression: "getExcludePatterns():excludePatterns"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "property(propertyName2):object"
        throwsExceptions:
        - "groovy.lang.MissingPropertyException"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "mutedTestsProvider"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFileProperty"
      methodExercised:
        expression: "set(file):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action2-any):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-Test):taskCollection"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      valueUuid: "testFilter"
      methodExercised:
        expression: "excludeTestsMatching(object3):testFilter2"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      valueUuid: "testFilter"
      methodExercised:
        expression: "setFailOnNoMatchingTests(failOnNoMatchingTests):void5"
    - type: "RESULT"
      name: "result"
      valueUuid: "void6"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.filter(java.util.function.Predicate)\
        \ : java.util.stream.Stream"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.MutedTestPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.test.MutedTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService$Params"
      uuid: "buildServiceParameters"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "regularFileProperty"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService$Params"
      uuid: "buildServiceParameters2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "org.gradle.api.file.RegularFile"
      uuid: "listProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.services.BuildServiceRegistry"
      uuid: "buildServiceRegistry"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService"
      uuid: "provider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mutedTests"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService"
      uuid: "class-MutedTestsBuildService"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.services.BuildServiceSpec"
      uuid: "buildServiceSpec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.gradle.api.file.RegularFile"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService"
      uuid: "object2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getExcludePatternsItem1"
          valueType: "java.lang.String"
          uuid: "object3"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "excludePatterns"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.elasticsearch.additional.muted.tests"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object"
      nameForMock: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.elasticsearch.additional.muted.tests"
      valueType: "java.lang.String"
      uuid: "propertyName2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.TestFilter"
      uuid: "testFilter"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.TestFilter"
      uuid: "testFilter2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getExcludePatternsItem1"
      valueType: "java.lang.String"
      uuid: "object3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "failOnNoMatchingTests"
    - sapientType: "VOID"
      uuid: "void6"
    branches:
    - lineNumber: 27
      expression: "project.hasProperty(ADDITIONAL_FILES_PROPERTY)"
      range: "(27,38)-(27,83)"
      evaluatedAs: true
    - lineNumber: 44
      expression: "for-each(mutedTestsProvider.get().getExcludePatterns())"
      range: "(44,39)-(44,83)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$3"
    - lineNumber: 49
      expression: "BuildParams.isCi() == false"
      range: "(49,49)-(49,75)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$3"
  - testPathName: "applyWhenPIsEmptyNotEqualsFalseAndMutedTestsProviderGetGetExcludePatternsIsEmptyAndBuildParamsIsCiNotEqualsFalse"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "isCi():boolean4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "buildServiceParameters"
      methodExercised:
        expression: "getInfoPath():regularFileProperty"
    - type: "LOCAL_VARIABLE"
      valueUuid: "buildServiceParameters2"
      methodExercised:
        expression: "getAdditionalFiles():listProperty"
    - type: "LOCAL_VARIABLE"
      valueUuid: "buildServiceRegistry"
      methodExercised:
        expression: "registerIfAbsent(name,class-MutedTestsBuildService,configureAction-any):provider"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "buildServiceSpec"
      methodExercised:
        expression: "getParameters():buildServiceParameters"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      valueUuid: "buildServiceSpec"
      methodExercised:
        expression: "getParameters():buildServiceParameters2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle"
      methodExercised:
        expression: "getSharedServices():buildServiceRegistry"
    - type: "LOCAL_VARIABLE"
      valueUuid: "listProperty"
      methodExercised:
        expression: "set(list3):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object"
      methodExercised:
        expression: "getExcludePatterns():excludePatterns"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "hasProperty(propertyName):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getProjectDir():file"
    - type: "LOCAL_VARIABLE"
      name: "mutedTestsProvider"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object"
    - type: "LOCAL_VARIABLE"
      valueUuid: "regularFileProperty"
      methodExercised:
        expression: "set(file):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action2-any):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "withType(class-Test):taskCollection"
    - type: "RESULT"
      name: "result"
      valueUuid: "void6"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.MutedTestPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.test.MutedTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService$Params"
      uuid: "buildServiceParameters"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "regularFileProperty"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService$Params"
      uuid: "buildServiceParameters2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "org.gradle.api.file.RegularFile"
      uuid: "listProperty"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.services.BuildServiceRegistry"
      uuid: "buildServiceRegistry"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService"
      uuid: "provider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mutedTests"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService"
      uuid: "class-MutedTestsBuildService"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.services.BuildServiceSpec"
      uuid: "buildServiceSpec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.gradle.api.file.RegularFile"
      uuid: "list3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.MutedTestsBuildService"
      uuid: "object"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "excludePatterns"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.elasticsearch.additional.muted.tests"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "VOID"
      uuid: "void6"
    branches:
    - lineNumber: 27
      expression: "project.hasProperty(ADDITIONAL_FILES_PROPERTY)"
      range: "(27,38)-(27,83)"
      evaluatedAs: false
    - lineNumber: 31
      expression: "p.isEmpty() == false"
      range: "(31,26)-(31,45)"
      evaluatedAs: false
      internalMethodName: "lambda$apply$0"
    - lineNumber: 44
      expression: "for-each(mutedTestsProvider.get().getExcludePatterns())"
      range: "(44,39)-(44,83)"
      evaluatedAs: false
      internalMethodName: "lambda$apply$3"
    - lineNumber: 49
      expression: "BuildParams.isCi() == false"
      range: "(49,49)-(49,75)"
      evaluatedAs: false
      internalMethodName: "lambda$apply$3"
