---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.test.StandaloneRestTestPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(final Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "974FFB4F988B0F498288401D4319EFDC"
  paths:
  - testPathName: "applyWhenProjectGetPluginManagerHasPluginElasticsearch_buildThrowsInvalidUserDataException"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "hasPlugin(id):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "RESULT"
      name: "result"
      valueUuid: "invalidUserDataException"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.StandaloneRestTestPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.test.StandaloneRestTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch.build"
      valueType: "java.lang.String"
      uuid: "id"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.InvalidUserDataException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "elasticsearch.standalone-test, elasticsearch.standalone-rest-test,\
                \ and elasticsearch.build are mutually exclusive"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "org.gradle.api.InvalidUserDataException"
      uuid: "invalidUserDataException"
    branches:
    - lineNumber: 43
      expression: "project.getPluginManager().hasPlugin(\\\"elasticsearch.build\\\"\
        )"
      range: "(43,13)-(43,71)"
      evaluatedAs: true
  - testPathName: "applyWhenProjectGetPluginManagerNotHasPluginElasticsearch_build"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "InternalPrecommitTasks.class"
      valueUuid: "InternalPrecommitTasks.class"
      methodExercised:
        expression: "create(project,withProductiveCode):void9"
    - type: "STATIC"
      name: "RestTestUtil.class"
      valueUuid: "RestTestUtil.class"
      methodExercised:
        expression: "setupJavaRestTestDependenciesDefaults(project,object2):void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "classpath"
      methodExercised:
        expression: "setSourceSets(list):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "classpath"
      methodExercised:
        expression: "setPlusConfigurations(list2):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "create(name3):object3"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer2"
      methodExercised:
        expression: "getByName(name4):configuration"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer3"
      methodExercised:
        expression: "getByName(name5):configuration2"
        throwsExceptions:
        - "org.gradle.api.artifacts.UnknownConfigurationException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-EclipseModel):object4"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer3"
      methodExercised:
        expression: "getByType(class-IdeaModel):object5"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "module"
      methodExercised:
        expression: "getTestSources():testSources"
    - type: "LOCAL_VARIABLE"
      valueUuid: "module"
      methodExercised:
        expression: "getScopes():scopes"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "object"
      methodExercised:
        expression: "create(name2):object2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getRuntimeClasspath():fileCollection2"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getJava():sourceDirectorySet"
    - type: "LOCAL_VARIABLE"
      name: "eclipse"
      valueUuid: "object4"
      methodExercised:
        expression: "getClasspath():classpath"
    - type: "LOCAL_VARIABLE"
      name: "eclipse"
      valueUuid: "object4"
      methodExercised:
        expression: "getClasspath():classpath"
    - type: "LOCAL_VARIABLE"
      name: "idea"
      valueUuid: "object5"
      methodExercised:
        expression: "getModule():module"
    - type: "LOCAL_VARIABLE"
      name: "idea"
      valueUuid: "object5"
      methodExercised:
        expression: "getModule():module"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "hasPlugin(id):boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-GlobalBuildInfoPlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager3"
      methodExercised:
        expression: "apply(class-LegacyRestTestBasePlugin):void2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project2"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceDirectorySet"
      methodExercised:
        expression: "getSrcDirs():set"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput"
      methodExercised:
        expression: "getClassesDirs():fileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action-any):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name,class-ExportElasticsearchBuildResourcesTask):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-Test):taskCollection"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test"
      methodExercised:
        expression: "setTestClassesDirs(fileCollection):void4"
    - type: "LOCAL_VARIABLE"
      name: "test"
      valueUuid: "test"
      methodExercised:
        expression: "setClasspath(fileCollection2):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "testSources"
      methodExercised:
        expression: "from(objectArray):configurableFileCollection2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void10"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.StandaloneRestTestPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.test.StandaloneRestTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.precommit.InternalPrecommitTasks"
      uuid: "InternalPrecommitTasks.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "withProductiveCode"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.rest.RestTestUtil"
      uuid: "RestTestUtil.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object2"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseClasspath"
      uuid: "classpath"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.tasks.SourceSet"
          uuid: "object2"
      valueType: "java.util.List"
      genericValueType: "org.gradle.api.tasks.SourceSet"
      uuid: "list"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.api.artifacts.Configuration"
          uuid: "configuration"
      valueType: "java.util.List"
      genericValueType: "org.gradle.api.artifacts.Configuration"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compileOnly"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testRuntimeClasspath"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "testRuntimeClasspath"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "object4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "class-EclipseModel"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.idea.model.IdeaModel"
      uuid: "object5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.idea.model.IdeaModel"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.idea.model.IdeaModel"
      uuid: "class-IdeaModel"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.idea.model.IdeaModule"
      uuid: "module"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "testSources"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.util.Map<java.lang.String,java.util.Collection<org.gradle.api.artifacts.Configuration>>"
      uuid: "scopes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.SourceDirectorySet"
      uuid: "sourceDirectorySet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch.build"
      valueType: "java.lang.String"
      uuid: "id"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "class-GlobalBuildInfoPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.LegacyRestTestBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.LegacyRestTestBasePlugin"
      uuid: "class-LegacyRestTestBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.io.File"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "buildResources"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ExportElasticsearchBuildResourcesTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ExportElasticsearchBuildResourcesTask"
      uuid: "class-ExportElasticsearchBuildResourcesTask"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.testing.Test"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.testing.Test"
      uuid: "class-Test"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.testing.Test"
      uuid: "test"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "java.io.File"
            uuid: "set"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "VOID"
      uuid: "void10"
    branches:
    - lineNumber: 43
      expression: "project.getPluginManager().hasPlugin(\\\"elasticsearch.build\\\"\
        )"
      range: "(43,13)-(43,71)"
      evaluatedAs: false
