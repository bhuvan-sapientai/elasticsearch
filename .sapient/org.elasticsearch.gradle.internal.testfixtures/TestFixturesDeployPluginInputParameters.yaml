---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.testfixtures.TestFixturesDeployPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "5DA87368079668D8C783D3C74E9AF88E"
  paths:
  - testPathName: "applyWhenBaseImagesIsEmptyEqualsFalse"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Architecture.class.real"
      valueUuid: "Architecture.class.real"
      methodExercised:
        expression: "values():architectureArray"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "isCi():boolean2"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "isCi():boolean4"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "dockerBuildTask"
      methodExercised:
        expression: "getDockerContext():dockerContext"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "dockerBuildTask"
      methodExercised:
        expression: "setBaseImages(objectArray):void3"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "dockerBuildTask"
      methodExercised:
        expression: "setNoCache(boolean3):void4"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "dockerBuildTask"
      methodExercised:
        expression: "setTags(stringArray2):void5"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "dockerBuildTask"
      methodExercised:
        expression: "getPush():property4"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "dockerBuildTask"
      methodExercised:
        expression: "getPlatforms():setProperty"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "dockerBuildTask"
      methodExercised:
        expression: "setGroup(group):void8"
    - type: "LOCAL_VARIABLE"
      name: "task"
      valueUuid: "dockerBuildTask"
      methodExercised:
        expression: "setDescription(string9):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "dockerContext"
      methodExercised:
        expression: "fileValue(object):directoryProperty2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "add(name,namedDomainObjectContainer):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "listProperty"
      methodExercised:
        expression: "get():object2"
    - type: "LOCAL_VARIABLE"
      name: "fixtures"
      valueUuid: "namedDomainObjectContainer"
      methodExercised:
        expression: "all(action-any):void2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "container(class-TestFixtureDeployment):namedDomainObjectContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "get():object"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property2"
      methodExercised:
        expression: "getOrElse(string):object3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property3"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property4"
      methodExercised:
        expression: "set(boolean4):void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "setProperty"
      methodExercised:
        expression: "addAll(list2):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(string4,class-DockerBuildTask,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name3,configurationAction2-any):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-DockerBuildTask):taskCollection"
    - type: "LOCAL_VARIABLE"
      name: "fixture"
      valueUuid: "testFixtureDeployment"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "fixture"
      valueUuid: "testFixtureDeployment"
      methodExercised:
        expression: "getDockerContext():property"
    - type: "LOCAL_VARIABLE"
      name: "fixture"
      valueUuid: "testFixtureDeployment"
      methodExercised:
        expression: "getBaseImages():listProperty"
    - type: "LOCAL_VARIABLE"
      name: "fixture"
      valueUuid: "testFixtureDeployment"
      methodExercised:
        expression: "getDockerRegistry():property2"
    - type: "LOCAL_VARIABLE"
      name: "fixture"
      valueUuid: "testFixtureDeployment"
      methodExercised:
        expression: "getName():string5"
    - type: "LOCAL_VARIABLE"
      name: "fixture"
      valueUuid: "testFixtureDeployment"
      methodExercised:
        expression: "getVersion():property3"
    - type: "LOCAL_VARIABLE"
      name: "fixture"
      valueUuid: "testFixtureDeployment"
      methodExercised:
        expression: "getName():string8"
    - type: "RESULT"
      name: "result"
      valueUuid: "void10"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.testfixtures.TestFixturesDeployPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.testfixtures.TestFixturesDeployPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "REAL"
      valueType: "org.elasticsearch.gradle.Architecture"
      uuid: "Architecture.class.real"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "ENUM"
            content: !<regular>
              value: "X64"
            valueType: "org.elasticsearch.gradle.Architecture"
            uuid: "a"
          1:
            sapientType: "ENUM"
            content: !<regular>
              value: "AARCH64"
            valueType: "org.elasticsearch.gradle.Architecture"
            uuid: "a2"
      valueType: "org.elasticsearch.gradle.Architecture[]"
      uuid: "architectureArray"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.docker.DockerBuildTask"
      uuid: "dockerBuildTask"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "dockerContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "objectArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "B/C-fixture:F"
            valueType: "java.lang.String"
            uuid: "string6"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Boolean"
      uuid: "property4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.SetProperty"
      genericValueType: "java.lang.String"
      uuid: "setProperty"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Deploy TestFixtures"
      valueType: "java.lang.String"
      uuid: "group"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Deploys the A test fixture"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "directoryProperty2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object-pathname"
      valueType: "java.io.File"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dockerFixtures"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.NamedDomainObjectContainer"
      genericValueType: "org.elasticsearch.gradle.internal.testfixtures.TestFixtureDeployment"
      uuid: "namedDomainObjectContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "java.lang.String"
      uuid: "listProperty"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          uuid: "object2Item0"
      valueType: "java.util.List"
      uuid: "object2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.testfixtures.TestFixtureDeployment"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.testfixtures.TestFixtureDeployment"
      uuid: "class-TestFixtureDeployment"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.io.File"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "property2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "docker.elastic.co/elasticsearch-dev"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.String"
      uuid: "property3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "F"
      valueType: "java.lang.String"
      uuid: "object4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "linux/amd64"
          valueType: "java.lang.String"
          uuid: "null-dockerPlatform"
        - sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "string7"
      valueType: "java.util.List"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "deployEDockerImage"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.docker.DockerBuildTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.docker.DockerBuildTask"
      uuid: "class-DockerBuildTask"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.gradle.api.Task"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "deployFixtureDockerImages"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.Task"
      uuid: "configurationAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.testfixtures.TestFixtureDeployment"
      uuid: "testFixtureDeployment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "VOID"
      uuid: "void10"
    branches:
    - lineNumber: 42
      expression: "baseImages.isEmpty() == false"
      range: "(42,25)-(42,53)"
      evaluatedAs: true
      internalMethodName: "lambda$registerDeployTaskPerFixture$2"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.testfixtures.TestFixturesDeployPlugin"
