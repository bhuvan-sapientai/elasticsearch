---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "E3194603C5B7754BD53649134959EE77"
  paths:
  - testPathName: "applyWhenProjectNotEqualsProjectGetRootProjectThrowsIllegalStateException"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "RESULT"
      name: "result"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin\
                \ can only be applied to the root project."
            valueType: "java.lang.String"
            uuid: "s"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: true
  - testPathName: "applyWhenGradleVersionCurrentCompareToMinimumGradleVersionLessThan0ThrowsGradleException"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "minimumGradleVersion"
      valueUuid: "gradleVersion"
      methodExercised:
        expression: "getVersion():string2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "RESULT"
      name: "result"
      valueUuid: "gradleException"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.GradleException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Gradle A+ is required"
            valueType: "java.lang.String"
            uuid: "string3"
      valueType: "org.gradle.api.GradleException"
      uuid: "gradleException"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: true
  - testPathName: "applyWhenMinimumCompilerVersionCompareToCurrentVersionGreaterThan0ThrowsGradleException"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-JavaLanguageVersion):property"
    - type: "FIELD"
      name: "toolChainService"
      valueUuid: "object"
      methodExercised:
        expression: "launcherFor(config-any):provider"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "init(initializer-any):void"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file2):gitInfo"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath2):string2"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath3):string3"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string4):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string2):javaVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string3):javaVersion2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(javaLanguageVersion):property2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "map(transformer-any):provider2"
    - type: "LOCAL_VARIABLE"
      name: "explicitRuntimeJavaHome"
      valueUuid: "provider2"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "gradleException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
        propertiesMap:
          toolChainService:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "object"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "class-JavaLanguageVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
      nameForMock: "toolChainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaLauncher"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.elasticsearch.gradle.internal.info.BuildParams$MutableBuildParams"
      uuid: "initializer-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumCompilerVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumRuntimeVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath3"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string4"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_27"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "Jvm.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "property2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.GradleException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Project requires Java version of VERSION_27 or newer but Gradle\
                \ JAVA_HOME is 21"
            valueType: "java.lang.String"
            uuid: "string8"
      valueType: "org.gradle.api.GradleException"
      uuid: "gradleException"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: false
    - lineNumber: 313
      expression: "runtimeJavaProperty != null"
      range: "(313,13)-(313,39)"
      evaluatedAs: true
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 102
      expression: "isExplicitRuntimeJavaHomeSet"
      range: "(102,48)-(102,75)"
      evaluatedAs: true
    - lineNumber: 303
      expression: "System.getProperty(\\\"idea.active\\\", \\\"false\\\").equals(\\\
        \"true\\\") == false"
      range: "(303,13)-(303,78)"
      evaluatedAs: true
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 303
      expression: "minimumCompilerVersion.compareTo(currentVersion) > 0"
      range: "(303,83)-(303,134)"
      evaluatedAs: true
      internalMethodName: "assertMinimumCompilerVersion"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
  - testPathName: "applyWhenNotIsExplicitRuntimeJavaHomeSetAndSystemGetPropertyIdea_activeFalseEqualsTrueNotEqualsFalseAndGradleUtilsIsInc"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "providers"
      valueUuid: "providers"
      methodExercised:
        expression: "provider(value-any):provider"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-JavaLanguageVersion):property"
    - type: "FIELD"
      name: "toolChainService"
      valueUuid: "object"
      methodExercised:
        expression: "launcherFor(config-any):provider2"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "init(initializer-any):void"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file3):gitInfo"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath2):string2"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath3):string3"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isIncludedBuild(project):boolean3"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string7):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string2):javaVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string3):javaVersion2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getBundledJdkMajorVersion():string7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(javaLanguageVersion):property2"
    - type: "LOCAL_VARIABLE"
      name: "explicitRuntimeJavaHome"
      valueUuid: "provider"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "map(transformer-any):provider3"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
        propertiesMap:
          toolChainService:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "object"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ProviderFactory"
      uuid: "providers"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "class-JavaLanguageVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
      nameForMock: "toolChainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaLauncher"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.elasticsearch.gradle.internal.info.BuildParams$MutableBuildParams"
      uuid: "initializer-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumCompilerVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumRuntimeVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBundledJdkMajorVersion1"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "Jvm.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "property2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: false
    - lineNumber: 313
      expression: "runtimeJavaProperty != null"
      range: "(313,13)-(313,39)"
      evaluatedAs: false
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 316
      expression: "System.getenv(\\\"RUNTIME_JAVA_HOME\\\") != null"
      range: "(316,13)-(316,54)"
      evaluatedAs: true
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 102
      expression: "isExplicitRuntimeJavaHomeSet"
      range: "(102,48)-(102,75)"
      evaluatedAs: false
    - lineNumber: 303
      expression: "System.getProperty(\\\"idea.active\\\", \\\"false\\\").equals(\\\
        \"true\\\") == false"
      range: "(303,13)-(303,78)"
      evaluatedAs: false
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 157
      expression: "GradleUtils.isIncludedBuild(project) == false"
      range: "(157,13)-(157,57)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
  - testPathName: "applyWhenCaughtIOExceptionThrowsUncheckedIOException"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-JavaLanguageVersion):property"
    - type: "FIELD"
      name: "toolChainService"
      valueUuid: "object"
      methodExercised:
        expression: "launcherFor(config-any):provider"
    - type: "FIELD"
      name: "javaInstallationRegistry"
      valueUuid: "javaInstallationRegistry"
      methodExercised:
        expression: "toolchains():list"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "init(initializer-any):void"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "isSameFile(path,path2):boolean4"
        throwsExceptions:
        - "java.io.IOException"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file2):gitInfo"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath2):string2"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath3):string3"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isIncludedBuild(project):boolean3"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "STATIC"
      name: "InstallationLocation.class.real"
      valueUuid: "InstallationLocation.class.real"
      methodExercised:
        expression: "userDefined(file4,string29):installationLocation2"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string4):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string2):javaVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string3):javaVersion2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm2"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle"
      methodExercised:
        expression: "getTaskGraph():taskExecutionGraph"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(javaLanguageVersion):property2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "map(transformer-any):provider2"
    - type: "LOCAL_VARIABLE"
      name: "explicitRuntimeJavaHome"
      valueUuid: "provider2"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskExecutionGraph"
      methodExercised:
        expression: "whenReady(action-any):void2"
    - type: "FIELD_ACCESS"
      name: "location"
      valueUuid: "jvmToolchainMetadata"
      fieldAccess:
        returnValueUuid: "installationLocation"
    - type: "RESULT"
      name: "result"
      valueUuid: "uncheckedIOException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
        propertiesMap:
          toolChainService:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "object"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "class-JavaLanguageVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
      nameForMock: "toolChainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaLauncher"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
      uuid: "javaInstallationRegistry"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
          uuid: "jvmToolchainMetadata"
      valueType: "java.util.List"
      genericValueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.elasticsearch.gradle.internal.info.BuildParams$MutableBuildParams"
      uuid: "initializer-any"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.nio.file.Path"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.io.File"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "org.gradle.internal.jvm.Jvm"
                method: "current"
                methodParameters: []
              valueType: "org.gradle.internal.jvm.Jvm"
              uuid: "jvm2"
            methodParameters: []
            methodName: "getJavaHome"
          valueType: "java.io.File"
          uuid: "file3"
        methodParameters: []
        methodName: "toPath"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumCompilerVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumRuntimeVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "InstallationLocation.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.io.File"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.gradle.internal.jvm.Jvm"
                  method: "current"
                  methodParameters: []
                valueType: "org.gradle.internal.jvm.Jvm"
                uuid: "jvm3"
              methodParameters: []
              methodName: "getJavaHome"
            valueType: "java.io.File"
            uuid: "file4"
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Current JVM"
            valueType: "java.lang.String"
            uuid: "string29"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.gradle.internal.jvm.Jvm"
            method: "current"
            methodParameters: []
          valueType: "org.gradle.internal.jvm.Jvm"
          uuid: "jvm3"
        methodParameters: []
        methodName: "getJavaHome"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Current JVM"
      valueType: "java.lang.String"
      uuid: "string29"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string4"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "Jvm.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "taskExecutionGraph"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "property2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "jvmToolchainMetadata"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - name: "location"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "location-pathname"
            valueType: "java.io.File"
            uuid: "installationLocation-location"
        - name: "source"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "source1"
            valueType: "java.lang.String"
            uuid: "installationLocation-source"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.UncheckedIOException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.io.UncheckedIOException"
      uuid: "uncheckedIOException"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: false
    - lineNumber: 313
      expression: "runtimeJavaProperty != null"
      range: "(313,13)-(313,39)"
      evaluatedAs: true
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 102
      expression: "isExplicitRuntimeJavaHomeSet"
      range: "(102,48)-(102,75)"
      evaluatedAs: true
    - lineNumber: 303
      expression: "System.getProperty(\\\"idea.active\\\", \\\"false\\\").equals(\\\
        \"true\\\") == false"
      range: "(303,13)-(303,78)"
      evaluatedAs: true
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 303
      expression: "minimumCompilerVersion.compareTo(currentVersion) > 0"
      range: "(303,83)-(303,134)"
      evaluatedAs: false
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 157
      expression: "GradleUtils.isIncludedBuild(project) == false"
      range: "(157,13)-(157,57)"
      evaluatedAs: true
    - lineNumber: 252
      expression: "catch-exception (IOException)"
      range: "(252,11)-(252,40)"
      evaluatedAs: true
      internalMethodName: "isSameFile"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
    catchBlockExercised:
      idExternalInstruction: 5
      id: 5
      catchExceptions:
      - "java.io.IOException"
  - testPathName: "applyWhenSystemGetPropertyIdea_activeFalseEqualsTrueNotEqualsFalseAndGradleUtilsIsIncludedBuildProjectNotEqualsFalse2"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "providers"
      valueUuid: "providers"
      methodExercised:
        expression: "provider(value-any):provider"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-JavaLanguageVersion):property"
    - type: "FIELD"
      name: "toolChainService"
      valueUuid: "object"
      methodExercised:
        expression: "launcherFor(config-any):provider2"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "init(initializer-any):void"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file3):gitInfo"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath2):string2"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath3):string3"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isIncludedBuild(project):boolean3"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string7):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string2):javaVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string3):javaVersion2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getBundledJdkMajorVersion():string7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(javaLanguageVersion):property2"
    - type: "LOCAL_VARIABLE"
      name: "explicitRuntimeJavaHome"
      valueUuid: "provider"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "map(transformer-any):provider3"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
        propertiesMap:
          toolChainService:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "object"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ProviderFactory"
      uuid: "providers"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "class-JavaLanguageVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
      nameForMock: "toolChainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaLauncher"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.elasticsearch.gradle.internal.info.BuildParams$MutableBuildParams"
      uuid: "initializer-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumCompilerVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumRuntimeVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBundledJdkMajorVersion1"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "Jvm.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "property2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: false
    - lineNumber: 313
      expression: "runtimeJavaProperty != null"
      range: "(313,13)-(313,39)"
      evaluatedAs: false
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 316
      expression: "System.getenv(\\\"RUNTIME_JAVA_HOME\\\") != null"
      range: "(316,13)-(316,54)"
      evaluatedAs: false
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 322
      expression: "env == null"
      range: "(322,17)-(322,27)"
      evaluatedAs: true
      internalMethodName: "lambda$findRuntimeJavaHome$14"
    - lineNumber: 102
      expression: "isExplicitRuntimeJavaHomeSet"
      range: "(102,48)-(102,75)"
      evaluatedAs: false
    - lineNumber: 303
      expression: "System.getProperty(\\\"idea.active\\\", \\\"false\\\").equals(\\\
        \"true\\\") == false"
      range: "(303,13)-(303,78)"
      evaluatedAs: false
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 157
      expression: "GradleUtils.isIncludedBuild(project) == false"
      range: "(157,13)-(157,57)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
  - testPathName: "applyWhenSystemGetPropertyIdea_activeFalseEqualsTrueNotEqualsFalseAndGradleUtilsIsIncludedBuildProjectNotEqualsFalse3"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "providers"
      valueUuid: "providers"
      methodExercised:
        expression: "provider(value-any):provider"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-JavaLanguageVersion):property"
    - type: "FIELD"
      name: "toolChainService"
      valueUuid: "object"
      methodExercised:
        expression: "launcherFor(config-any):provider2"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "init(initializer-any):void"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file3):gitInfo"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath2):string2"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath3):string3"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isIncludedBuild(project):boolean3"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string7):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string2):javaVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string3):javaVersion2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getBundledJdkMajorVersion():string7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(javaLanguageVersion):property2"
    - type: "LOCAL_VARIABLE"
      name: "explicitRuntimeJavaHome"
      valueUuid: "provider"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "map(transformer-any):provider3"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
        propertiesMap:
          toolChainService:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "object"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ProviderFactory"
      uuid: "providers"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "class-JavaLanguageVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
      nameForMock: "toolChainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaLauncher"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.elasticsearch.gradle.internal.info.BuildParams$MutableBuildParams"
      uuid: "initializer-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumCompilerVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumRuntimeVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBundledJdkMajorVersion1"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "Jvm.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "property2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: false
    - lineNumber: 313
      expression: "runtimeJavaProperty != null"
      range: "(313,13)-(313,39)"
      evaluatedAs: false
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 316
      expression: "System.getenv(\\\"RUNTIME_JAVA_HOME\\\") != null"
      range: "(316,13)-(316,54)"
      evaluatedAs: false
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 322
      expression: "env == null"
      range: "(322,17)-(322,27)"
      evaluatedAs: false
      internalMethodName: "lambda$findRuntimeJavaHome$14"
    - lineNumber: 102
      expression: "isExplicitRuntimeJavaHomeSet"
      range: "(102,48)-(102,75)"
      evaluatedAs: false
    - lineNumber: 303
      expression: "System.getProperty(\\\"idea.active\\\", \\\"false\\\").equals(\\\
        \"true\\\") == false"
      range: "(303,13)-(303,78)"
      evaluatedAs: false
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 157
      expression: "GradleUtils.isIncludedBuild(project) == false"
      range: "(157,13)-(157,57)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
  - testPathName: "applyWhenBuildParamsGetIsRuntimeJavaHomeSetThrowsGradleException"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-JavaLanguageVersion):property"
    - type: "FIELD"
      name: "toolChainService"
      valueUuid: "object"
      methodExercised:
        expression: "launcherFor(config-any):provider"
    - type: "FIELD"
      name: "javaInstallationRegistry"
      valueUuid: "javaInstallationRegistry"
      methodExercised:
        expression: "toolchains():list"
    - type: "FIELD"
      name: "javaInstallationRegistry"
      valueUuid: "javaInstallationRegistry"
      methodExercised:
        expression: "toolchains():list4"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "init(initializer-any):void"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getIsRuntimeJavaHomeSet():boolean6"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getRuntimeJavaHome():file7"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file2):gitInfo"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath2):string2"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath3):string3"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isIncludedBuild(project):boolean3"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion3"
    - type: "STATIC"
      name: "InstallationLocation.class.real"
      valueUuid: "InstallationLocation.class.real"
      methodExercised:
        expression: "userDefined(file4,string29):installationLocation2"
    - type: "STATIC"
      name: "InstallationLocation.class.real"
      valueUuid: "InstallationLocation.class.real"
      methodExercised:
        expression: "userDefined(file8,string29):installationLocation3"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string4):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string2):javaVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string3):javaVersion2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm2"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm3"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle"
      methodExercised:
        expression: "getTaskGraph():taskExecutionGraph"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      name: "gradleJvmMetadata"
      valueUuid: "jvmInstallationMetadata"
      methodExercised:
        expression: "getVendor():jvmVendor"
    - type: "LOCAL_VARIABLE"
      name: "gradleJvmMetadata"
      valueUuid: "jvmInstallationMetadata"
      methodExercised:
        expression: "getJvmVersion():string10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "jvmVendor"
      methodExercised:
        expression: "getDisplayName():string9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(javaLanguageVersion):property2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "map(transformer-any):provider2"
    - type: "LOCAL_VARIABLE"
      name: "explicitRuntimeJavaHome"
      valueUuid: "provider2"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskExecutionGraph"
      methodExercised:
        expression: "whenReady(action-any):void2"
    - type: "FIELD_ACCESS"
      name: "location"
      valueUuid: "jvmToolchainMetadata"
      fieldAccess:
        returnValueUuid: "installationLocation"
    - type: "FIELD_ACCESS"
      name: "location"
      valueUuid: "jvmToolchainMetadata2"
      fieldAccess:
        returnValueUuid: "installationLocation"
    - type: "RESULT"
      name: "result"
      valueUuid: "gradleException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
        propertiesMap:
          toolChainService:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "object"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "class-JavaLanguageVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
      nameForMock: "toolChainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaLauncher"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
      uuid: "javaInstallationRegistry"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
          uuid: "jvmToolchainMetadata"
      valueType: "java.util.List"
      genericValueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "list"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
          uuid: "jvmToolchainMetadata2"
      valueType: "java.util.List"
      genericValueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "list4"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.elasticsearch.gradle.internal.info.BuildParams$MutableBuildParams"
      uuid: "initializer-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file7-pathname"
      valueType: "java.io.File"
      uuid: "file7"
      nameForMock: "file7"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumCompilerVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumRuntimeVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.util.GradleVersion"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion3"
    - sapientType: "REAL"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "InstallationLocation.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.io.File"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.gradle.internal.jvm.Jvm"
                  method: "current"
                  methodParameters: []
                valueType: "org.gradle.internal.jvm.Jvm"
                uuid: "jvm3"
              methodParameters: []
              methodName: "getJavaHome"
            valueType: "java.io.File"
            uuid: "file4"
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Current JVM"
            valueType: "java.lang.String"
            uuid: "string29"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.gradle.internal.jvm.Jvm"
            method: "current"
            methodParameters: []
          valueType: "org.gradle.internal.jvm.Jvm"
          uuid: "jvm3"
        methodParameters: []
        methodName: "getJavaHome"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Current JVM"
      valueType: "java.lang.String"
      uuid: "string29"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.io.File"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.gradle.internal.jvm.Jvm"
                  method: "current"
                  methodParameters: []
                valueType: "org.gradle.internal.jvm.Jvm"
                uuid: "jvm4"
              methodParameters: []
              methodName: "getJavaHome"
            valueType: "java.io.File"
            uuid: "file8"
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Current JVM"
            valueType: "java.lang.String"
            uuid: "string29"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.gradle.internal.jvm.Jvm"
            method: "current"
            methodParameters: []
          valueType: "org.gradle.internal.jvm.Jvm"
          uuid: "jvm4"
        methodParameters: []
        methodName: "getJavaHome"
      valueType: "java.io.File"
      uuid: "file8"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string4"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_5"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "Jvm.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "taskExecutionGraph"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmInstallationMetadata"
      uuid: "jvmInstallationMetadata"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmVendor"
      uuid: "jvmVendor"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getJvmVersion1"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getDisplayName1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "property2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "jvmToolchainMetadata"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - name: "location"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "location-pathname"
            valueType: "java.io.File"
            uuid: "installationLocation-location"
        - name: "source"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "source1"
            valueType: "java.lang.String"
            uuid: "installationLocation-source"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "jvmToolchainMetadata2"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.GradleException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Could not locate available Java installation in Gradle registry\
                \ at: file7"
            valueType: "java.lang.String"
            uuid: "string15"
      valueType: "org.gradle.api.GradleException"
      uuid: "gradleException"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: false
    - lineNumber: 313
      expression: "runtimeJavaProperty != null"
      range: "(313,13)-(313,39)"
      evaluatedAs: true
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 102
      expression: "isExplicitRuntimeJavaHomeSet"
      range: "(102,48)-(102,75)"
      evaluatedAs: true
    - lineNumber: 303
      expression: "System.getProperty(\\\"idea.active\\\", \\\"false\\\").equals(\\\
        \"true\\\") == false"
      range: "(303,13)-(303,78)"
      evaluatedAs: true
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 303
      expression: "minimumCompilerVersion.compareTo(currentVersion) > 0"
      range: "(303,83)-(303,134)"
      evaluatedAs: false
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 157
      expression: "GradleUtils.isIncludedBuild(project) == false"
      range: "(157,13)-(157,57)"
      evaluatedAs: true
    - lineNumber: 251
      expression: "Files.isSameFile(javaHome.toPath(), installationLocation.getLocation().toPath())"
      range: "(251,20)-(251,99)"
      evaluatedAs: false
      internalMethodName: "isSameFile"
    - lineNumber: 205
      expression: "BuildParams.getIsRuntimeJavaHomeSet()"
      range: "(205,13)-(205,49)"
      evaluatedAs: true
      internalMethodName: "logGlobalBuildInfo"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
  - testPathName: "applyWhenJavaToolchainHomeIsNotNull"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-JavaLanguageVersion):property"
    - type: "FIELD"
      name: "toolChainService"
      valueUuid: "object"
      methodExercised:
        expression: "launcherFor(config-any):provider"
    - type: "FIELD"
      name: "javaInstallationRegistry"
      valueUuid: "javaInstallationRegistry"
      methodExercised:
        expression: "toolchains():list"
    - type: "FIELD"
      name: "javaInstallationRegistry"
      valueUuid: "javaInstallationRegistry"
      methodExercised:
        expression: "toolchains():list4"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "init(initializer-any):void"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getIsRuntimeJavaHomeSet():boolean6"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getRuntimeJavaHome():file7"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getRuntimeJavaHome():file11"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getTestSeed():string26"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "isInFipsJvm():boolean10"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file2):gitInfo"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath2):string2"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath3):string3"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isIncludedBuild(project):boolean3"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion3"
    - type: "STATIC"
      name: "InstallationLocation.class.real"
      valueUuid: "InstallationLocation.class.real"
      methodExercised:
        expression: "userDefined(file4,source):installationLocation2"
    - type: "STATIC"
      name: "InstallationLocation.class.real"
      valueUuid: "InstallationLocation.class.real"
      methodExercised:
        expression: "userDefined(file8,source2):installationLocation3"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string4):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string2):javaVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string3):javaVersion2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm2"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm3"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle"
      methodExercised:
        expression: "getTaskGraph():taskExecutionGraph"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      name: "gradleJvmMetadata"
      valueUuid: "jvmInstallationMetadata"
      methodExercised:
        expression: "getVendor():jvmVendor"
    - type: "LOCAL_VARIABLE"
      name: "gradleJvmMetadata"
      valueUuid: "jvmInstallationMetadata"
      methodExercised:
        expression: "getJvmVersion():string10"
    - type: "LOCAL_VARIABLE"
      name: "runtimeJvm"
      valueUuid: "jvmInstallationMetadata2"
      methodExercised:
        expression: "getVendor():jvmVendor2"
    - type: "LOCAL_VARIABLE"
      name: "runtimeJvm"
      valueUuid: "jvmInstallationMetadata2"
      methodExercised:
        expression: "getJvmVersion():string15"
    - type: "LOCAL_VARIABLE"
      name: "runtimeJvm"
      valueUuid: "jvmInstallationMetadata2"
      methodExercised:
        expression: "getRuntimeVersion():string16"
    - type: "LOCAL_VARIABLE"
      valueUuid: "jvmVendor"
      methodExercised:
        expression: "getDisplayName():string9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "jvmVendor2"
      methodExercised:
        expression: "getDisplayName():string14"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(javaLanguageVersion):property2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "map(transformer-any):provider2"
    - type: "LOCAL_VARIABLE"
      name: "explicitRuntimeJavaHome"
      valueUuid: "provider2"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskExecutionGraph"
      methodExercised:
        expression: "whenReady(action-any):void2"
    - type: "FIELD_ACCESS"
      name: "location"
      valueUuid: "jvmToolchainMetadata"
      fieldAccess:
        returnValueUuid: "installationLocation"
    - type: "FIELD_ACCESS"
      name: "location"
      valueUuid: "jvmToolchainMetadata2"
      fieldAccess:
        returnValueUuid: "installationLocation"
    - type: "RESULT"
      name: "result"
      valueUuid: "void15"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
        propertiesMap:
          toolChainService:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "object"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "class-JavaLanguageVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
      nameForMock: "toolChainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaLauncher"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
      uuid: "javaInstallationRegistry"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
          uuid: "jvmToolchainMetadata"
      valueType: "java.util.List"
      genericValueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "list"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
          uuid: "jvmToolchainMetadata2"
      valueType: "java.util.List"
      genericValueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "list4"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.elasticsearch.gradle.internal.info.BuildParams$MutableBuildParams"
      uuid: "initializer-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file7-pathname"
      valueType: "java.io.File"
      uuid: "file7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file11-pathname"
      valueType: "java.io.File"
      uuid: "file11"
      nameForMock: "file11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "`"
      valueType: "java.lang.String"
      uuid: "string26"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean10"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumCompilerVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumRuntimeVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.util.GradleVersion"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion3"
    - sapientType: "REAL"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "InstallationLocation.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.io.File"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.gradle.internal.jvm.Jvm"
                  method: "current"
                  methodParameters: []
                valueType: "org.gradle.internal.jvm.Jvm"
                uuid: "jvm3"
              methodParameters: []
              methodName: "getJavaHome"
            valueType: "java.io.File"
            uuid: "file4"
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Current JVM"
            valueType: "java.lang.String"
            uuid: "string29"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.gradle.internal.jvm.Jvm"
            method: "current"
            methodParameters: []
          valueType: "org.gradle.internal.jvm.Jvm"
          uuid: "jvm3"
        methodParameters: []
        methodName: "getJavaHome"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Current JVM"
      valueType: "java.lang.String"
      uuid: "source"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.io.File"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.gradle.internal.jvm.Jvm"
                  method: "current"
                  methodParameters: []
                valueType: "org.gradle.internal.jvm.Jvm"
                uuid: "jvm4"
              methodParameters: []
              methodName: "getJavaHome"
            valueType: "java.io.File"
            uuid: "file8"
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Current JVM"
            valueType: "java.lang.String"
            uuid: "string29"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.gradle.internal.jvm.Jvm"
            method: "current"
            methodParameters: []
          valueType: "org.gradle.internal.jvm.Jvm"
          uuid: "jvm4"
        methodParameters: []
        methodName: "getJavaHome"
      valueType: "java.io.File"
      uuid: "file8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Current JVM"
      valueType: "java.lang.String"
      uuid: "source2"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string4"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_9"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "Jvm.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "taskExecutionGraph"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmInstallationMetadata"
      uuid: "jvmInstallationMetadata"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmVendor"
      uuid: "jvmVendor"
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\\\"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmInstallationMetadata"
      uuid: "jvmInstallationMetadata2"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmVendor"
      uuid: "jvmVendor2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Y"
      valueType: "java.lang.String"
      uuid: "string15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "X"
      valueType: "java.lang.String"
      uuid: "string16"
    - sapientType: "BASIC"
      content: !<regular>
        value: "]"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "W"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "property2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "jvmToolchainMetadata"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - name: "location"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "location-pathname"
            valueType: "java.io.File"
            uuid: "installationLocation-location"
        - name: "source"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "source1"
            valueType: "java.lang.String"
            uuid: "installationLocation-source"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "jvmToolchainMetadata2"
    - sapientType: "VOID"
      uuid: "void15"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: false
    - lineNumber: 313
      expression: "runtimeJavaProperty != null"
      range: "(313,13)-(313,39)"
      evaluatedAs: true
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 102
      expression: "isExplicitRuntimeJavaHomeSet"
      range: "(102,48)-(102,75)"
      evaluatedAs: true
    - lineNumber: 303
      expression: "System.getProperty(\\\"idea.active\\\", \\\"false\\\").equals(\\\
        \"true\\\") == false"
      range: "(303,13)-(303,78)"
      evaluatedAs: true
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 303
      expression: "minimumCompilerVersion.compareTo(currentVersion) > 0"
      range: "(303,83)-(303,134)"
      evaluatedAs: false
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 157
      expression: "GradleUtils.isIncludedBuild(project) == false"
      range: "(157,13)-(157,57)"
      evaluatedAs: true
    - lineNumber: 251
      expression: "Files.isSameFile(javaHome.toPath(), installationLocation.getLocation().toPath())"
      range: "(251,20)-(251,99)"
      evaluatedAs: true
      internalMethodName: "isSameFile"
    - lineNumber: 205
      expression: "BuildParams.getIsRuntimeJavaHomeSet()"
      range: "(205,13)-(205,49)"
      evaluatedAs: true
      internalMethodName: "logGlobalBuildInfo"
    - lineNumber: 220
      expression: "javaToolchainHome != null"
      range: "(220,13)-(220,37)"
      evaluatedAs: true
      internalMethodName: "logGlobalBuildInfo"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
  - testPathName: "applyWhenBuildParamsNotGetIsRuntimeJavaHomeSetAndJavaToolchainHomeIsNotNull"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory,org.gradle.internal.jvm.inspection.JavaInstallationRegistry,org.gradle.internal.jvm.inspection.JvmMetadataDetector,org.gradle.api.provider.ProviderFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-JavaLanguageVersion):property"
    - type: "FIELD"
      name: "toolChainService"
      valueUuid: "object"
      methodExercised:
        expression: "launcherFor(config-any):provider"
    - type: "FIELD"
      name: "javaInstallationRegistry"
      valueUuid: "javaInstallationRegistry"
      methodExercised:
        expression: "toolchains():list"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "init(initializer-any):void"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getIsRuntimeJavaHomeSet():boolean6"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "getTestSeed():string19"
    - type: "STATIC"
      name: "BuildParams.class"
      valueUuid: "BuildParams.class"
      methodExercised:
        expression: "isInFipsJvm():boolean8"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file2):gitInfo"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath):string"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath2):string2"
    - type: "STATIC"
      name: "GlobalBuildInfoPlugin.class"
      valueUuid: "GlobalBuildInfoPlugin.class"
      methodExercised:
        expression: "getResourceContents(resourcePath3):string3"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "isIncludedBuild(project):boolean3"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "version(string):gradleVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion2"
    - type: "STATIC"
      name: "GradleVersion.class"
      valueUuid: "GradleVersion.class"
      methodExercised:
        expression: "current():gradleVersion3"
    - type: "STATIC"
      name: "InstallationLocation.class.real"
      valueUuid: "InstallationLocation.class.real"
      methodExercised:
        expression: "userDefined(file4,string29):installationLocation2"
    - type: "STATIC"
      name: "JavaLanguageVersion.class"
      valueUuid: "JavaLanguageVersion.class"
      methodExercised:
        expression: "of(string4):javaLanguageVersion"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string2):javaVersion"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "JavaVersion.class"
      valueUuid: "JavaVersion.class"
      methodExercised:
        expression: "toVersion(string3):javaVersion2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm2"
    - type: "STATIC"
      name: "Jvm.class.real"
      valueUuid: "Jvm.class.real"
      methodExercised:
        expression: "current():jvm3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaToolchainService):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle"
      methodExercised:
        expression: "getTaskGraph():taskExecutionGraph"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradleVersion2"
      methodExercised:
        expression: "compareTo(gradleVersion):int1"
    - type: "LOCAL_VARIABLE"
      name: "gradleJvmMetadata"
      valueUuid: "jvmInstallationMetadata"
      methodExercised:
        expression: "getVendor():jvmVendor"
    - type: "LOCAL_VARIABLE"
      name: "gradleJvmMetadata"
      valueUuid: "jvmInstallationMetadata"
      methodExercised:
        expression: "getJvmVersion():string10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "jvmVendor"
      methodExercised:
        expression: "getDisplayName():string9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-JvmToolchainsPlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(javaLanguageVersion):property2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "map(transformer-any):provider2"
    - type: "LOCAL_VARIABLE"
      name: "explicitRuntimeJavaHome"
      valueUuid: "provider2"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskExecutionGraph"
      methodExercised:
        expression: "whenReady(action-any):void2"
    - type: "FIELD_ACCESS"
      name: "location"
      valueUuid: "jvmToolchainMetadata"
      fieldAccess:
        returnValueUuid: "installationLocation"
    - type: "RESULT"
      name: "result"
      valueUuid: "void13"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
        parameters:
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        - name: "javaInstallationRegistry"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
            uuid: "javaInstallationRegistry"
        - name: "metadataDetector"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.jvm.inspection.JvmMetadataDetector"
            uuid: "metadataDetector"
        - name: "providers"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "providers"
        propertiesMap:
          toolChainService:
            sapientType: "MOCK"
            valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
            uuid: "object"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "class-JavaLanguageVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "object"
      nameForMock: "toolChainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.gradle.jvm.toolchain.JavaLauncher"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.jvm.toolchain.JavaToolchainSpec"
      uuid: "config-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JavaInstallationRegistry"
      uuid: "javaInstallationRegistry"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
          uuid: "jvmToolchainMetadata"
      valueType: "java.util.List"
      genericValueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.BuildParams"
      uuid: "BuildParams.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.elasticsearch.gradle.internal.info.BuildParams$MutableBuildParams"
      uuid: "initializer-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Z"
      valueType: "java.lang.String"
      uuid: "string19"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
      uuid: "GlobalBuildInfoPlugin.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getResourceContents1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumGradleVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumCompilerVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/minimumRuntimeVersion"
      valueType: "java.lang.String"
      uuid: "resourcePath3"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "GradleVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion"
    - sapientType: "MOCK"
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.util.GradleVersion"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.util.GradleVersion"
      uuid: "gradleVersion3"
    - sapientType: "REAL"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "InstallationLocation.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.io.File"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.gradle.internal.jvm.Jvm"
                  method: "current"
                  methodParameters: []
                valueType: "org.gradle.internal.jvm.Jvm"
                uuid: "jvm3"
              methodParameters: []
              methodName: "getJavaHome"
            valueType: "java.io.File"
            uuid: "file4"
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Current JVM"
            valueType: "java.lang.String"
            uuid: "string29"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.gradle.internal.jvm.Jvm"
            method: "current"
            methodParameters: []
          valueType: "org.gradle.internal.jvm.Jvm"
          uuid: "jvm3"
        methodParameters: []
        methodName: "getJavaHome"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Current JVM"
      valueType: "java.lang.String"
      uuid: "string29"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "JavaLanguageVersion.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "javaLanguageVersion"
    - sapientType: "BASIC"
      content: !<regular>
        value: "string4"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "JavaVersion.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_3"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VERSION_1_1"
      valueType: "org.gradle.api.JavaVersion"
      uuid: "javaVersion2"
    - sapientType: "REAL"
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "Jvm.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.internal.jvm.Jvm"
        method: "current"
        methodParameters: []
      valueType: "org.gradle.internal.jvm.Jvm"
      uuid: "jvm3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.jvm.toolchain.JavaToolchainService"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.jvm.toolchain.JavaToolchainService"
      uuid: "class-JavaToolchainService"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "taskExecutionGraph"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmInstallationMetadata"
      uuid: "jvmInstallationMetadata"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmVendor"
      uuid: "jvmVendor"
    - sapientType: "BASIC"
      content: !<regular>
        value: "W"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "X"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JvmToolchainsPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JvmToolchainsPlugin"
      uuid: "class-JvmToolchainsPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.gradle.jvm.toolchain.JavaLanguageVersion"
      uuid: "property2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.internal.jvm.inspection.JvmToolchainMetadata"
      uuid: "jvmToolchainMetadata"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.gradle.jvm.toolchain.internal.InstallationLocation"
        method: "userDefined"
        methodParameters:
        - name: "location"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "location-pathname"
            valueType: "java.io.File"
            uuid: "installationLocation-location"
        - name: "source"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "source1"
            valueType: "java.lang.String"
            uuid: "installationLocation-source"
      valueType: "org.gradle.jvm.toolchain.internal.InstallationLocation"
      uuid: "installationLocation"
    - sapientType: "VOID"
      uuid: "void13"
    branches:
    - lineNumber: 87
      expression: "project != project.getRootProject()"
      range: "(87,13)-(87,47)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "GradleVersion.current().compareTo(minimumGradleVersion) < 0"
      range: "(93,13)-(93,71)"
      evaluatedAs: false
    - lineNumber: 313
      expression: "runtimeJavaProperty != null"
      range: "(313,13)-(313,39)"
      evaluatedAs: true
      internalMethodName: "findRuntimeJavaHome"
    - lineNumber: 102
      expression: "isExplicitRuntimeJavaHomeSet"
      range: "(102,48)-(102,75)"
      evaluatedAs: true
    - lineNumber: 303
      expression: "System.getProperty(\\\"idea.active\\\", \\\"false\\\").equals(\\\
        \"true\\\") == false"
      range: "(303,13)-(303,78)"
      evaluatedAs: true
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 303
      expression: "minimumCompilerVersion.compareTo(currentVersion) > 0"
      range: "(303,83)-(303,134)"
      evaluatedAs: false
      internalMethodName: "assertMinimumCompilerVersion"
    - lineNumber: 157
      expression: "GradleUtils.isIncludedBuild(project) == false"
      range: "(157,13)-(157,57)"
      evaluatedAs: true
    - lineNumber: 251
      expression: "Files.isSameFile(javaHome.toPath(), installationLocation.getLocation().toPath())"
      range: "(251,20)-(251,99)"
      evaluatedAs: false
      internalMethodName: "isSameFile"
    - lineNumber: 205
      expression: "BuildParams.getIsRuntimeJavaHomeSet()"
      range: "(205,13)-(205,49)"
      evaluatedAs: false
      internalMethodName: "logGlobalBuildInfo"
    - lineNumber: 220
      expression: "javaToolchainHome != null"
      range: "(220,13)-(220,37)"
      evaluatedAs: true
      internalMethodName: "logGlobalBuildInfo"
    mockedStaticClassesWithCallRealMethods:
    - "org.elasticsearch.gradle.internal.info.GlobalBuildInfoPlugin"
- method:
    name: "getResourceContents"
    sourceCodeSignature: "String getResourceContents(String resourcePath)"
    returnType: "java.lang.String"
    parameters:
    - name: "resourcePath"
      type: "java.lang.String"
    instructionFingerprint: "1CED6E007B2E9A191E2A80FD965C6AC8"
  paths:
  - testPathName: "getResourceContentsWhenBLengthNotEquals0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "resourcePath"
      valueUuid: "resourcePath"
    - type: "RESULT"
      name: "result"
      valueUuid: "string3"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (String line = reader.readLine(); line != null; line = reader.readLine())\
        \ {"
      lineNumber: 341
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: reader - Method: readLine"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "server/src/main/java/org/elasticsearch/Version.java"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string3"
    branches:
    - lineNumber: 341
      expression: "line != null"
      range: "(341,51)-(341,62)"
      evaluatedAs: true
    - lineNumber: 342
      expression: "b.length() != 0"
      range: "(342,21)-(342,35)"
      evaluatedAs: true
  - testPathName: "getResourceContentsWhenBLengthNotEquals0AndDefaultBranchThrowsThrowable"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "resourcePath"
      valueUuid: "resourcePath"
    - type: "RESULT"
      name: "result"
      valueUuid: "throwable"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (String line = reader.readLine(); line != null; line = reader.readLine())\
        \ {"
      lineNumber: 341
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: reader - Method: readLine"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "server/src/main/java/org/elasticsearch/Version.java"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 341
      expression: "line != null"
      range: "(341,51)-(341,62)"
      evaluatedAs: true
    - lineNumber: 342
      expression: "b.length() != 0"
      range: "(342,21)-(342,35)"
      evaluatedAs: true
    - lineNumber: 337
      expression: "branch expression (line 337)"
      range: "(337,1)-(337,200)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "getResourceContentsWhenBLengthNotEquals0AndCaughtIOExceptionThrowsUncheckedIOException"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "resourcePath"
      valueUuid: "resourcePath"
    - type: "RESULT"
      name: "result"
      valueUuid: "uncheckedIOException"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (String line = reader.readLine(); line != null; line = reader.readLine())\
        \ {"
      lineNumber: 341
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: reader - Method: readLine"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "server/src/main/java/org/elasticsearch/Version.java"
      valueType: "java.lang.String"
      uuid: "resourcePath"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.UncheckedIOException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Error trying to read classpath resource: server/src/main/java/org/elasticsearch/Version.java"
            valueType: "java.lang.String"
            uuid: "message"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.io.UncheckedIOException"
      uuid: "uncheckedIOException"
    branches:
    - lineNumber: 341
      expression: "line != null"
      range: "(341,51)-(341,62)"
      evaluatedAs: true
    - lineNumber: 342
      expression: "b.length() != 0"
      range: "(342,21)-(342,35)"
      evaluatedAs: true
    - lineNumber: 349
      expression: "catch-exception (IOException)"
      range: "(349,11)-(349,30)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.io.IOException"
