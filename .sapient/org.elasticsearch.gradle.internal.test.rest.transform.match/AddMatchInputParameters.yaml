---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.test.rest.transform.match.AddMatch"
methods:
- method:
    name: "shouldApply"
    sourceCodeSignature: "boolean shouldApply(RestTestContext testContext)"
    returnType: "boolean"
    parameters:
    - name: "testContext"
      type: "org.elasticsearch.gradle.internal.test.rest.transform.RestTestContext"
    instructionFingerprint: "7FD30DE381FDA38A96BE600B3E18DC48"
  paths:
  - testPathName: "shouldApplyWhenTestContextTestNameEqualsTestName"
    constructorSignature: "<init>(java.lang.String,com.fasterxml.jackson.databind.JsonNode,java.lang.String)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "testContext"
      valueUuid: "testContext"
    - type: "LOCAL_VARIABLE"
      name: "testContext"
      valueUuid: "testContext"
      methodExercised:
        expression: "testName():string2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.transform.match.AddMatch"
        parameters:
        - name: "matchKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "matchKey1"
            valueType: "java.lang.String"
            uuid: "matchKey"
        - name: "matchValue"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "com.fasterxml.jackson.databind.node.BigIntegerNode"
              parameters:
              - name: "v"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "java.math.BigInteger"
                  uuid: "matchValue-v"
            valueType: "com.fasterxml.jackson.databind.node.BigIntegerNode"
            uuid: "matchValue"
        - name: "testName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "testName"
      valueType: "org.elasticsearch.gradle.internal.test.rest.transform.match.AddMatch"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.rest.transform.RestTestContext"
      uuid: "testContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    branches:
    - lineNumber: 41
      expression: "testContext.testName().equals(testName)"
      range: "(41,16)-(41,54)"
      evaluatedAs: true
  - testPathName: "shouldApplyWhenTestContextTestNameNotEqualsTestName"
    constructorSignature: "<init>(java.lang.String,com.fasterxml.jackson.databind.JsonNode,java.lang.String)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "testContext"
      valueUuid: "testContext"
    - type: "LOCAL_VARIABLE"
      name: "testContext"
      valueUuid: "testContext"
      methodExercised:
        expression: "testName():string2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.transform.match.AddMatch"
        parameters:
        - name: "matchKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "matchKey1"
            valueType: "java.lang.String"
            uuid: "matchKey"
        - name: "matchValue"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "com.fasterxml.jackson.databind.node.BigIntegerNode"
              parameters:
              - name: "v"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "java.math.BigInteger"
                  uuid: "matchValue-v"
            valueType: "com.fasterxml.jackson.databind.node.BigIntegerNode"
            uuid: "matchValue"
        - name: "testName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "testName"
      valueType: "org.elasticsearch.gradle.internal.test.rest.transform.match.AddMatch"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.rest.transform.RestTestContext"
      uuid: "testContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    branches:
    - lineNumber: 41
      expression: "testContext.testName().equals(testName)"
      range: "(41,16)-(41,54)"
      evaluatedAs: false
- method:
    name: "transformTest"
    sourceCodeSignature: "void transformTest(ArrayNode matchParent)"
    returnType: "void"
    parameters:
    - name: "matchParent"
      type: "com.fasterxml.jackson.databind.node.ArrayNode"
    instructionFingerprint: "EE39728F3F7C403D150CE071E5770079"
  paths:
  - testPathName: "transformTestTest"
    constructorSignature: "<init>(java.lang.String,com.fasterxml.jackson.databind.JsonNode,java.lang.String)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "matchParent"
      valueUuid: "matchParent"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.transform.match.AddMatch"
        parameters:
        - name: "matchKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "matchKey1"
            valueType: "java.lang.String"
            uuid: "matchKey"
        - name: "matchValue"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "com.fasterxml.jackson.databind.node.BigIntegerNode"
              parameters:
              - name: "v"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "java.math.BigInteger"
                  uuid: "matchValue-v"
            valueType: "com.fasterxml.jackson.databind.node.BigIntegerNode"
            uuid: "matchValue"
        - name: "testName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "testName1"
            valueType: "java.lang.String"
            uuid: "testName"
      valueType: "org.elasticsearch.gradle.internal.test.rest.transform.match.AddMatch"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "com.fasterxml.jackson.databind.node.ArrayNode"
        parameters:
        - name: "nf"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "com.fasterxml.jackson.databind.node.JsonNodeFactory"
              parameters:
              - name: "bigDecimalExact"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "matchParent-nf-bigDecimalExact"
            valueType: "com.fasterxml.jackson.databind.node.JsonNodeFactory"
            uuid: "matchParent-nf"
      valueType: "com.fasterxml.jackson.databind.node.ArrayNode"
      uuid: "matchParent"
    - sapientType: "VOID"
      uuid: "void"
