---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.packer.CacheTestFixtureResourcesPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "328CBDCFE15039D3F39C79E0932E9DB1"
  paths:
  - testPathName: "applyTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "VersionProperties.class"
      valueUuid: "VersionProperties.class"
      methodExercised:
        expression: "getVersions():map"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "cacheCacheableTestFixtures"
      methodExercised:
        expression: "getClasspath():configurableFileCollection"
    - type: "LOCAL_VARIABLE"
      name: "t"
      valueUuid: "cacheCacheableTestFixtures"
      methodExercised:
        expression: "getClasspath():configurableFileCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurableFileCollection"
      methodExercised:
        expression: "from(objectArray):configurableFileCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurableFileCollection3"
      methodExercised:
        expression: "from(objectArray2):configurableFileCollection4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "configurationContainer"
      methodExercised:
        expression: "create(name):object"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "dependencyHandler"
      valueUuid: "dependencyHandler"
      methodExercised:
        expression: "create(string2):dependency"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "cacheTestFixturesConfiguration"
      valueUuid: "object"
      methodExercised:
        expression: "defaultDependencies(action-any):configuration"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object2"
      methodExercised:
        expression: "getSourceSets():sourceSetContainer"
    - type: "LOCAL_VARIABLE"
      name: "testSourceSet"
      valueUuid: "object3"
      methodExercised:
        expression: "getRuntimeClasspath():fileCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "withType(class-JavaPlugin,configureAction-any):domainObjectCollection"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getConfigurations():configurationContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getDependencies():dependencyHandler"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetContainer"
      methodExercised:
        expression: "getByName(name3):object3"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action2-any):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name2,class-CacheCacheableTestFixtures,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-ResolveAllDependencies):taskCollection"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.packer.CacheTestFixtureResourcesPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.packer.CacheTestFixtureResourcesPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.VersionProperties"
      uuid: "VersionProperties.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "reflections"
              valueType: "java.lang.String"
              uuid: "key"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "string"
          valueType: "java.util.Map$Entry"
          uuid: "pair"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.packer.CacheCacheableTestFixtures"
      uuid: "cacheCacheableTestFixtures"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.artifacts.Configuration"
            uuid: "object"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.ConfigurableFileCollection"
      uuid: "configurableFileCollection4"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileCollection"
            uuid: "fileCollection"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.ConfigurationContainer"
      uuid: "configurationContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "cacheTestFixtures"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.dsl.DependencyHandler"
      uuid: "dependencyHandler"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Dependency"
      uuid: "dependency"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.reflections:reflections:A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.artifacts.Configuration"
      uuid: "configuration"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.artifacts.DependencySet"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "sourceSetContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileCollection"
      uuid: "fileCollection"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.DomainObjectCollection"
      uuid: "domainObjectCollection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPlugin"
      uuid: "class-JavaPlugin"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "test"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.packer.CacheCacheableTestFixtures"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "cacheTestFixtures"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.packer.CacheCacheableTestFixtures"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.packer.CacheCacheableTestFixtures"
      uuid: "class-CacheCacheableTestFixtures"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.ResolveAllDependencies"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.ResolveAllDependencies"
      uuid: "class-ResolveAllDependencies"
    - sapientType: "VOID"
      uuid: "void2"
