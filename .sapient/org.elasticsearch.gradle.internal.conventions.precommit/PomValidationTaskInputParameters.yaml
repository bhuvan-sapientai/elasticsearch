---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
methods:
- method:
    name: "checkPom"
    sourceCodeSignature: "void checkPom()"
    returnType: "void"
    throwsExceptions:
    - "java.lang.Exception"
    instructionFingerprint: "4E78B9C1B1B47BF6C8CE94EE80574B99"
  paths:
  - testPathName: "checkPomWhenFoundErrorThrowsGradleException"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger2"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger3"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger4"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger5"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger6"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger7"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger8"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger9"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getPath():string11"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider3"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider4"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider5"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider6"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider7"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider8"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider9"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger"
      methodExercised:
        expression: "error(arg0,objectArray2):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger2"
      methodExercised:
        expression: "error(arg02,objectArray3):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger3"
      methodExercised:
        expression: "error(arg03,objectArray4):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger4"
      methodExercised:
        expression: "error(arg04,objectArray5):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger5"
      methodExercised:
        expression: "error(arg05,objectArray6):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger6"
      methodExercised:
        expression: "error(arg06,objectArray7):void6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger7"
      methodExercised:
        expression: "error(arg07,objectArray8):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger8"
      methodExercised:
        expression: "error(arg08,objectArray9):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger9"
      methodExercised:
        expression: "error(arg09,objectArray10):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider10"
      methodExercised:
        expression: "get():object13"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider3"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider4"
      methodExercised:
        expression: "get():object7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider5"
      methodExercised:
        expression: "get():object8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider6"
      methodExercised:
        expression: "get():object9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider7"
      methodExercised:
        expression: "get():object10"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider8"
      methodExercised:
        expression: "get():object11"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider9"
      methodExercised:
        expression: "get():object12"
    - type: "RESULT"
      name: "result"
      valueUuid: "gradleException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
        parameters:
        - name: "objects"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objects"
      valueType: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "fieldRegularFileProperty"
      nameForMock: "pomFile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider10"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg0"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "groupId"
            valueType: "java.lang.String"
            uuid: "element"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object5"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg02"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "artifactId"
            valueType: "java.lang.String"
            uuid: "element2"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object6"
      valueType: "java.lang.Object[]"
      uuid: "objectArray3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg03"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "version"
            valueType: "java.lang.String"
            uuid: "element3"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object7"
      valueType: "java.lang.Object[]"
      uuid: "objectArray4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg04"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "name"
            valueType: "java.lang.String"
            uuid: "element4"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object8"
      valueType: "java.lang.Object[]"
      uuid: "objectArray5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg05"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "description"
            valueType: "java.lang.String"
            uuid: "element5"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object9"
      valueType: "java.lang.Object[]"
      uuid: "objectArray6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg06"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "url"
            valueType: "java.lang.String"
            uuid: "element6"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object10"
      valueType: "java.lang.Object[]"
      uuid: "objectArray7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg07"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "licenses"
            valueType: "java.lang.String"
            uuid: "element7"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object11"
      valueType: "java.lang.Object[]"
      uuid: "objectArray8"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg08"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "developers"
            valueType: "java.lang.String"
            uuid: "element8"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object12"
      valueType: "java.lang.Object[]"
      uuid: "objectArray9"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg09"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "scm"
            valueType: "java.lang.String"
            uuid: "element9"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object13"
      valueType: "java.lang.Object[]"
      uuid: "objectArray10"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object13"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object10"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object12"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.GradleException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Check failed for task 'A', see console log for details"
            valueType: "java.lang.String"
            uuid: "string12"
      valueType: "org.gradle.api.GradleException"
      uuid: "gradleException"
    branches:
    - lineNumber: 86
      expression: "value == null"
      range: "(86,13)-(86,25)"
      evaluatedAs: true
      internalMethodName: "validateNonNull"
    - lineNumber: 69
      expression: "foundError"
      range: "(69,13)-(69,22)"
      evaluatedAs: true
  - testPathName: "checkPomWhenDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger"
      methodExercised:
        expression: "error(arg0,objectArray2):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object5"
    - type: "RESULT"
      name: "result"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "validator.run();"
      lineNumber: 89
      details: "Potential harmful system call (Runnable.run) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
        parameters:
        - name: "objects"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objects"
      valueType: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "fieldRegularFileProperty"
      nameForMock: "pomFile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg0"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "scm"
            valueType: "java.lang.String"
            uuid: "element9"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object5"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 86
      expression: "value == null"
      range: "(86,13)-(86,25)"
      evaluatedAs: false
      internalMethodName: "validateNonNull"
    - lineNumber: 46
      expression: "branch expression (line 46)"
      range: "(46,1)-(46,200)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "checkPomWhenNotFoundError"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "RESULT"
      name: "result"
      valueUuid: "void11"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "validator.run();"
      lineNumber: 89
      details: "Potential harmful system call (Runnable.run) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
        parameters:
        - name: "objects"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objects"
      valueType: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "fieldRegularFileProperty"
      nameForMock: "pomFile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "VOID"
      uuid: "void11"
    branches:
    - lineNumber: 86
      expression: "value == null"
      range: "(86,13)-(86,25)"
      evaluatedAs: false
      internalMethodName: "validateNonNull"
    - lineNumber: 69
      expression: "foundError"
      range: "(69,13)-(69,22)"
      evaluatedAs: false
  - testPathName: "checkPomWhenDefaultBranchAndFoundErrorThrowsGradleException"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getPath():string11"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger"
      methodExercised:
        expression: "error(arg0,objectArray2):void9"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider2"
      methodExercised:
        expression: "get():object5"
    - type: "RESULT"
      name: "result"
      valueUuid: "gradleException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "validator.run();"
      lineNumber: 89
      details: "Potential harmful system call (Runnable.run) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
        parameters:
        - name: "objects"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objects"
      valueType: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "fieldRegularFileProperty"
      nameForMock: "pomFile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{} {} in [{}]"
      valueType: "java.lang.String"
      uuid: "arg0"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "scm"
            valueType: "java.lang.String"
            uuid: "element9"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "is missing"
            valueType: "java.lang.String"
            uuid: "objectArray2Item2"
          2:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object5"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.GradleException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Check failed for task 'A', see console log for details"
            valueType: "java.lang.String"
            uuid: "string12"
      valueType: "org.gradle.api.GradleException"
      uuid: "gradleException"
    branches:
    - lineNumber: 86
      expression: "value == null"
      range: "(86,13)-(86,25)"
      evaluatedAs: false
      internalMethodName: "validateNonNull"
    - lineNumber: 46
      expression: "branch expression (line 46)"
      range: "(46,1)-(46,200)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "foundError"
      range: "(69,13)-(69,22)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "checkPomWhenDefaultBranchAndNotFoundError"
    constructorSignature: "<init>(org.gradle.api.model.ObjectFactory) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "pomFile"
      valueUuid: "fieldRegularFileProperty"
      methodExercised:
        expression: "getAsFile():provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object4"
    - type: "RESULT"
      name: "result"
      valueUuid: "void11"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "validator.run();"
      lineNumber: 89
      details: "Potential harmful system call (Runnable.run) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
        parameters:
        - name: "objects"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objects"
      valueType: "org.elasticsearch.gradle.internal.conventions.precommit.PomValidationTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.RegularFileProperty"
      uuid: "fieldRegularFileProperty"
      nameForMock: "pomFile"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.io.File"
      uuid: "provider"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "object4-pathname"
      valueType: "java.io.File"
      uuid: "object4"
    - sapientType: "VOID"
      uuid: "void11"
    branches:
    - lineNumber: 86
      expression: "value == null"
      range: "(86,13)-(86,25)"
      evaluatedAs: false
      internalMethodName: "validateNonNull"
    - lineNumber: 46
      expression: "branch expression (line 46)"
      range: "(46,1)-(46,200)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "foundError"
      range: "(69,13)-(69,22)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
