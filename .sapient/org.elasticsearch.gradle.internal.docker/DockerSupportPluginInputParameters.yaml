---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.docker.DockerSupportPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "59DD7397F4D0D5FDF9109E6A8CDA3A98"
  paths:
  - testPathName: "applyWhenProjectNotEqualsProjectGetRootProjectThrowsIllegalStateException"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project2"
    - type: "RESULT"
      name: "result"
      valueUuid: "illegalStateException"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.docker.DockerSupportPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.docker.DockerSupportPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project2"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.elasticsearch.gradle.internal.docker.DockerSupportPlugin\
                \ can only be applied to the root project."
            valueType: "java.lang.String"
            uuid: "s"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
    branches:
    - lineNumber: 30
      expression: "project != project.getRootProject()"
      range: "(30,13)-(30,47)"
      evaluatedAs: true
  - testPathName: "applyWhenDockerTasksIsEmptyEqualsFalse"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "buildServiceRegistry"
      methodExercised:
        expression: "registerIfAbsent(name,class-DockerSupportService,configureAction2-any):provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle"
      methodExercised:
        expression: "getSharedServices():buildServiceRegistry"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle2"
      methodExercised:
        expression: "getTaskGraph():taskExecutionGraph"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object2"
      methodExercised:
        expression: "failIfDockerUnavailable(object):void4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle2"
    - type: "LOCAL_VARIABLE"
      name: "dockerSupportServiceProvider"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskExecutionGraph"
      methodExercised:
        expression: "whenReady(action-any):void3"
    - type: "RESULT"
      name: "result"
      valueUuid: "void5"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "params.setExclusionsFile(new File(project.getRootDir(), DOCKER_ON_LINUX_EXCLUSIONS_FILE));"
      lineNumber: 37
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.docker.DockerSupportPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.docker.DockerSupportPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.services.BuildServiceRegistry"
      uuid: "buildServiceRegistry"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.elasticsearch.gradle.internal.docker.DockerSupportService"
      uuid: "provider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dockerSupportService"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.docker.DockerSupportService"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.docker.DockerSupportService"
      uuid: "class-DockerSupportService"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "taskExecutionGraph"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.docker.DockerSupportService"
      uuid: "object2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getPath1"
          valueType: "java.lang.String"
          uuid: "string"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "object"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "action-any"
    - sapientType: "VOID"
      uuid: "void5"
    branches:
    - lineNumber: 30
      expression: "project != project.getRootProject()"
      range: "(30,13)-(30,47)"
      evaluatedAs: false
    - lineNumber: 44
      expression: "branch expression (line 44)"
      evaluatedAs: true
    - lineNumber: 48
      expression: "dockerTasks.isEmpty() == false"
      range: "(48,17)-(48,46)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$3"
  - testPathName: "applyWhenDefaultBranchAndDockerTasksIsEmptyEqualsFalse"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "LOCAL_VARIABLE"
      valueUuid: "buildServiceRegistry"
      methodExercised:
        expression: "registerIfAbsent(name,class-DockerSupportService,configureAction2-any):provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle"
      methodExercised:
        expression: "getSharedServices():buildServiceRegistry"
    - type: "LOCAL_VARIABLE"
      valueUuid: "gradle2"
      methodExercised:
        expression: "getTaskGraph():taskExecutionGraph"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object2"
      methodExercised:
        expression: "failIfDockerUnavailable(object):void4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle2"
    - type: "LOCAL_VARIABLE"
      name: "dockerSupportServiceProvider"
      valueUuid: "provider"
      methodExercised:
        expression: "get():object2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskExecutionGraph"
      methodExercised:
        expression: "whenReady(action-any):void3"
    - type: "RESULT"
      name: "result"
      valueUuid: "void5"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "params.setExclusionsFile(new File(project.getRootDir(), DOCKER_ON_LINUX_EXCLUSIONS_FILE));"
      lineNumber: 37
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.docker.DockerSupportPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.docker.DockerSupportPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.services.BuildServiceRegistry"
      uuid: "buildServiceRegistry"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "org.elasticsearch.gradle.internal.docker.DockerSupportService"
      uuid: "provider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dockerSupportService"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.docker.DockerSupportService"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.docker.DockerSupportService"
      uuid: "class-DockerSupportService"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "taskExecutionGraph"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.docker.DockerSupportService"
      uuid: "object2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "objectItem1"
          valueType: "java.lang.String"
          uuid: "objectItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "object"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "org.gradle.api.execution.TaskExecutionGraph"
      uuid: "action-any"
    - sapientType: "VOID"
      uuid: "void5"
    branches:
    - lineNumber: 30
      expression: "project != project.getRootProject()"
      range: "(30,13)-(30,47)"
      evaluatedAs: false
    - lineNumber: 44
      expression: "branch expression (line 44)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "dockerTasks.isEmpty() == false"
      range: "(48,17)-(48,46)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$3"
