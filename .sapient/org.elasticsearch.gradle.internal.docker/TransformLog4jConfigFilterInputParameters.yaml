---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.docker.TransformLog4jConfigFilter"
methods:
- method:
    name: "skipBlanks"
    sourceCodeSignature: "List<String> skipBlanks(List<String> lines)"
    returnType: "java.util.List"
    genericReturnType: "java.lang.String"
    parameters:
    - name: "lines"
      type: "java.util.List"
      genericType: "java.lang.String"
    instructionFingerprint: "E514A93E712A5032B8EB702EEDD94A40"
  paths:
  - testPathName: "skipBlanksWhenLineNotIsEmpty"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lines"
      valueUuid: "lines"
    - type: "RESULT"
      name: "result"
      valueUuid: "arrayList"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "object"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "lines"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "arrayList-item0"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "arrayList"
    branches:
    - lineNumber: 38
      expression: "for-each(lines)"
      range: "(38,34)-(38,38)"
      evaluatedAs: true
    - lineNumber: 39
      expression: "line.isEmpty()"
      range: "(39,17)-(39,30)"
      evaluatedAs: false
  - testPathName: "skipBlanksWhenNotSkipNextEmpty"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lines"
      valueUuid: "lines"
    - type: "RESULT"
      name: "result"
      valueUuid: "arrayList"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "object"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "lines"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "arrayList-item0"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "arrayList"
    branches:
    - lineNumber: 38
      expression: "for-each(lines)"
      range: "(38,34)-(38,38)"
      evaluatedAs: true
    - lineNumber: 39
      expression: "line.isEmpty()"
      range: "(39,17)-(39,30)"
      evaluatedAs: true
    - lineNumber: 40
      expression: "skipNextEmpty"
      range: "(40,21)-(40,33)"
      evaluatedAs: false
- method:
    name: "transformConfig"
    sourceCodeSignature: "List<String> transformConfig(List<String> lines)"
    returnType: "java.util.List"
    genericReturnType: "java.lang.String"
    parameters:
    - name: "lines"
      type: "java.util.List"
      genericType: "java.lang.String"
    instructionFingerprint: "54BE0BE91F6B28B89F081C243F327BA0"
  paths:
  - testPathName: "transformConfigWhenLineContainsOld_style_pattern"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lines"
      valueUuid: "lines"
    - type: "RESULT"
      name: "result"
      valueUuid: "arrayList"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "old style pattern"
          valueType: "java.lang.String"
          uuid: "object"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "lines"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "int1"
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "arrayList"
    branches:
    - lineNumber: 62
      expression: "for-each(lines)"
      range: "(62,28)-(62,32)"
      evaluatedAs: true
    - lineNumber: 63
      expression: "skipNext"
      range: "(63,17)-(63,24)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "line.contains(\\\"old style pattern\\\")"
      range: "(71,17)-(71,50)"
      evaluatedAs: true
  - testPathName: "transformConfigWhen1IndexOfKeyPartsEndsWith_old"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lines"
      valueUuid: "lines"
    - type: "RESULT"
      name: "result"
      valueUuid: "arrayList"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "appender.file_old=org.apache.log4j.RollingFileAppender"
          valueType: "java.lang.String"
          uuid: "lines-0"
        - sapientType: "BASIC"
          content: !<regular>
            value: "appender.file_old.File=logs/es.log"
          valueType: "java.lang.String"
          uuid: "lines-1"
        - sapientType: "BASIC"
          content: !<regular>
            value: "appender.file_old.MaxFileSize=100MB"
          valueType: "java.lang.String"
          uuid: "lines-2"
        - sapientType: "BASIC"
          content: !<regular>
            value: "appender.file_old.MaxBackupIndex=10"
          valueType: "java.lang.String"
          uuid: "lines-3"
        - sapientType: "BASIC"
          content: !<regular>
            value: "appender.file_old.layout=org.apache.log4j.PatternLayout"
          valueType: "java.lang.String"
          uuid: "lines-4"
        - sapientType: "BASIC"
          content: !<regular>
            value: "appender.file_old.layout.ConversionPattern=%d{ISO8601} [%t] %-5p\
              \ %c{2} - %m%n"
          valueType: "java.lang.String"
          uuid: "lines-5"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "lines"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 6
            valueType: "int"
            uuid: "int1"
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "arrayList"
    branches:
    - lineNumber: 62
      expression: "for-each(lines)"
      range: "(62,28)-(62,32)"
      evaluatedAs: true
    - lineNumber: 63
      expression: "skipNext"
      range: "(63,17)-(63,24)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "line.contains(\\\"old style pattern\\\")"
      range: "(71,17)-(71,50)"
      evaluatedAs: false
    - lineNumber: 76
      expression: "line.startsWith(\\\"appender.\\\")"
      range: "(76,17)-(76,44)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "keyParts[1].equals(\\\"console\\\")"
      range: "(85,21)-(85,49)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "keyParts[1].endsWith(\\\"_old\\\")"
      range: "(85,54)-(85,81)"
      evaluatedAs: true
  - testPathName: "transformConfigWhenLineNotStartsWithLogger_"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lines"
      valueUuid: "lines"
    - type: "RESULT"
      name: "result"
      valueUuid: "arrayList"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "object"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "lines"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "arrayList-item0"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "arrayList"
    branches:
    - lineNumber: 62
      expression: "for-each(lines)"
      range: "(62,28)-(62,32)"
      evaluatedAs: true
    - lineNumber: 63
      expression: "skipNext"
      range: "(63,17)-(63,24)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "line.contains(\\\"old style pattern\\\")"
      range: "(71,17)-(71,50)"
      evaluatedAs: false
    - lineNumber: 76
      expression: "line.startsWith(\\\"appender.\\\")"
      range: "(76,17)-(76,44)"
      evaluatedAs: false
    - lineNumber: 103
      expression: "line.startsWith(\\\"rootLogger.appenderRef\\\")"
      range: "(103,24)-(103,64)"
      evaluatedAs: false
    - lineNumber: 111
      expression: "line.startsWith(\\\"logger.\\\")"
      range: "(111,24)-(111,49)"
      evaluatedAs: false
  - testPathName: "transformConfigWhenDefaultBranch"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "lines"
      valueUuid: "lines"
    - type: "RESULT"
      name: "result"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "lines"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int1"
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "resultItem1"
          valueType: "java.lang.String"
          uuid: "object"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "arrayList"
    branches:
    - lineNumber: 62
      expression: "for-each(lines)"
      range: "(62,28)-(62,32)"
      evaluatedAs: true
    - lineNumber: 63
      expression: "skipNext"
      range: "(63,17)-(63,24)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "line.contains(\\\"old style pattern\\\")"
      range: "(71,17)-(71,50)"
      evaluatedAs: false
    - lineNumber: 76
      expression: "line.startsWith(\\\"appender.\\\")"
      range: "(76,17)-(76,44)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "keyParts[1].equals(\\\"console\\\")"
      range: "(85,21)-(85,49)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "keyParts[1].endsWith(\\\"_old\\\")"
      range: "(85,54)-(85,81)"
      evaluatedAs: false
    - lineNumber: 90
      expression: "switch(keyParts[2]) = \\\"type\\\""
      range: "(91,26)-(91,31)"
      evaluatedAs: true
    - lineNumber: 90
      expression: "branch expression (line 90)"
      range: "(90,1)-(90,200)"
      evaluatedAs: true
  - testPathName: "transformConfigWhenValueEqualsRollingFile"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "lines"
      valueUuid: "lines"
    - type: "RESULT"
      name: "result"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "lines"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int1"
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "resultItem1"
          valueType: "java.lang.String"
          uuid: "string7"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "arrayList"
    branches:
    - lineNumber: 62
      expression: "for-each(lines)"
      range: "(62,28)-(62,32)"
      evaluatedAs: true
    - lineNumber: 63
      expression: "skipNext"
      range: "(63,17)-(63,24)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "line.contains(\\\"old style pattern\\\")"
      range: "(71,17)-(71,50)"
      evaluatedAs: false
    - lineNumber: 76
      expression: "line.startsWith(\\\"appender.\\\")"
      range: "(76,17)-(76,44)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "keyParts[1].equals(\\\"console\\\")"
      range: "(85,21)-(85,49)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "keyParts[1].endsWith(\\\"_old\\\")"
      range: "(85,54)-(85,81)"
      evaluatedAs: false
    - lineNumber: 90
      expression: "switch(keyParts[2]) = \\\"fileName\\\" or switch(keyParts[2]) =\
        \ \\\"filePattern\\\" or switch(keyParts[2]) = \\\"policies\\\" or switch(keyParts[2])\
        \ = \\\"strategy\\\""
      range: "(97,65)-(97,74)"
      evaluatedAs: true
    - lineNumber: 90
      expression: "switch(keyParts[2]) = \\\"type\\\""
      range: "(91,26)-(91,31)"
      evaluatedAs: true
    - lineNumber: 92
      expression: "value.equals(\\\"RollingFile\\\")"
      range: "(92,29)-(92,55)"
      evaluatedAs: true
