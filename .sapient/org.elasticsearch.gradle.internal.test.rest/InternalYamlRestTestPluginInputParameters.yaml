---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.test.rest.InternalYamlRestTestPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "F2B08A4263A16FA54BF89B8287036F63"
  paths:
  - testPathName: "applyWhenFGetNameEqualsResources"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "setupIdeForTestSourceSet(project,object2):void9"
    - type: "STATIC"
      name: "RestTestUtil.class"
      valueUuid: "RestTestUtil.class"
      methodExercised:
        expression: "registerTestTask(project,object2,taskName,class-RestIntegTestTask):taskProvider"
    - type: "STATIC"
      name: "RestTestUtil.class"
      valueUuid: "RestTestUtil.class"
      methodExercised:
        expression: "setupYamlRestTestDependenciesDefaults(project,object2,useNewTestClusters):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "f"
      valueUuid: "file"
      methodExercised:
        expression: "isDirectory():boolean1"
    - type: "LOCAL_VARIABLE"
      name: "f"
      valueUuid: "file"
      methodExercised:
        expression: "getName():string"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "object"
      methodExercised:
        expression: "create(name):object2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "yamlTestSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getResources():sourceDirectorySet"
    - type: "LOCAL_VARIABLE"
      name: "yamlTestSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      name: "yamlTestSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getOutput():sourceSetOutput2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-RestTestBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-RestResourcesPlugin):void2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceDirectorySet"
      methodExercised:
        expression: "getSrcDirs():set"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput"
      methodExercised:
        expression: "dir(provider):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput2"
      methodExercised:
        expression: "dir(provider2):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action2-any):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "named(name2):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-CopyRestApiTask):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-CopyRestApiTask):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "withType(class-CopyRestTestsTask):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action-any):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "flatMap(transformer-any):provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "flatMap(transformer2-any):provider2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void10"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.InternalYamlRestTestPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.test.rest.InternalYamlRestTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.rest.RestTestUtil"
      uuid: "RestTestUtil.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.test.RestIntegTestTask"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "yamlRestTest"
      valueType: "java.lang.String"
      uuid: "taskName"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.RestIntegTestTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.RestIntegTestTask"
      uuid: "class-RestIntegTestTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "useNewTestClusters"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "MOCK"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "resources"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "yamlRestTest"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.SourceDirectorySet"
      uuid: "sourceDirectorySet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.rest.RestTestBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.rest.RestTestBasePlugin"
      uuid: "class-RestTestBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.rest.RestResourcesPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.rest.RestResourcesPlugin"
      uuid: "class-RestResourcesPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "java.io.File"
          uuid: "file"
      valueType: "java.util.Set"
      genericValueType: "java.io.File"
      uuid: "set"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "copyRestApiSpecsTask"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "copyYamlTestsTask"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "check"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "class-CopyRestApiTask"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.rest.CopyRestTestsTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestTestsTask"
      uuid: "class-CopyRestTestsTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer2-any"
    - sapientType: "VOID"
      uuid: "void10"
    branches:
    - lineNumber: 53
      expression: "f.isDirectory()"
      range: "(53,34)-(53,48)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$1"
    - lineNumber: 53
      expression: "f.getName().equals(\\\"resources\\\")"
      range: "(53,53)-(53,83)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$1"
  - testPathName: "applyWhenFGetNameNotEqualsResources"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "setupIdeForTestSourceSet(project,object2):void9"
    - type: "STATIC"
      name: "RestTestUtil.class"
      valueUuid: "RestTestUtil.class"
      methodExercised:
        expression: "registerTestTask(project,object2,taskName,class-RestIntegTestTask):taskProvider"
    - type: "STATIC"
      name: "RestTestUtil.class"
      valueUuid: "RestTestUtil.class"
      methodExercised:
        expression: "setupYamlRestTestDependenciesDefaults(project,object2,useNewTestClusters):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-SourceSetContainer):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "f"
      valueUuid: "file"
      methodExercised:
        expression: "isDirectory():boolean1"
    - type: "LOCAL_VARIABLE"
      name: "f"
      valueUuid: "file"
      methodExercised:
        expression: "getName():string"
    - type: "LOCAL_VARIABLE"
      name: "sourceSets"
      valueUuid: "object"
      methodExercised:
        expression: "create(name):object2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      name: "yamlTestSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getResources():sourceDirectorySet"
    - type: "LOCAL_VARIABLE"
      name: "yamlTestSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getOutput():sourceSetOutput"
    - type: "LOCAL_VARIABLE"
      name: "yamlTestSourceSet"
      valueUuid: "object2"
      methodExercised:
        expression: "getOutput():sourceSetOutput2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager"
      methodExercised:
        expression: "apply(class-RestTestBasePlugin):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginManager2"
      methodExercised:
        expression: "apply(class-RestResourcesPlugin):void2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPluginManager():pluginManager2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceDirectorySet"
      methodExercised:
        expression: "getSrcDirs():set"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput"
      methodExercised:
        expression: "dir(provider):void7"
    - type: "LOCAL_VARIABLE"
      valueUuid: "sourceSetOutput2"
      methodExercised:
        expression: "dir(provider2):void8"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection"
      methodExercised:
        expression: "configureEach(action2-any):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection2"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskCollection3"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "named(name2):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "withType(class-CopyRestApiTask):taskCollection"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "withType(class-CopyRestApiTask):taskCollection2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "withType(class-CopyRestTestsTask):taskCollection3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider2"
      methodExercised:
        expression: "configure(action-any):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "flatMap(transformer-any):provider"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "flatMap(transformer2-any):provider2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void10"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.InternalYamlRestTestPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.test.rest.InternalYamlRestTestPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSet"
      uuid: "object2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.test.rest.RestTestUtil"
      uuid: "RestTestUtil.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      genericValueType: "org.elasticsearch.gradle.internal.test.RestIntegTestTask"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "yamlRestTest"
      valueType: "java.lang.String"
      uuid: "taskName"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.RestIntegTestTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.RestIntegTestTask"
      uuid: "class-RestIntegTestTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "useNewTestClusters"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.SourceSetContainer"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.SourceSetContainer"
      uuid: "class-SourceSetContainer"
    - sapientType: "MOCK"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "yamlRestTest"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.SourceDirectorySet"
      uuid: "sourceDirectorySet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.SourceSetOutput"
      uuid: "sourceSetOutput2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.rest.RestTestBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.rest.RestTestBasePlugin"
      uuid: "class-RestTestBasePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginManager"
      uuid: "pluginManager2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.rest.RestResourcesPlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.rest.RestResourcesPlugin"
      uuid: "class-RestResourcesPlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "java.io.File"
          uuid: "file"
      valueType: "java.util.Set"
      genericValueType: "java.io.File"
      uuid: "set"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "copyRestApiSpecsTask"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskCollection"
      uuid: "taskCollection3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "copyYamlTestsTask"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "check"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "class-CopyRestApiTask"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.test.rest.CopyRestTestsTask"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestTestsTask"
      uuid: "class-CopyRestTestsTask"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer2-any"
    - sapientType: "VOID"
      uuid: "void10"
    branches:
    - lineNumber: 53
      expression: "f.isDirectory()"
      range: "(53,34)-(53,48)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$1"
    - lineNumber: 53
      expression: "f.getName().equals(\\\"resources\\\")"
      range: "(53,53)-(53,83)"
      evaluatedAs: false
      internalMethodName: "lambda$apply$1"
