---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
methods:
- method:
    name: "getInputDir"
    sourceCodeSignature: "FileTree getInputDir()"
    returnType: "org.gradle.api.file.FileTree"
    instructionFingerprint: "62B7103A8A67E8AB5E2CB4050D3EAF6A"
  paths:
  - testPathName: "getInputDirWhenCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getProject():project"
    - type: "RESULT"
      name: "result"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
      nameForMock: "project"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "string5"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
    branches:
    - lineNumber: 95
      expression: "skipHasRestTestCheck"
      range: "(95,43)-(95,62)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "sourceResourceDir != null"
      range: "(149,17)-(149,41)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 161
      expression: "catch-exception (IOException)"
      range: "(161,11)-(161,30)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    catchBlockExercised:
      idExternalInstruction: 10
      id: 5
      catchExceptions:
      - "java.io.IOException"
  - testPathName: "getInputDirWhenDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "additionalYamlTestsDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object4"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "walk(path,fileVisitOptionArray):stream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "additionalYamlTestsDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.nio.file.Path"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.io.File"
            parameters:
            - name: "parent"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.io.File"
                  parameters:
                  - name: "pathname"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "pathname1"
                      valueType: "java.lang.String"
                      uuid: "file-pathname"
                valueType: "java.io.File"
                uuid: "file"
            - name: "child"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "rest-api-spec/test"
                valueType: "java.lang.String"
                uuid: "child"
          valueType: "java.io.File"
          uuid: "file2"
        methodParameters: []
        methodName: "toPath"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.FileVisitOption[]"
      uuid: "fileVisitOptionArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 95
      expression: "skipHasRestTestCheck"
      range: "(95,43)-(95,62)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "sourceResourceDir != null"
      range: "(149,17)-(149,41)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 156
      expression: "yamlTestOutputDir.exists()"
      range: "(156,17)-(156,42)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 157
      expression: "branch expression (line 157)"
      range: "(157,1)-(157,200)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    catchBlockExercised:
      idExternalInstruction: 10
      id: 3
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "getInputDirWhenIncludeGetIsEmptyNotEqualsFalse"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "additionalYamlTestsDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object4"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object6"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object8"
    - type: "FIELD"
      name: "patternSet"
      valueUuid: "fieldPatternFilterable"
      methodExercised:
        expression: "setIncludes(object7):patternFilterable"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "fileTree3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "additionalYamlTestsDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "java.lang.String"
      uuid: "fieldListProperty"
      nameForMock: "include"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          uuid: "object5Item0"
      valueType: "java.util.List"
      uuid: "object5"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "null"
      valueType: "java.util.List"
      uuid: "object6"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "fieldPatternFilterable"
      nameForMock: "patternSet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "patternFilterable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "null*/**"
          valueType: "java.lang.String"
          uuid: "object7Item1"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "NULL"
      valueType: "org.gradle.api.file.FileTree"
      uuid: "fileTree3"
    branches:
    - lineNumber: 95
      expression: "skipHasRestTestCheck"
      range: "(95,43)-(95,62)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "sourceResourceDir != null"
      range: "(149,17)-(149,41)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 156
      expression: "yamlTestOutputDir.exists()"
      range: "(156,17)-(156,42)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 95
      expression: "projectHasYamlRestTests()"
      range: "(95,67)-(95,91)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "include.get().isEmpty() == false"
      range: "(96,13)-(96,44)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "additionalConfig == null"
      range: "(101,41)-(101,64)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "projectHasYamlRestTests"
      range: "(106,16)-(106,38)"
      evaluatedAs: false
    - lineNumber: 106
      expression: "include.get().isEmpty() == false"
      range: "(106,43)-(106,74)"
      evaluatedAs: false
  - testPathName: "getInputDirWhenAdditionalConfigIsNullAndProjectHasYamlRestTests"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "additionalYamlTestsDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object4"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object6"
    - type: "FIELD"
      name: "patternSet"
      valueUuid: "fieldPatternFilterable"
      methodExercised:
        expression: "setIncludes(object7):patternFilterable"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "fileTree3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "additionalYamlTestsDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "java.lang.String"
      uuid: "fieldListProperty"
      nameForMock: "include"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object5"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "null"
      valueType: "java.util.List"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "fieldPatternFilterable"
      nameForMock: "patternSet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "patternFilterable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "null*/**"
          valueType: "java.lang.String"
          uuid: "object7Item1"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileTree"
      uuid: "fileTree3"
    branches:
    - lineNumber: 95
      expression: "skipHasRestTestCheck"
      range: "(95,43)-(95,62)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "sourceResourceDir != null"
      range: "(149,17)-(149,41)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 156
      expression: "yamlTestOutputDir.exists()"
      range: "(156,17)-(156,42)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 159
      expression: "branch expression (line 159)"
      range: "(159,1)-(159,200)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 158
      expression: "files.anyMatch(p -> p.getFileName().toString().endsWith(\\\"yml\\\
        \"))"
      range: "(158,28)-(158,90)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 95
      expression: "projectHasYamlRestTests()"
      range: "(95,67)-(95,91)"
      evaluatedAs: true
    - lineNumber: 96
      expression: "include.get().isEmpty() == false"
      range: "(96,13)-(96,44)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "projectHasYamlRestTests"
      range: "(96,49)-(96,71)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "additionalConfig == null"
      range: "(101,41)-(101,64)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "projectHasYamlRestTests"
      range: "(106,16)-(106,38)"
      evaluatedAs: true
  - testPathName: "getInputDirWhenIncludeGetIsEmptyEqualsFalse"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "additionalYamlTestsDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object4"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object6"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object8"
    - type: "FIELD"
      name: "patternSet"
      valueUuid: "fieldPatternFilterable"
      methodExercised:
        expression: "setIncludes(object7):patternFilterable"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "fileTree3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "additionalYamlTestsDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "java.lang.String"
      uuid: "fieldListProperty"
      nameForMock: "include"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          uuid: "object5Item0"
      valueType: "java.util.List"
      uuid: "object5"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "null"
      valueType: "java.util.List"
      uuid: "object6"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          uuid: "object8Item0"
      valueType: "java.util.List"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "fieldPatternFilterable"
      nameForMock: "patternSet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "patternFilterable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "null*/**"
          valueType: "java.lang.String"
          uuid: "object7Item1"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileTree"
      uuid: "fileTree3"
    branches:
    - lineNumber: 95
      expression: "skipHasRestTestCheck"
      range: "(95,43)-(95,62)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "sourceResourceDir != null"
      range: "(149,17)-(149,41)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 156
      expression: "yamlTestOutputDir.exists()"
      range: "(156,17)-(156,42)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 159
      expression: "branch expression (line 159)"
      range: "(159,1)-(159,200)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 158
      expression: "files.anyMatch(p -> p.getFileName().toString().endsWith(\\\"yml\\\
        \"))"
      range: "(158,28)-(158,90)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 95
      expression: "projectHasYamlRestTests()"
      range: "(95,67)-(95,91)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "include.get().isEmpty() == false"
      range: "(96,13)-(96,44)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "additionalConfig == null"
      range: "(101,41)-(101,64)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "projectHasYamlRestTests"
      range: "(106,16)-(106,38)"
      evaluatedAs: false
    - lineNumber: 106
      expression: "include.get().isEmpty() == false"
      range: "(106,43)-(106,74)"
      evaluatedAs: true
  - testPathName: "getInputDirWhenAdditionalConfigIsNullAndNotProjectHasYamlRestTestsAndIncludeGetIsEmptyNotEqualsFalse"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "additionalYamlTestsDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object4"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "fileTree"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "additionalYamlTestsDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "java.lang.String"
      uuid: "fieldListProperty"
      nameForMock: "include"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object5"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "NULL"
      valueType: "org.gradle.api.file.FileTree"
      uuid: "fileTree"
    branches:
    - lineNumber: 95
      expression: "skipHasRestTestCheck"
      range: "(95,43)-(95,62)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "sourceResourceDir != null"
      range: "(149,17)-(149,41)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 156
      expression: "yamlTestOutputDir.exists()"
      range: "(156,17)-(156,42)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 157
      expression: "branch expression (line 157)"
      range: "(157,1)-(157,200)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 95
      expression: "projectHasYamlRestTests()"
      range: "(95,67)-(95,91)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "include.get().isEmpty() == false"
      range: "(96,13)-(96,44)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "projectHasYamlRestTests"
      range: "(96,49)-(96,71)"
      evaluatedAs: false
    - lineNumber: 101
      expression: "additionalConfig == null"
      range: "(101,41)-(101,64)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "projectHasYamlRestTests"
      range: "(106,16)-(106,38)"
      evaluatedAs: false
    - lineNumber: 106
      expression: "include.get().isEmpty() == false"
      range: "(106,43)-(106,74)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 10
      id: 4
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "getInputDirWhenProjectHasYamlRestTestsAndAdditionalConfigIsNullAndProjectHasYamlRestTests"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "additionalYamlTestsDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object4"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object6"
    - type: "FIELD"
      name: "patternSet"
      valueUuid: "fieldPatternFilterable"
      methodExercised:
        expression: "setIncludes(object7):patternFilterable"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "walk(path,fileVisitOptionArray):stream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "fileTree3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "additionalYamlTestsDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "java.lang.String"
      uuid: "fieldListProperty"
      nameForMock: "include"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object5"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "null"
      valueType: "java.util.List"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "fieldPatternFilterable"
      nameForMock: "patternSet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "patternFilterable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "null*/**"
          valueType: "java.lang.String"
          uuid: "object7Item1"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.nio.file.Path"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.io.File"
            parameters:
            - name: "parent"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.io.File"
                  parameters:
                  - name: "pathname"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "pathname1"
                      valueType: "java.lang.String"
                      uuid: "file-pathname"
                valueType: "java.io.File"
                uuid: "file"
            - name: "child"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "rest-api-spec/test"
                valueType: "java.lang.String"
                uuid: "child"
          valueType: "java.io.File"
          uuid: "file2"
        methodParameters: []
        methodName: "toPath"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.FileVisitOption[]"
      uuid: "fileVisitOptionArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileTree"
      uuid: "fileTree3"
    branches:
    - lineNumber: 95
      expression: "skipHasRestTestCheck"
      range: "(95,43)-(95,62)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "sourceResourceDir != null"
      range: "(149,17)-(149,41)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 150
      expression: "branch expression (line 150)"
      range: "(150,1)-(150,200)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 156
      expression: "yamlTestOutputDir.exists()"
      range: "(156,17)-(156,42)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 159
      expression: "branch expression (line 159)"
      range: "(159,1)-(159,200)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 158
      expression: "files.anyMatch(p -> p.getFileName().toString().endsWith(\\\"yml\\\
        \"))"
      range: "(158,28)-(158,90)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 95
      expression: "projectHasYamlRestTests()"
      range: "(95,67)-(95,91)"
      evaluatedAs: true
    - lineNumber: 96
      expression: "include.get().isEmpty() == false"
      range: "(96,13)-(96,44)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "projectHasYamlRestTests"
      range: "(96,49)-(96,71)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "additionalConfig == null"
      range: "(101,41)-(101,64)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "projectHasYamlRestTests"
      range: "(106,16)-(106,38)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 10
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - testPathName: "getInputDirWhenNotProjectHasYamlRestTestsAndIncludeGetIsEmptyEqualsFalse"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "FIELD"
      name: "additionalYamlTestsDir"
      valueUuid: "fieldDirectoryProperty2"
      methodExercised:
        expression: "get():object4"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object5"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object6"
    - type: "FIELD"
      name: "include"
      valueUuid: "fieldListProperty"
      methodExercised:
        expression: "get():object8"
    - type: "FIELD"
      name: "patternSet"
      valueUuid: "fieldPatternFilterable"
      methodExercised:
        expression: "setIncludes(object7):patternFilterable"
    - type: "STATIC"
      name: "Files.class"
      valueUuid: "Files.class"
      methodExercised:
        expression: "walk(path,fileVisitOptionArray):stream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "fileTree3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty2"
      nameForMock: "additionalYamlTestsDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ListProperty"
      genericValueType: "java.lang.String"
      uuid: "fieldListProperty"
      nameForMock: "include"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          uuid: "object5Item0"
      valueType: "java.util.List"
      uuid: "object5"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          valueType: "java.lang.String"
          uuid: "null"
      valueType: "java.util.List"
      uuid: "object6"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          uuid: "object8Item0"
      valueType: "java.util.List"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "fieldPatternFilterable"
      nameForMock: "patternSet"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "patternFilterable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "null*/**"
          valueType: "java.lang.String"
          uuid: "object7Item1"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      genericValueType: "java.nio.file.Path"
      uuid: "stream"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.nio.file.Path"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.io.File"
            parameters:
            - name: "parent"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.io.File"
                  parameters:
                  - name: "pathname"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "pathname1"
                      valueType: "java.lang.String"
                      uuid: "file-pathname"
                valueType: "java.io.File"
                uuid: "file"
            - name: "child"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "rest-api-spec/test"
                valueType: "java.lang.String"
                uuid: "child"
          valueType: "java.io.File"
          uuid: "file2"
        methodParameters: []
        methodName: "toPath"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.FileVisitOption[]"
      uuid: "fileVisitOptionArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileTree"
      uuid: "fileTree3"
    branches:
    - lineNumber: 95
      expression: "skipHasRestTestCheck"
      range: "(95,43)-(95,62)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "sourceResourceDir != null"
      range: "(149,17)-(149,41)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 150
      expression: "branch expression (line 150)"
      range: "(150,1)-(150,200)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 156
      expression: "yamlTestOutputDir.exists()"
      range: "(156,17)-(156,42)"
      evaluatedAs: true
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 159
      expression: "branch expression (line 159)"
      range: "(159,1)-(159,200)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 158
      expression: "files.anyMatch(p -> p.getFileName().toString().endsWith(\\\"yml\\\
        \"))"
      range: "(158,28)-(158,90)"
      evaluatedAs: false
      internalMethodName: "projectHasYamlRestTests"
    - lineNumber: 95
      expression: "projectHasYamlRestTests()"
      range: "(95,67)-(95,91)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "include.get().isEmpty() == false"
      range: "(96,13)-(96,44)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "additionalConfig == null"
      range: "(101,41)-(101,64)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "projectHasYamlRestTests"
      range: "(106,16)-(106,38)"
      evaluatedAs: false
    - lineNumber: 106
      expression: "include.get().isEmpty() == false"
      range: "(106,43)-(106,74)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 10
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
- method:
    name: "copy"
    sourceCodeSignature: "void copy()"
    returnType: "void"
    instructionFingerprint: "46DEE99572C759FE8B26D0F344ED2D6D"
  paths:
  - testPathName: "copyWhenAdditionalConfigIsNull"
    constructorSignature: "<init>(org.gradle.api.file.ProjectLayout,org.gradle.internal.Factory<org.gradle.api.tasks.util.PatternSet>,org.gradle.api.file.FileSystemOperations,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getPath():string5"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getLogger():logger"
    - type: "FIELD"
      name: "fileSystemOperations"
      valueUuid: "fieldFileSystemOperations"
      methodExercised:
        expression: "delete(action-any):workResult"
    - type: "FIELD"
      name: "fileSystemOperations"
      valueUuid: "fieldFileSystemOperations"
      methodExercised:
        expression: "copy(action2-any):workResult2"
    - type: "FIELD"
      name: "outputResourceDir"
      valueUuid: "fieldDirectoryProperty"
      methodExercised:
        expression: "get():object4"
    - type: "FIELD"
      name: "patternSet"
      valueUuid: "fieldPatternFilterable"
      methodExercised:
        expression: "getIncludes():set"
    - type: "STATIC"
      name: "GradleUtils.class"
      valueUuid: "GradleUtils.class"
      methodExercised:
        expression: "getProjectPathFromTask(string5):string6"
    - type: "LOCAL_VARIABLE"
      name: "c"
      valueUuid: "copySpec"
      methodExercised:
        expression: "from(objectArray3):copySpec2"
    - type: "LOCAL_VARIABLE"
      name: "c"
      valueUuid: "copySpec"
      methodExercised:
        expression: "into(file2-any):copySpec3"
    - type: "LOCAL_VARIABLE"
      name: "c"
      valueUuid: "copySpec"
      methodExercised:
        expression: "include(set):copySpec4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "logger"
      methodExercised:
        expression: "debug(arg0,string6):void"
    - type: "LOCAL_VARIABLE"
      valueUuid: "object4"
      methodExercised:
        expression: "getAsFile():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "void2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "}"
      lineNumber: 152
      details: "No constructor found to create an object without any exception for\
        \ class org.gradle.internal.logging.slf4j.DefaultContextAwareTaskLogger"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
        parameters:
        - name: "projectLayout"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.ProjectLayout"
            uuid: "projectLayout"
        - name: "patternSetFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.internal.Factory"
            genericValueType: "org.gradle.api.tasks.util.PatternSet"
            uuid: "patternSetFactory"
        - name: "fileSystemOperations"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileSystemOperations"
            uuid: "fileSystemOperations"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
      valueType: "org.elasticsearch.gradle.internal.test.rest.CopyRestApiTask"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.logging.Logger"
      uuid: "logger"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.FileSystemOperations"
      uuid: "fieldFileSystemOperations"
      nameForMock: "fileSystemOperations"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.WorkResult"
      uuid: "workResult"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.DeleteSpec"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.WorkResult"
      uuid: "workResult2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "? super org.gradle.api.file.CopySpec"
      uuid: "action2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.DirectoryProperty"
      uuid: "fieldDirectoryProperty"
      nameForMock: "outputResourceDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.Directory"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.util.PatternFilterable"
      uuid: "fieldPatternFilterable"
      nameForMock: "patternSet"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.util.GradleUtils"
      uuid: "GradleUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProjectPathFromTask1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.gradle.api.file.FileTree"
            uuid: "fileTree"
      valueType: "java.lang.Object[]"
      uuid: "objectArray3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec3"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.file.CopySpec"
      uuid: "copySpec4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Rest specs for project [{}] will be copied to the test resources."
      valueType: "java.lang.String"
      uuid: "arg0"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "VOID"
      uuid: "void2"
    branches:
    - lineNumber: 135
      expression: "additionalConfig != null"
      range: "(135,13)-(135,36)"
      evaluatedAs: false
