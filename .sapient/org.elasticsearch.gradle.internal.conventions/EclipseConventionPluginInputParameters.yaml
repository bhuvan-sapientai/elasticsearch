---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "8EBF75A3BFD50C53599E7F30D161B9E2"
  paths:
  - testPathName: "applyWhenCaughtIOExceptionThrowsGradleException"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "FileUtils.class"
      valueUuid: "FileUtils.class"
      methodExercised:
        expression: "readFileToString(file3-any,encoding):string6"
        throwsExceptions:
        - "java.io.IOException"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family):boolean2"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family2):boolean5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-EclipseModel):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "eclipseModel"
      valueUuid: "object"
      methodExercised:
        expression: "getProject():project2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-EclipsePlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file"
    - type: "LOCAL_VARIABLE"
      name: "eclipseProject"
      valueUuid: "project2"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getName():string3"
    - type: "RESULT"
      name: "result"
      valueUuid: "gradleException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.io.FileUtils"
      uuid: "FileUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file3-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "UTF-8"
      valueType: "java.lang.String"
      uuid: "encoding"
    - sapientType: "REAL"
      valueType: "org.apache.tools.ant.taskdefs.condition.Os"
      uuid: "Os.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "class-EclipseModel"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseProject"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.EclipsePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.EclipsePlugin"
      uuid: "class-EclipsePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":x-packB"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.GradleException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Cannot configure eclipse"
            valueType: "java.lang.String"
            uuid: "message"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "org.gradle.api.GradleException"
      uuid: "gradleException"
    branches:
    - lineNumber: 45
      expression: "project.getPath().equals(\\\":\\\") == false"
      range: "(45,13)-(45,50)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(55,13)-(55,42)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "project.getRootProject().getName().equals(\\\"elasticsearch\\\"\
        )"
      range: "(135,16)-(135,73)"
      evaluatedAs: false
      internalMethodName: "root"
    - lineNumber: 59
      expression: "eclipseProject.getName().startsWith(prefix)"
      range: "(59,13)-(59,55)"
      evaluatedAs: true
    - lineNumber: 65
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(65,32)-(65,61)"
      evaluatedAs: false
    - lineNumber: 69
      expression: "catch-exception (IOException)"
      range: "(69,11)-(69,30)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
  - testPathName: "applyWhenOsNotIsFamilyOsFAMILY_WINDOWSAndCaughtIOExceptionThrowsGradleException"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "FileUtils.class"
      valueUuid: "FileUtils.class"
      methodExercised:
        expression: "readFileToString(file2-any,encoding):string7"
        throwsExceptions:
        - "java.io.IOException"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family):boolean2"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family2):boolean3"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family3):boolean6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-EclipseModel):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      name: "eclipseModel"
      valueUuid: "object"
      methodExercised:
        expression: "getProject():project2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-EclipsePlugin):plugin"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project4"
    - type: "LOCAL_VARIABLE"
      name: "eclipseProject"
      valueUuid: "project2"
      methodExercised:
        expression: "setName(string2):void"
    - type: "LOCAL_VARIABLE"
      name: "eclipseProject"
      valueUuid: "project2"
      methodExercised:
        expression: "getName():string2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getName():string4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project4"
      methodExercised:
        expression: "getRootDir():file"
    - type: "RESULT"
      name: "result"
      valueUuid: "gradleException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "licenseHeaderFile = new File(root, \\\"build-tools-internal/src/main/resources/license-headers/elastic-license-2.0-header.txt\\\
        \");"
      lineNumber: 60
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.io.FileUtils"
      uuid: "FileUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "UTF-8"
      valueType: "java.lang.String"
      uuid: "encoding"
    - sapientType: "REAL"
      valueType: "org.apache.tools.ant.taskdefs.condition.Os"
      uuid: "Os.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "class-EclipseModel"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseProject"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.EclipsePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.EclipsePlugin"
      uuid: "class-EclipsePlugin"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":x-packA"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.gradle.api.GradleException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Cannot configure eclipse"
            valueType: "java.lang.String"
            uuid: "message"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "org.gradle.api.GradleException"
      uuid: "gradleException"
    branches:
    - lineNumber: 45
      expression: "project.getPath().equals(\\\":\\\") == false"
      range: "(45,13)-(45,50)"
      evaluatedAs: true
    - lineNumber: 47
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(47,17)-(47,46)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(55,13)-(55,42)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "project.getRootProject().getName().equals(\\\"elasticsearch\\\"\
        )"
      range: "(135,16)-(135,73)"
      evaluatedAs: true
      internalMethodName: "root"
    - lineNumber: 59
      expression: "eclipseProject.getName().startsWith(prefix)"
      range: "(59,13)-(59,55)"
      evaluatedAs: true
    - lineNumber: 65
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(65,32)-(65,61)"
      evaluatedAs: false
    - lineNumber: 69
      expression: "catch-exception (IOException)"
      range: "(69,11)-(69,30)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
  - testPathName: "applyWhenSourceFolderListIsNotEmpty"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family):boolean2"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family2):boolean3"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family3):boolean6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "classpath"
      methodExercised:
        expression: "getFile():file4"
    - type: "LOCAL_VARIABLE"
      name: "copy"
      valueUuid: "copy"
      methodExercised:
        expression: "mustRunAfter(objectArray):task"
    - type: "LOCAL_VARIABLE"
      name: "copy"
      valueUuid: "copy"
      methodExercised:
        expression: "from(objectArray2):abstractCopyTask"
    - type: "LOCAL_VARIABLE"
      name: "copy"
      valueUuid: "copy"
      methodExercised:
        expression: "into(destDir):abstractCopyTask2"
    - type: "LOCAL_VARIABLE"
      name: "copy"
      valueUuid: "copy"
      methodExercised:
        expression: "filter(transformer-any):abstractCopyTask3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-EclipseModel):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "file4"
      methodExercised:
        expression: "whenMerged(action4-any):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "modularitySpec"
      methodExercised:
        expression: "getInferModulePath():property"
    - type: "LOCAL_VARIABLE"
      name: "eclipseModel"
      valueUuid: "object"
      methodExercised:
        expression: "getProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "eclipseModel"
      valueUuid: "object"
      methodExercised:
        expression: "getClasspath():classpath"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object2"
      methodExercised:
        expression: "getModularity():modularitySpec"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-EclipsePlugin):plugin"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer2"
      methodExercised:
        expression: "withType(class-JavaBasePlugin,configureAction-any):domainObjectCollection"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "eclipseProject"
      valueUuid: "project2"
      methodExercised:
        expression: "setName(string2):void"
    - type: "LOCAL_VARIABLE"
      name: "eclipseProject"
      valueUuid: "project2"
      methodExercised:
        expression: "getName():string2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getName():string4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project4"
      methodExercised:
        expression: "getRootDir():file"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "set(boolean7):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name,class-Copy,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name2,class-Delete,action-any):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "named(name5):taskProvider5"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action2-any):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "configure(action3-any):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider5"
      methodExercised:
        expression: "configure(action5-any):void8"
    - type: "RESULT"
      name: "result"
      valueUuid: "void9"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "licenseHeaderFile = new File(root, \\\"build-tools-internal/src/main/resources/license-headers/elastic-license-2.0-header.txt\\\
        \");"
      lineNumber: 60
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "REAL"
      valueType: "org.apache.tools.ant.taskdefs.condition.Os"
      uuid: "Os.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family3"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseClasspath"
      uuid: "classpath"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.api.XmlFileContentMerger"
      uuid: "file4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.Copy"
      uuid: "copy"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "wipeEclipseSettings"
            valueType: "java.lang.String"
            uuid: "objectArrayItem1"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "parent"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.io.File"
                    parameters:
                    - name: "pathname"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pathname1"
                        valueType: "java.lang.String"
                        uuid: "file-pathname"
                  valueType: "java.io.File"
                  uuid: "file"
              - name: "child"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "build-tools-internal/src/main/resources/eclipse.settings"
                  valueType: "java.lang.String"
                  uuid: "child2"
            valueType: "java.io.File"
            uuid: "file3"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ".settings"
      valueType: "java.lang.String"
      uuid: "destDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "class-EclipseModel"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "?"
      uuid: "action4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.jvm.ModularitySpec"
      uuid: "modularitySpec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Boolean"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseProject"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.EclipsePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.EclipsePlugin"
      uuid: "class-EclipsePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.DomainObjectCollection"
      uuid: "domainObjectCollection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaBasePlugin"
      uuid: "class-JavaBasePlugin"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: ":x-packA"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "elasticsearch"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "copyEclipseSettings"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.Copy"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.Copy"
      uuid: "class-Copy"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "wipeEclipseSettings"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.Delete"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.Delete"
      uuid: "class-Delete"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "cleanEclipse"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "eclipse"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "eclipseJdt"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "VOID"
      uuid: "void9"
    branches:
    - lineNumber: 45
      expression: "project.getPath().equals(\\\":\\\") == false"
      range: "(45,13)-(45,50)"
      evaluatedAs: true
    - lineNumber: 47
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(47,17)-(47,46)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(55,13)-(55,42)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "project.getRootProject().getName().equals(\\\"elasticsearch\\\"\
        )"
      range: "(135,16)-(135,73)"
      evaluatedAs: true
      internalMethodName: "root"
    - lineNumber: 59
      expression: "eclipseProject.getName().startsWith(prefix)"
      range: "(59,13)-(59,55)"
      evaluatedAs: true
    - lineNumber: 65
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(65,32)-(65,61)"
      evaluatedAs: false
    - lineNumber: 113
      expression: "branch expression (line 113)"
      evaluatedAs: true
    - lineNumber: 114
      expression: "for-each(sourceFolderList)"
      range: "(114,56)-(114,71)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$6"
  - testPathName: "applyWhenOsNotIsFamilyOsFAMILY_WINDOWSAndDefaultBranchAndSourceFolderListIsEmpty2"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family):boolean2"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family2):boolean3"
    - type: "STATIC"
      name: "Os.class.real"
      valueUuid: "Os.class.real"
      methodExercised:
        expression: "isFamily(family3):boolean6"
    - type: "LOCAL_VARIABLE"
      valueUuid: "classpath"
      methodExercised:
        expression: "getFile():file5"
    - type: "LOCAL_VARIABLE"
      name: "copy"
      valueUuid: "copy"
      methodExercised:
        expression: "mustRunAfter(objectArray):task"
    - type: "LOCAL_VARIABLE"
      name: "copy"
      valueUuid: "copy"
      methodExercised:
        expression: "from(objectArray2):abstractCopyTask"
    - type: "LOCAL_VARIABLE"
      name: "copy"
      valueUuid: "copy"
      methodExercised:
        expression: "into(destDir):abstractCopyTask2"
    - type: "LOCAL_VARIABLE"
      name: "copy"
      valueUuid: "copy"
      methodExercised:
        expression: "filter(transformer-any):abstractCopyTask3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer"
      methodExercised:
        expression: "getByType(class-EclipseModel):object"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "extensionContainer2"
      methodExercised:
        expression: "getByType(class-JavaPluginExtension):object2"
        throwsExceptions:
        - "org.gradle.api.UnknownDomainObjectException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "file5"
      methodExercised:
        expression: "whenMerged(action4-any):void5"
    - type: "LOCAL_VARIABLE"
      valueUuid: "modularitySpec"
      methodExercised:
        expression: "getInferModulePath():property"
    - type: "LOCAL_VARIABLE"
      name: "eclipseModel"
      valueUuid: "object"
      methodExercised:
        expression: "getProject():project2"
    - type: "LOCAL_VARIABLE"
      name: "eclipseModel"
      valueUuid: "object"
      methodExercised:
        expression: "getClasspath():classpath"
    - type: "LOCAL_VARIABLE"
      name: "java"
      valueUuid: "object2"
      methodExercised:
        expression: "getModularity():modularitySpec"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer"
      methodExercised:
        expression: "apply(class-EclipsePlugin):plugin"
    - type: "LOCAL_VARIABLE"
      valueUuid: "pluginContainer2"
      methodExercised:
        expression: "withType(class-JavaBasePlugin,configureAction-any):domainObjectCollection"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPath():string2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootProject():project3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getRootDir():file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer3"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer4"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getPlugins():pluginContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getExtensions():extensionContainer2"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getTasks():taskContainer5"
    - type: "LOCAL_VARIABLE"
      name: "eclipseProject"
      valueUuid: "project2"
      methodExercised:
        expression: "setName(string2):void"
    - type: "LOCAL_VARIABLE"
      name: "eclipseProject"
      valueUuid: "project2"
      methodExercised:
        expression: "getName():string2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "project3"
      methodExercised:
        expression: "getName():string4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "set(boolean7):void4"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer"
      methodExercised:
        expression: "register(name,class-Copy,configurationAction-any):taskProvider"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer2"
      methodExercised:
        expression: "register(name2,class-Delete,action-any):taskProvider2"
        throwsExceptions:
        - "org.gradle.api.InvalidUserDataException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer3"
      methodExercised:
        expression: "named(name3):taskProvider3"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer4"
      methodExercised:
        expression: "named(name4):taskProvider4"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskContainer5"
      methodExercised:
        expression: "named(name5):taskProvider5"
        throwsExceptions:
        - "org.gradle.api.UnknownTaskException"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider3"
      methodExercised:
        expression: "configure(action2-any):void2"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider4"
      methodExercised:
        expression: "configure(action3-any):void3"
    - type: "LOCAL_VARIABLE"
      valueUuid: "taskProvider5"
      methodExercised:
        expression: "configure(action5-any):void7"
    - type: "RESULT"
      name: "result"
      valueUuid: "void8"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
        parameters: []
      valueType: "org.elasticsearch.gradle.internal.conventions.EclipseConventionPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "REAL"
      valueType: "org.apache.tools.ant.taskdefs.condition.Os"
      uuid: "Os.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "windows"
      valueType: "java.lang.String"
      uuid: "family3"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseClasspath"
      uuid: "classpath"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.api.XmlFileContentMerger"
      uuid: "file5"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.Copy"
      uuid: "copy"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Task"
      uuid: "task"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "wipeEclipseSettings"
            valueType: "java.lang.String"
            uuid: "objectArrayItem1"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "parent"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.io.File"
                    parameters:
                    - name: "pathname"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pathname1"
                        valueType: "java.lang.String"
                        uuid: "file2-pathname"
                  valueType: "java.io.File"
                  uuid: "file2"
              - name: "child"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "build-tools-internal/src/main/resources/eclipse.settings"
                  valueType: "java.lang.String"
                  uuid: "child2"
            valueType: "java.io.File"
            uuid: "file4"
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ".settings"
      valueType: "java.lang.String"
      uuid: "destDir"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.AbstractCopyTask"
      uuid: "abstractCopyTask3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "object"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.model.EclipseModel"
      uuid: "class-EclipseModel"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.ExtensionContainer"
      uuid: "extensionContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "object2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaPluginExtension"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaPluginExtension"
      uuid: "class-JavaPluginExtension"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      genericValueType: "?"
      uuid: "action4-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.jvm.ModularitySpec"
      uuid: "modularitySpec"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "java.lang.Boolean"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.gradle.plugins.ide.eclipse.model.EclipseProject"
      uuid: "project2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Plugin"
      uuid: "plugin"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.plugins.ide.eclipse.EclipsePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.plugins.ide.eclipse.EclipsePlugin"
      uuid: "class-EclipsePlugin"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.plugins.PluginContainer"
      uuid: "pluginContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.DomainObjectCollection"
      uuid: "domainObjectCollection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.plugins.JavaBasePlugin"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.plugins.JavaBasePlugin"
      uuid: "class-JavaBasePlugin"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configureAction-any"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskContainer"
      uuid: "taskContainer5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "copyEclipseSettings"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.Copy"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.Copy"
      uuid: "class-Copy"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "configurationAction-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "wipeEclipseSettings"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.gradle.api.tasks.Delete"
      valueType: "java.lang.Class"
      genericValueType: "org.gradle.api.tasks.Delete"
      uuid: "class-Delete"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "cleanEclipse"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "eclipse"
      valueType: "java.lang.String"
      uuid: "name4"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.tasks.TaskProvider"
      uuid: "taskProvider5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "eclipseJdt"
      valueType: "java.lang.String"
      uuid: "name5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action2-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action3-any"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Action"
      uuid: "action5-any"
    - sapientType: "VOID"
      uuid: "void8"
    branches:
    - lineNumber: 45
      expression: "project.getPath().equals(\\\":\\\") == false"
      range: "(45,13)-(45,50)"
      evaluatedAs: true
    - lineNumber: 47
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(47,17)-(47,46)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(55,13)-(55,42)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "project.getRootProject().getName().equals(\\\"elasticsearch\\\"\
        )"
      range: "(135,16)-(135,73)"
      evaluatedAs: false
      internalMethodName: "root"
    - lineNumber: 59
      expression: "eclipseProject.getName().startsWith(prefix)"
      range: "(59,13)-(59,55)"
      evaluatedAs: false
    - lineNumber: 65
      expression: "Os.isFamily(Os.FAMILY_WINDOWS)"
      range: "(65,32)-(65,61)"
      evaluatedAs: false
    - lineNumber: 113
      expression: "branch expression (line 113)"
      evaluatedAs: false
    - lineNumber: 114
      expression: "for-each(sourceFolderList)"
      range: "(114,56)-(114,71)"
      evaluatedAs: false
      internalMethodName: "lambda$apply$6"
