---
targetClass:
  fullClassName: "org.elasticsearch.gradle.internal.conventions.GitInfoPlugin"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(Project project)"
    returnType: "void"
    parameters:
    - name: "project"
      type: "org.gradle.api.Project"
    instructionFingerprint: "E59BAF4B13738B7345D2ACBD61F6CFFF"
  paths:
  - testPathName: "applyWhenInfoGetRevisionIsNull"
    constructorSignature: "<init>(org.gradle.api.provider.ProviderFactory,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-GitInfo):property"
    - type: "FIELD"
      name: "factory"
      valueUuid: "factory"
      methodExercised:
        expression: "provider(value-any):provider"
    - type: "FIELD"
      name: "gitInfo"
      valueUuid: "property2"
      methodExercised:
        expression: "disallowChanges():void"
    - type: "FIELD"
      name: "gitInfo"
      valueUuid: "property2"
      methodExercised:
        expression: "finalizeValueOnRead():void2"
    - type: "FIELD"
      name: "gitInfo"
      valueUuid: "property2"
      methodExercised:
        expression: "map(transformer-any):provider2"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file):gitInfo"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "locateElasticsearchWorkspace(gradle):file"
    - type: "LOCAL_VARIABLE"
      name: "info"
      valueUuid: "gitInfo2"
      methodExercised:
        expression: "getRevision():revision"
    - type: "LOCAL_VARIABLE"
      name: "info"
      valueUuid: "gitInfo2"
      methodExercised:
        expression: "getRevision():revision"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(provider):property2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void3"
    - type: "STATE_VERIFICATION_FIELD"
      name: "gitInfo"
      valueUuid: "property2"
    - type: "STATE_VERIFICATION_FIELD"
      name: "revision"
      valueUuid: "provider2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.GitInfoPlugin"
        parameters:
        - name: "factory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "factory"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        propertiesMap:
          gitInfo:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.Property"
            genericValueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
            uuid: "property2"
      valueType: "org.elasticsearch.gradle.internal.conventions.GitInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "class-GitInfo"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ProviderFactory"
      uuid: "factory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "property2"
      nameForMock: "gitInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.lang.String"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.util.Util"
      uuid: "Util.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo2"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "revision"
    - sapientType: "VOID"
      uuid: "void3"
    branches:
    - lineNumber: 47
      expression: "info.getRevision() == null"
      range: "(47,40)-(47,65)"
      evaluatedAs: true
      internalMethodName: "lambda$apply$1"
  - testPathName: "applyWhenInfoGetRevisionIsNotNull"
    constructorSignature: "<init>(org.gradle.api.provider.ProviderFactory,org.gradle.api.model.ObjectFactory)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "project"
      valueUuid: "project"
    - type: "FIELD"
      name: "objectFactory"
      valueUuid: "objectFactory"
      methodExercised:
        expression: "property(class-GitInfo):property"
    - type: "FIELD"
      name: "factory"
      valueUuid: "factory"
      methodExercised:
        expression: "provider(value-any):provider"
    - type: "FIELD"
      name: "gitInfo"
      valueUuid: "property2"
      methodExercised:
        expression: "disallowChanges():void"
    - type: "FIELD"
      name: "gitInfo"
      valueUuid: "property2"
      methodExercised:
        expression: "finalizeValueOnRead():void2"
    - type: "FIELD"
      name: "gitInfo"
      valueUuid: "property2"
      methodExercised:
        expression: "map(transformer-any):provider2"
    - type: "STATIC"
      name: "GitInfo.class"
      valueUuid: "GitInfo.class"
      methodExercised:
        expression: "gitInfo(file):gitInfo"
    - type: "STATIC"
      name: "Util.class"
      valueUuid: "Util.class"
      methodExercised:
        expression: "locateElasticsearchWorkspace(gradle):file"
    - type: "LOCAL_VARIABLE"
      name: "project"
      valueUuid: "project"
      methodExercised:
        expression: "getGradle():gradle"
    - type: "LOCAL_VARIABLE"
      valueUuid: "property"
      methodExercised:
        expression: "value(provider):property2"
    - type: "RESULT"
      name: "result"
      valueUuid: "void3"
    - type: "STATE_VERIFICATION_FIELD"
      name: "gitInfo"
      valueUuid: "property2"
    - type: "STATE_VERIFICATION_FIELD"
      name: "revision"
      valueUuid: "provider2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.internal.conventions.GitInfoPlugin"
        parameters:
        - name: "factory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.ProviderFactory"
            uuid: "factory"
        - name: "objectFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.gradle.api.model.ObjectFactory"
            uuid: "objectFactory"
        propertiesMap:
          gitInfo:
            sapientType: "MOCK"
            valueType: "org.gradle.api.provider.Property"
            genericValueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
            uuid: "property2"
      valueType: "org.elasticsearch.gradle.internal.conventions.GitInfoPlugin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.Project"
      uuid: "project"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.model.ObjectFactory"
      uuid: "objectFactory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      uuid: "property"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      valueType: "java.lang.Class"
      genericValueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "class-GitInfo"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.ProviderFactory"
      uuid: "factory"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      uuid: "provider"
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "value-any"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Property"
      genericValueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "property2"
      nameForMock: "gitInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.provider.Provider"
      genericValueType: "java.lang.String"
      uuid: "provider2"
    - sapientType: "ANY"
      valueType: "org.gradle.api.Transformer"
      uuid: "transformer-any"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "GitInfo.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.info.GitInfo"
      uuid: "gitInfo"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.internal.conventions.util.Util"
      uuid: "Util.class"
    - sapientType: "MOCK"
      valueType: "org.gradle.api.invocation.Gradle"
      uuid: "gradle"
    - sapientType: "VOID"
      uuid: "void3"
    branches:
    - lineNumber: 47
      expression: "info.getRevision() == null"
      range: "(47,40)-(47,65)"
      evaluatedAs: false
      internalMethodName: "lambda$apply$1"
