---
targetClass:
  fullClassName: "org.elasticsearch.gradle.Version"
methods:
- method:
    name: "fromString"
    sourceCodeSignature: "Version fromString(final String s)"
    returnType: "org.elasticsearch.gradle.Version"
    parameters:
    - name: "s"
      type: "java.lang.String"
    instructionFingerprint: "3CCB3A0CDE0EB752491A223BA3BB6195"
  paths:
  - testPathName: "fromStringTest"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "s"
      valueUuid: "s"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(s,Enum-org.elasticsearch.gradle.Version$Mode-STRICT):version"
    - type: "RESULT"
      name: "result"
      valueUuid: "version"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "s1"
      valueType: "java.lang.String"
      uuid: "s"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version"
    - sapientType: "ENUM"
      content: !<regular>
        value: "STRICT"
      valueType: "org.elasticsearch.gradle.Version$Mode"
      uuid: "Enum-org.elasticsearch.gradle.Version$Mode-STRICT"
- method:
    name: "fromString"
    sourceCodeSignature: "Version fromString(final String s, final Mode mode)"
    returnType: "org.elasticsearch.gradle.Version"
    parameters:
    - name: "s"
      type: "java.lang.String"
    - name: "mode"
      type: "org.elasticsearch.gradle.Version$Mode"
    instructionFingerprint: "DC11A5C937DE5116DD83B9AAC69CF2D7"
  paths:
  - testPathName: "fromString1WhenModeEqualsModeSTRICTThrowsIllegalArgumentException"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "s"
      valueUuid: "s"
    - type: "INPUT"
      name: "mode"
      valueUuid: "mode"
    - type: "RESULT"
      name: "result"
      valueUuid: "illegalArgumentException"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "s"
    - sapientType: "ENUM"
      content: !<regular>
        value: "STRICT"
      valueType: "org.elasticsearch.gradle.Version$Mode"
      uuid: "mode"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Invalid version format: ''. Should be major.minor.revision[-(alpha|beta|rc)Number|-SNAPSHOT]"
            valueType: "java.lang.String"
            uuid: "string3"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
    branches:
    - lineNumber: 69
      expression: "mode == Mode.STRICT"
      range: "(69,27)-(69,45)"
      evaluatedAs: true
    - lineNumber: 70
      expression: "matcher.matches() == false"
      range: "(70,13)-(70,38)"
      evaluatedAs: true
    - lineNumber: 71
      expression: "mode == Mode.STRICT"
      range: "(71,31)-(71,49)"
      evaluatedAs: true
  - testPathName: "fromString1WhenRevisionIsNull"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "s"
      valueUuid: "s"
    - type: "INPUT"
      name: "mode"
      valueUuid: "mode"
    - type: "RESULT"
      name: "result"
      valueUuid: "version"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "s1"
      valueType: "java.lang.String"
      uuid: "s"
    - sapientType: "ENUM"
      content: !<regular>
        value: "STRICT"
      valueType: "org.elasticsearch.gradle.Version$Mode"
      uuid: "mode"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int1"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int2"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "string5"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version"
    branches:
    - lineNumber: 69
      expression: "mode == Mode.STRICT"
      range: "(69,27)-(69,45)"
      evaluatedAs: true
    - lineNumber: 70
      expression: "matcher.matches() == false"
      range: "(70,13)-(70,38)"
      evaluatedAs: false
    - lineNumber: 82
      expression: "revision == null"
      range: "(82,78)-(82,93)"
      evaluatedAs: true
  - testPathName: "fromString1WhenRevisionIsNotNull"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "s"
      valueUuid: "s"
    - type: "INPUT"
      name: "mode"
      valueUuid: "mode"
    - type: "RESULT"
      name: "result"
      valueUuid: "version"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "s1"
      valueType: "java.lang.String"
      uuid: "s"
    - sapientType: "ENUM"
      content: !<regular>
        value: "STRICT"
      valueType: "org.elasticsearch.gradle.Version$Mode"
      uuid: "mode"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int1"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int2"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int3"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "string5"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version"
    branches:
    - lineNumber: 69
      expression: "mode == Mode.STRICT"
      range: "(69,27)-(69,45)"
      evaluatedAs: true
    - lineNumber: 70
      expression: "matcher.matches() == false"
      range: "(70,13)-(70,38)"
      evaluatedAs: false
    - lineNumber: 82
      expression: "revision == null"
      range: "(82,78)-(82,93)"
      evaluatedAs: false
  - testPathName: "fromString1WhenModeNotEqualsModeSTRICTThrowsIllegalArgumentException"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "s"
      valueUuid: "s"
    - type: "INPUT"
      name: "mode"
      valueUuid: "mode"
    - type: "RESULT"
      name: "result"
      valueUuid: "illegalArgumentException"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "s"
    - sapientType: "ENUM"
      content: !<regular>
        value: "RELAXED"
      valueType: "org.elasticsearch.gradle.Version$Mode"
      uuid: "mode"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Invalid version format: ''. Should be major.minor.revision[-extra]"
            valueType: "java.lang.String"
            uuid: "string3"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
    branches:
    - lineNumber: 69
      expression: "mode == Mode.STRICT"
      range: "(69,27)-(69,45)"
      evaluatedAs: false
    - lineNumber: 70
      expression: "matcher.matches() == false"
      range: "(70,13)-(70,38)"
      evaluatedAs: true
    - lineNumber: 71
      expression: "mode == Mode.STRICT"
      range: "(71,31)-(71,49)"
      evaluatedAs: false
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "1EFB70AA9FC132D7828A67C086B6FE11"
  paths:
  - testPathName: "toStringTest"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "2.2.2"
      valueType: "java.lang.String"
      uuid: "string"
- method:
    name: "before"
    sourceCodeSignature: "boolean before(Version compareTo)"
    returnType: "boolean"
    parameters:
    - name: "compareTo"
      type: "org.elasticsearch.gradle.Version"
    instructionFingerprint: "CEEDC9BFA646B055E4097453384A41BF"
  paths:
  - testPathName: "beforeWhenIdLessThanCompareToGetId"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "LOCAL_VARIABLE"
      name: "compareTo"
      valueUuid: "compareTo"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: 10101001
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 91
      expression: "id < compareTo.getId()"
      range: "(91,16)-(91,37)"
      evaluatedAs: true
  - testPathName: "beforeWhenIdNotLessThanCompareToGetId"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "LOCAL_VARIABLE"
      name: "compareTo"
      valueUuid: "compareTo"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 91
      expression: "id < compareTo.getId()"
      range: "(91,16)-(91,37)"
      evaluatedAs: false
- method:
    name: "before"
    sourceCodeSignature: "boolean before(String compareTo)"
    returnType: "boolean"
    parameters:
    - name: "compareTo"
      type: "java.lang.String"
    instructionFingerprint: "404C5E25FEA4B8E82D713208951F9C22"
  paths:
  - testPathName: "before1WhenBeforeFromStringCompareTo"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "before(version2):boolean1"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(compareTo):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compareTo1"
      valueType: "java.lang.String"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    branches:
    - lineNumber: 95
      expression: "before(fromString(compareTo))"
      range: "(95,16)-(95,44)"
      evaluatedAs: true
  - testPathName: "before1WhenBeforeNotFromStringCompareTo"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "before(version2):boolean1"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(compareTo):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compareTo1"
      valueType: "java.lang.String"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    branches:
    - lineNumber: 95
      expression: "before(fromString(compareTo))"
      range: "(95,16)-(95,44)"
      evaluatedAs: false
- method:
    name: "onOrBefore"
    sourceCodeSignature: "boolean onOrBefore(Version compareTo)"
    returnType: "boolean"
    parameters:
    - name: "compareTo"
      type: "org.elasticsearch.gradle.Version"
    instructionFingerprint: "3D6866AF0C675F279D3CC00896314226"
  paths:
  - testPathName: "onOrBeforeWhenIdLessThanOrEqualsToCompareToGetId"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "LOCAL_VARIABLE"
      name: "compareTo"
      valueUuid: "compareTo"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: 10101000
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 99
      expression: "id <= compareTo.getId()"
      range: "(99,16)-(99,38)"
      evaluatedAs: true
  - testPathName: "onOrBeforeWhenIdGreaterThanCompareToGetId"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "LOCAL_VARIABLE"
      name: "compareTo"
      valueUuid: "compareTo"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 99
      expression: "id <= compareTo.getId()"
      range: "(99,16)-(99,38)"
      evaluatedAs: false
- method:
    name: "onOrBefore"
    sourceCodeSignature: "boolean onOrBefore(String compareTo)"
    returnType: "boolean"
    parameters:
    - name: "compareTo"
      type: "java.lang.String"
    instructionFingerprint: "D42700E424EDA93F48985B182EB7D951"
  paths:
  - testPathName: "onOrBefore1WhenOnOrBeforeFromStringCompareTo"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "onOrBefore(version2):boolean1"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(compareTo):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compareTo1"
      valueType: "java.lang.String"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    branches:
    - lineNumber: 103
      expression: "onOrBefore(fromString(compareTo))"
      range: "(103,16)-(103,48)"
      evaluatedAs: true
  - testPathName: "onOrBefore1WhenOnOrBeforeNotFromStringCompareTo"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "onOrBefore(version2):boolean1"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(compareTo):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compareTo1"
      valueType: "java.lang.String"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    branches:
    - lineNumber: 103
      expression: "onOrBefore(fromString(compareTo))"
      range: "(103,16)-(103,48)"
      evaluatedAs: false
- method:
    name: "onOrAfter"
    sourceCodeSignature: "boolean onOrAfter(Version compareTo)"
    returnType: "boolean"
    parameters:
    - name: "compareTo"
      type: "org.elasticsearch.gradle.Version"
    instructionFingerprint: "EDF940217110C65BEE915F5BD674AB32"
  paths:
  - testPathName: "onOrAfterWhenIdGreaterThanOrEqualsToCompareToGetId"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "LOCAL_VARIABLE"
      name: "compareTo"
      valueUuid: "compareTo"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 107
      expression: "id >= compareTo.getId()"
      range: "(107,16)-(107,38)"
      evaluatedAs: true
  - testPathName: "onOrAfterWhenIdLessThanCompareToGetId"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "LOCAL_VARIABLE"
      name: "compareTo"
      valueUuid: "compareTo"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: 10101001
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 107
      expression: "id >= compareTo.getId()"
      range: "(107,16)-(107,38)"
      evaluatedAs: false
- method:
    name: "onOrAfter"
    sourceCodeSignature: "boolean onOrAfter(String compareTo)"
    returnType: "boolean"
    parameters:
    - name: "compareTo"
      type: "java.lang.String"
    instructionFingerprint: "BD5A6C9083FB98056332EACAD411B36E"
  paths:
  - testPathName: "onOrAfter1WhenOnOrAfterFromStringCompareTo"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "onOrAfter(version2):boolean1"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(compareTo):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compareTo1"
      valueType: "java.lang.String"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    branches:
    - lineNumber: 111
      expression: "onOrAfter(fromString(compareTo))"
      range: "(111,16)-(111,47)"
      evaluatedAs: true
  - testPathName: "onOrAfter1WhenOnOrAfterNotFromStringCompareTo"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "onOrAfter(version2):boolean1"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(compareTo):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compareTo1"
      valueType: "java.lang.String"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    branches:
    - lineNumber: 111
      expression: "onOrAfter(fromString(compareTo))"
      range: "(111,16)-(111,47)"
      evaluatedAs: false
- method:
    name: "after"
    sourceCodeSignature: "boolean after(Version compareTo)"
    returnType: "boolean"
    parameters:
    - name: "compareTo"
      type: "org.elasticsearch.gradle.Version"
    instructionFingerprint: "CDA1B1201FE49C68543588C4960D7D58"
  paths:
  - testPathName: "afterWhenIdGreaterThanCompareToGetId"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "LOCAL_VARIABLE"
      name: "compareTo"
      valueUuid: "compareTo"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 115
      expression: "id > compareTo.getId()"
      range: "(115,16)-(115,37)"
      evaluatedAs: true
  - testPathName: "afterWhenIdNotGreaterThanCompareToGetId"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "LOCAL_VARIABLE"
      name: "compareTo"
      valueUuid: "compareTo"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: 10101000
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 115
      expression: "id > compareTo.getId()"
      range: "(115,16)-(115,37)"
      evaluatedAs: false
- method:
    name: "after"
    sourceCodeSignature: "boolean after(String compareTo)"
    returnType: "boolean"
    parameters:
    - name: "compareTo"
      type: "java.lang.String"
    instructionFingerprint: "7F212FFC6BDA70D4D7723D01C391BC6D"
  paths:
  - testPathName: "after1WhenAfterFromStringCompareTo"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "after(version2):boolean1"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(compareTo):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compareTo1"
      valueType: "java.lang.String"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    branches:
    - lineNumber: 119
      expression: "after(fromString(compareTo))"
      range: "(119,16)-(119,43)"
      evaluatedAs: true
  - testPathName: "after1WhenAfterNotFromStringCompareTo"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "compareTo"
      valueUuid: "compareTo"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "after(version2):boolean1"
    - type: "STATIC"
      name: "Version.class"
      valueUuid: "Version.class"
      methodExercised:
        expression: "fromString(compareTo):version2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "compareTo1"
      valueType: "java.lang.String"
      uuid: "compareTo"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "version2"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "Version.class"
    branches:
    - lineNumber: 119
      expression: "after(fromString(compareTo))"
      range: "(119,16)-(119,43)"
      evaluatedAs: false
- method:
    name: "compareTo"
    sourceCodeSignature: "int compareTo(Version other)"
    returnType: "int"
    parameters:
    - name: "other"
      type: "org.elasticsearch.gradle.Version"
    instructionFingerprint: "D6AF9AA75F940C214562E9AD144CF73C"
  paths:
  - testPathName: "compareToTest"
    constructorSignature: "<init>(int,int,int,java.lang.String) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      valueUuid: "other"
    - type: "LOCAL_VARIABLE"
      name: "other"
      valueUuid: "other"
      methodExercised:
        expression: "getId():int6"
    - type: "RESULT"
      name: "result"
      valueUuid: "int7"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.elasticsearch.gradle.Version"
        parameters:
        - name: "major"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "major"
        - name: "minor"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minor"
        - name: "revision"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "revision"
        - name: "qualifier"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "qualifier1"
            valueType: "java.lang.String"
            uuid: "qualifier"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.elasticsearch.gradle.Version"
      uuid: "other"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int7"
